{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/layout/AppHeader.tsx"],"sourcesContent":["import React from 'react';\nimport { SidebarTrigger } from '@/components/ui/sidebar';\n\ninterface AppHeaderProps {\n  title: string;\n}\n\nexport default function AppHeader({ title }: AppHeaderProps) {\n  return (\n    <header className=\"sticky top-0 z-10 flex h-14 items-center gap-4 border-b bg-background px-6 shadow-sm\">\n      <SidebarTrigger className=\"md:hidden\" />\n      <h1 className=\"font-headline text-xl font-semibold\">{title}</h1>\n      {/* Add other header elements like user menu, notifications here if needed */}\n    </header>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;;;AAMe,SAAS,UAAU,EAAE,KAAK,EAAkB;IACzD,qBACE,6LAAC;QAAO,WAAU;;0BAChB,6LAAC,sIAAA,CAAA,iBAAc;gBAAC,WAAU;;;;;;0BAC1B,6LAAC;gBAAG,WAAU;0BAAuC;;;;;;;;;;;;AAI3D;KARwB","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 155, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,6LAAC;QAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE;KAJS","debugId":null}},
    {"offset": {"line": 203, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firebase.ts"],"sourcesContent":["\nimport { initializeApp, getApp, getApps, type FirebaseApp } from \"firebase/app\";\nimport { getFirestore, type Firestore } from \"firebase/firestore\";\n\nconst firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n};\n\nlet app: FirebaseApp;\nlet db: Firestore;\n\nconsole.log(\"[firebase.ts] Memulai inisialisasi Firebase...\");\n\nif (getApps().length === 0) {\n  console.log(\"[firebase.ts] Tidak ada aplikasi Firebase yang terinisialisasi, membuat aplikasi baru...\");\n  app = initializeApp(firebaseConfig);\n  console.log(\"[firebase.ts] Aplikasi Firebase baru berhasil dibuat.\");\n} else {\n  console.log(\"[firebase.ts] Menggunakan aplikasi Firebase yang sudah ada.\");\n  app = getApp();\n}\n\ndb = getFirestore(app);\nconsole.log(\"[firebase.ts] Instance Firestore didapatkan. Selalu menghubungkan ke Cloud Firestore.\");\n\nexport { app, db };\n"],"names":[],"mappings":";;;;AAKU;AAJV;AAAA;AACA;AAAA;;;AAEA,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;AACP;AAEA,IAAI;AACJ,IAAI;AAEJ,QAAQ,GAAG,CAAC;AAEZ,IAAI,CAAA,GAAA,uLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,KAAK,GAAG;IAC1B,QAAQ,GAAG,CAAC;IACZ,MAAM,CAAA,GAAA,uLAAA,CAAA,gBAAa,AAAD,EAAE;IACpB,QAAQ,GAAG,CAAC;AACd,OAAO;IACL,QAAQ,GAAG,CAAC;IACZ,MAAM,CAAA,GAAA,uLAAA,CAAA,SAAM,AAAD;AACb;AAEA,KAAK,CAAA,GAAA,sKAAA,CAAA,eAAY,AAAD,EAAE;AAClB,QAAQ,GAAG,CAAC","debugId":null}},
    {"offset": {"line": 245, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/chart.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item.dataKey || item.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 580, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28app%29/dashboard/page.tsx"],"sourcesContent":["\n\"use client\";\nimport AppHeader from '@/components/layout/AppHeader';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Button } from '@/components/ui/button';\nimport { Badge } from '@/components/ui/badge';\nimport { BarChartBig, Users, ShoppingCart, ListOrdered, CreditCard, Star as StarIcon, Loader2, TrendingUp } from 'lucide-react';\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { db } from '@/lib/firebase';\nimport { collection, query, where, getDocs, Timestamp, onSnapshot, orderBy, limit } from 'firebase/firestore';\nimport { startOfDay, endOfDay, format as formatDateFns, getDaysInMonth, getDate } from 'date-fns';\nimport { id as indonesiaLocale } from 'date-fns/locale';\nimport { useToast } from '@/hooks/use-toast';\nimport type { Transaction, TransactionItem } from '@/types/transaction';\nimport type { QueueItem } from '@/app/(app)/queue/page'; \nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { ChartContainer, ChartTooltip, ChartTooltipContent, type ChartConfig } from \"@/components/ui/chart\";\n\n\ninterface DashboardSummary {\n  todaysRevenue: number;\n  transactionsToday: number;\n  queueWaiting: number;\n  queueInService: number;\n}\n\ninterface RecentTransaction extends Transaction {\n  formattedPaidAt?: string;\n}\n\ninterface PopularPaymentMethod {\n  method: string;\n  count: number;\n  percentage: string;\n}\n\ninterface BestsellingItem {\n  id: string;\n  name: string;\n  quantitySold: number;\n}\n\ninterface DailyIncomeChartData {\n  date: string; // e.g., \"01\", \"02\", ... \"31\"\n  Pemasukan: number; // Total income for that day\n}\n\nexport default function DashboardPage() {\n  const [summaryData, setSummaryData] = useState<DashboardSummary>({\n    todaysRevenue: 0,\n    transactionsToday: 0,\n    queueWaiting: 0,\n    queueInService: 0,\n  });\n  const [loadingSummary, setLoadingSummary] = useState(true);\n  const [recentTransactions, setRecentTransactions] = useState<RecentTransaction[]>([]);\n  const [loadingRecentTransactions, setLoadingRecentTransactions] = useState(true);\n  const [currentQueueDetailed, setCurrentQueueDetailed] = useState<QueueItem[]>([]);\n  const [loadingQueueDetailed, setLoadingQueueDetailed] = useState(true);\n  const [popularPaymentMethods, setPopularPaymentMethods] = useState<PopularPaymentMethod[]>([]);\n  const [loadingPaymentMethods, setLoadingPaymentMethods] = useState(true);\n  const [bestsellingItems, setBestsellingItems] = useState<BestsellingItem[]>([]);\n  const [loadingBestsellers, setLoadingBestsellers] = useState(true);\n  const [dailyIncomeData, setDailyIncomeData] = useState<DailyIncomeChartData[]>([]);\n  const [loadingDailyIncome, setLoadingDailyIncome] = useState(true);\n\n  const { toast } = useToast();\n\n  const fetchDashboardData = useCallback(async () => {\n    setLoadingSummary(true);\n    setLoadingRecentTransactions(true);\n    setLoadingPaymentMethods(true);\n    setLoadingBestsellers(true);\n    setLoadingDailyIncome(true);\n\n    try {\n      const today = new Date();\n      const todayStart = startOfDay(today);\n      const todayEnd = endOfDay(today);\n\n      // Summary: Todays Revenue & Transactions\n      const transactionsRef = collection(db, 'transactions');\n      const paidTransactionsTodayQuery = query(\n        transactionsRef,\n        where('status', '==', 'paid'),\n        where('paidAt', '>=', Timestamp.fromDate(todayStart)),\n        where('paidAt', '<=', Timestamp.fromDate(todayEnd))\n      );\n      const paidTransactionsTodaySnap = await getDocs(paidTransactionsTodayQuery);\n      let revenue = 0;\n      paidTransactionsTodaySnap.forEach(doc => {\n        revenue += (doc.data() as Transaction).total;\n      });\n      \n      setSummaryData(prev => ({\n        ...prev,\n        todaysRevenue: revenue,\n        transactionsToday: paidTransactionsTodaySnap.size,\n      }));\n      setLoadingSummary(false); \n\n      // Recent Transactions (last 5 paid)\n      const recentTransQuery = query(transactionsRef, where('status', '==', 'paid'), orderBy('paidAt', 'desc'), limit(5));\n      const recentTransSnap = await getDocs(recentTransQuery);\n      const recentTransData = recentTransSnap.docs.map(doc => {\n        const data = doc.data() as Transaction;\n        return { \n          ...data, \n          id: doc.id,\n          formattedPaidAt: data.paidAt ? formatDateFns(data.paidAt.toDate(), 'dd MMM, HH:mm', { locale: indonesiaLocale }) : 'N/A'\n        };\n      });\n      setRecentTransactions(recentTransData);\n      setLoadingRecentTransactions(false);\n\n      // Popular Payment Methods & Bestselling Items (from all paid transactions for simplicity, can be scoped later)\n      const allPaidTransactionsQuery = query(transactionsRef, where('status', '==', 'paid'));\n      const allPaidTransactionsSnap = await getDocs(allPaidTransactionsQuery);\n      \n      const paymentMethodCounts: Record<string, number> = {};\n      const itemCounts: Record<string, { name: string; quantity: number }> = {};\n      let totalPaidTransactions = 0;\n\n      allPaidTransactionsSnap.forEach(doc => {\n        const transaction = doc.data() as Transaction;\n        totalPaidTransactions++;\n        if (transaction.paymentMethod) {\n          paymentMethodCounts[transaction.paymentMethod] = (paymentMethodCounts[transaction.paymentMethod] || 0) + 1;\n        }\n        transaction.items.forEach(item => {\n          if (item.type !== 'reward_merchandise') { \n            const current = itemCounts[item.catalogItemId] || { name: item.name, quantity: 0 };\n            itemCounts[item.catalogItemId] = { \n              name: item.name, \n              quantity: current.quantity + item.quantity \n            };\n          }\n        });\n      });\n\n      const popularMethods = Object.entries(paymentMethodCounts)\n        .map(([method, count]) => ({\n          method,\n          count,\n          percentage: totalPaidTransactions > 0 ? ((count / totalPaidTransactions) * 100).toFixed(0) + \"%\" : \"0%\",\n        }))\n        .sort((a, b) => b.count - a.count)\n        .slice(0, 3);\n      setPopularPaymentMethods(popularMethods);\n      setLoadingPaymentMethods(false);\n\n      const bestsellers = Object.entries(itemCounts)\n        .map(([id, data]) => ({\n          id,\n          name: data.name,\n          quantitySold: data.quantity,\n        }))\n        .sort((a, b) => b.quantitySold - a.quantitySold)\n        .slice(0, 4);\n      setBestsellingItems(bestsellers);\n      setLoadingBestsellers(false);\n\n      // Daily Income for Current Month\n      const currentMonthStart = startOfDay(new Date(today.getFullYear(), today.getMonth(), 1));\n      const currentMonthEnd = endOfDay(new Date(today.getFullYear(), today.getMonth() + 1, 0));\n      const daysInMonth = getDaysInMonth(today);\n      const initialDailyData: DailyIncomeChartData[] = Array.from({ length: daysInMonth }, (_, i) => ({\n        date: formatDateFns(new Date(today.getFullYear(), today.getMonth(), i + 1), 'dd'),\n        Pemasukan: 0,\n      }));\n\n      const monthlyIncomeQuery = query(\n        transactionsRef,\n        where('status', '==', 'paid'),\n        where('paidAt', '>=', Timestamp.fromDate(currentMonthStart)),\n        where('paidAt', '<=', Timestamp.fromDate(currentMonthEnd)),\n        orderBy('paidAt', 'asc')\n      );\n      const monthlyIncomeSnap = await getDocs(monthlyIncomeQuery);\n      monthlyIncomeSnap.forEach(doc => {\n        const transaction = doc.data() as Transaction;\n        if (transaction.paidAt) {\n          const dayOfMonth = getDate(transaction.paidAt.toDate()); // 1-31\n          const dayIndex = dayOfMonth - 1;\n          if (initialDailyData[dayIndex]) {\n            initialDailyData[dayIndex].Pemasukan += transaction.total;\n          }\n        }\n      });\n      setDailyIncomeData(initialDailyData);\n      setLoadingDailyIncome(false);\n\n\n    } catch (error) {\n      console.error(\"Error fetching dashboard data: \", error);\n      toast({ title: \"Error\", description: \"Gagal memuat data dasbor.\", variant: \"destructive\" });\n      setLoadingSummary(false);\n      setLoadingRecentTransactions(false);\n      setLoadingQueueDetailed(false); \n      setLoadingPaymentMethods(false);\n      setLoadingBestsellers(false);\n      setLoadingDailyIncome(false);\n    }\n  }, [toast]);\n\n  useEffect(() => {\n    fetchDashboardData(); \n\n    setLoadingQueueDetailed(true);\n    const queueRef = collection(db, 'queueItems');\n    const unsubscribeQueue = onSnapshot(queueRef, async (snapshot) => {\n      try {\n        const waitingQuery = query(queueRef, where('status', '==', 'Menunggu'), orderBy('createdAt', 'asc'));\n        const inServiceQuery = query(queueRef, where('status', '==', 'Dalam Layanan'), orderBy('createdAt', 'asc'));\n        \n        const [waitingSnap, inServiceSnap] = await Promise.all([getDocs(waitingQuery), getDocs(inServiceQuery)]);\n        \n        setSummaryData(prev => ({\n          ...prev,\n          queueWaiting: waitingSnap.size,\n          queueInService: inServiceSnap.size,\n        }));\n\n        const detailedQueueData: QueueItem[] = [\n          ...waitingSnap.docs.map(doc => ({ id: doc.id, ...doc.data() } as QueueItem)),\n          ...inServiceSnap.docs.map(doc => ({ id: doc.id, ...doc.data() } as QueueItem))\n        ].sort((a, b) => (a.createdAt?.toMillis() || 0) - (b.createdAt?.toMillis() || 0)) \n         .slice(0, 5); \n\n        setCurrentQueueDetailed(detailedQueueData);\n\n      } catch (error) {\n        console.error(\"Error on queue snapshot update: \", error);\n        toast({ title: \"Error Update Antrian\", description: \"Gagal mendapatkan update antrian real-time.\", variant: \"warning\" });\n      } finally {\n        setLoadingQueueDetailed(false);\n        if (loadingSummary && !summaryData.todaysRevenue) setLoadingSummary(false);\n      }\n    }, (error) => {\n      console.error(\"Queue listener error: \", error);\n      toast({ title: \"Error Listener Antrian\", description: \"Gagal koneksi ke update antrian.\", variant: \"warning\" });\n      setLoadingQueueDetailed(false);\n      setLoadingSummary(false);\n    });\n    \n    return () => {\n      unsubscribeQueue();\n    };\n  }, [toast]); // Removed fetchDashboardData from here as it should only run once typically\n\n\n  const summaryCardsConfig = [\n    { title: \"Pendapatan Hari Ini\", getValue: () => `Rp ${summaryData.todaysRevenue.toLocaleString('id-ID')}`, icon: ShoppingCart, dataAiHint: \"grafik uang\", isLoading: loadingSummary },\n    { title: \"Transaksi Selesai Hari Ini\", getValue: () => summaryData.transactionsToday.toString(), icon: Users, dataAiHint: \"antrian orang\", isLoading: loadingSummary },\n    { title: \"Antrian Menunggu\", getValue: () => summaryData.queueWaiting.toString(), icon: ListOrdered, dataAiHint: \"daftar tunggu\", isLoading: loadingSummary || loadingQueueDetailed },\n    { title: \"Antrian Dalam Layanan\", getValue: () => summaryData.queueInService.toString(), icon: BarChartBig, dataAiHint: \"progres tugas\", isLoading: loadingSummary || loadingQueueDetailed },\n  ];\n  \n  const dailyIncomeChartConfig = {\n    Pemasukan: {\n      label: \"Pemasukan\",\n      color: \"hsl(var(--accent))\", // Menggunakan warna aksen (oranye)\n    },\n  } satisfies ChartConfig;\n\n  const formatYAxis = (tickItem: number) => `Rp ${(tickItem / 1000000).toFixed(1)} Jt`;\n\n\n  return (\n    <div className=\"flex flex-col h-full\">\n      <AppHeader title=\"Dasbor\" />\n      <main className=\"flex-1 overflow-y-auto p-6\">\n        <div className=\"grid gap-6 md:grid-cols-2 lg:grid-cols-4 mb-6\">\n          {summaryCardsConfig.map((card) => (\n            <Card key={card.title}>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">{card.title}</CardTitle>\n                {card.isLoading ? <Loader2 className=\"h-5 w-5 text-muted-foreground animate-spin\" /> : <card.icon className=\"h-5 w-5 text-muted-foreground\" />}\n              </CardHeader>\n              <CardContent>\n                {card.isLoading ? <div className=\"text-2xl font-bold\">-</div> : <div className=\"text-2xl font-bold\">{card.getValue()}</div>}\n              </CardContent>\n            </Card>\n          ))}\n        </div>\n\n        <Card className=\"mb-6\">\n            <CardHeader>\n                <CardTitle className=\"flex items-center\">\n                    <TrendingUp className=\"mr-2 h-5 w-5 text-primary\" />\n                    Pendapatan Harian (Bulan Ini)\n                </CardTitle>\n                <CardDescription>Total pendapatan dari transaksi terbayar per hari dalam bulan ini.</CardDescription>\n            </CardHeader>\n            <CardContent>\n                {loadingDailyIncome ? (\n                    <div className=\"flex items-center justify-center h-[350px]\"><Loader2 className=\"h-10 w-10 animate-spin text-primary\" /></div>\n                ) : dailyIncomeData.length === 0 ? (\n                    <p className=\"text-center text-muted-foreground py-10 h-[350px] flex items-center justify-center\">Belum ada data pendapatan untuk bulan ini.</p>\n                ) : (\n                <ChartContainer config={dailyIncomeChartConfig} className=\"h-[350px] w-full\">\n                    <BarChart accessibilityLayer data={dailyIncomeData} margin={{ top: 5, right: 20, left: 20, bottom: 5 }}>\n                        <CartesianGrid vertical={false} strokeDasharray=\"3 3\" />\n                        <XAxis \n                            dataKey=\"date\" \n                            tickLine={false} \n                            axisLine={false} \n                            tickMargin={8}\n                            tickFormatter={(value) => value} // Display day number e.g. \"01\", \"15\"\n                        />\n                        <YAxis \n                            tickFormatter={formatYAxis} \n                            tickLine={false} \n                            axisLine={false} \n                            tickMargin={8}\n                        />\n                        <ChartTooltip \n                            cursor={false} \n                            content={<ChartTooltipContent \n                                        labelFormatter={(value, payload) => `Tgl ${value}/${formatDateFns(new Date(), 'MM', {locale: indonesiaLocale})}`}\n                                        formatter={(value) => `Rp ${Number(value).toLocaleString('id-ID')}`} \n                                        indicator=\"dot\" \n                                     />} \n                        />\n                        <Bar dataKey=\"Pemasukan\" fill=\"var(--color-Pemasukan)\" radius={4} />\n                    </BarChart>\n                </ChartContainer>\n                )}\n            </CardContent>\n        </Card>\n\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Transaksi Terkini</CardTitle>\n              <CardDescription>5 penjualan terakhir yang sudah dibayar.</CardDescription>\n            </CardHeader>\n            <CardContent>\n              {loadingRecentTransactions ? (\n                <div className=\"flex items-center justify-center py-10\"><Loader2 className=\"h-7 w-7 animate-spin text-primary\" /></div>\n              ) : recentTransactions.length === 0 ? (\n                <p className=\"text-center text-muted-foreground py-4\">Tidak ada transaksi terbayar.</p>\n              ) : (\n                <div className=\"space-y-3\">\n                  {recentTransactions.map((tx) => (\n                    <div key={tx.id} className=\"flex items-center justify-between p-3 rounded-md border\">\n                      <div>\n                        <p className=\"font-medium\">{tx.customerName}</p>\n                        <p className=\"text-sm text-muted-foreground\">\n                          {tx.items.length > 0 ? tx.items[0].name : 'Item tidak tersedia'}\n                          {tx.items.length > 1 ? ` (+${tx.items.length - 1} lainnya)` : ''}\n                        </p>\n                        <p className=\"text-xs text-muted-foreground\">{tx.formattedPaidAt}</p>\n                      </div>\n                      <p className=\"font-semibold text-primary\">Rp {tx.total.toLocaleString('id-ID')}</p>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </CardContent>\n          </Card>\n          \n          <Card>\n            <CardHeader>\n              <CardTitle>Antrian Saat Ini</CardTitle>\n              <CardDescription>Pelanggan menunggu atau sedang dilayani.</CardDescription>\n            </CardHeader>\n            <CardContent>\n              {loadingQueueDetailed ? (\n                <div className=\"flex items-center justify-center py-10\"><Loader2 className=\"h-7 w-7 animate-spin text-primary\" /></div>\n              ) : currentQueueDetailed.length === 0 ? (\n                <p className=\"text-center text-muted-foreground py-4\">Antrian kosong.</p>\n              ) : (\n                <div className=\"space-y-3\">\n                  {currentQueueDetailed.map((item) => (\n                    <div key={item.id} className=\"flex items-center justify-between p-3 rounded-md border bg-card\">\n                      <div className=\"flex items-center gap-3\">\n                         {item.status === 'Menunggu' ? <ListOrdered className=\"h-5 w-5 text-yellow-500\" /> : <BarChartBig className=\"h-5 w-5 text-blue-500\" />}\n                         <div>\n                           <p className=\"font-medium\">{item.customerName}</p>\n                           <p className=\"text-xs text-muted-foreground\">{item.service}</p>\n                         </div>\n                      </div>\n                      <Badge variant={item.status === 'Menunggu' ? 'outline' : 'default'} className=\"capitalize\">\n                        {item.status}\n                      </Badge>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center\">\n                <CreditCard className=\"h-5 w-5 mr-2 text-primary\" />\n                Metode Pembayaran Populer\n              </CardTitle>\n              <CardDescription>Metode pembayaran yang paling sering digunakan.</CardDescription>\n            </CardHeader>\n            <CardContent>\n              {loadingPaymentMethods ? (\n                <div className=\"flex items-center justify-center py-10\"><Loader2 className=\"h-7 w-7 animate-spin text-primary\" /></div>\n              ) : popularPaymentMethods.length === 0 ? (\n                <p className=\"text-center text-muted-foreground py-4\">Belum ada data pembayaran.</p>\n              ) : (\n                <div className=\"space-y-3\">\n                  {popularPaymentMethods.map((pm) => (\n                    <div key={pm.method} className=\"flex justify-between items-center\">\n                      <span>{pm.method}</span>\n                      <Badge variant=\"secondary\" className=\"text-sm\">{pm.percentage} ({pm.count})</Badge>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"flex items-center\">\n                <StarIcon className=\"h-5 w-5 mr-2 text-primary\" />\n                Layanan & Produk Terlaris\n              </CardTitle>\n              <CardDescription>Item yang paling banyak terjual.</CardDescription>\n            </CardHeader>\n            <CardContent>\n              {loadingBestsellers ? (\n                <div className=\"flex items-center justify-center py-10\"><Loader2 className=\"h-7 w-7 animate-spin text-primary\" /></div>\n              ) : bestsellingItems.length === 0 ? (\n                 <p className=\"text-center text-muted-foreground py-4\">Belum ada item terjual.</p>\n              ) : (\n                <div className=\"space-y-3\">\n                  {bestsellingItems.map((item) => (\n                    <div key={item.id} className=\"flex items-center justify-between\">\n                      <span className=\"truncate max-w-[70%]\">{item.name}</span>\n                      <Badge variant=\"default\" className=\"text-sm\">{item.quantitySold}x</Badge>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </div>\n      </main>\n    </div>\n  );\n}\n\n\n\n"],"names":[],"mappings":"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","debugId":null}}]
}