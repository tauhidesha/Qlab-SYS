{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/embed-text-flow.ts"],"sourcesContent":["\n'use server';\n/**\n * @fileOverview A simple flow to generate text embeddings.\n */\n\nimport { ai } from '@/ai/genkit';\nimport { embed } from 'genkit';\n\n/**\n * Generates an embedding vector for a given piece of text.\n * @param text The text to embed.\n * @returns A promise that resolves to an array of numbers representing the embedding.\n */\nexport async function embedText(text: string): Promise<number[]> {\n  try {\n    const { embedding } = await embed({\n      model: 'googleai/text-embedding-004',\n      content: text,\n    });\n    return embedding;\n  } catch (error) {\n    console.error(\"Error generating text embedding:\", error);\n    // Return an empty array or throw an error, depending on desired handling\n    throw new Error(\"Failed to generate text embedding.\");\n  }\n}\n"],"names":[],"mappings":";;;;;AAOA;AAAA;;;;;AAOO,eAAe,UAAU,IAAY;IAC1C,IAAI;QACF,MAAM,EAAE,SAAS,EAAE,GAAG,MAAM,CAAA,GAAA,uIAAA,CAAA,QAAK,AAAD,EAAE;YAChC,OAAO;YACP,SAAS;QACX;QACA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,oCAAoC;QAClD,yEAAyE;QACzE,MAAM,IAAI,MAAM;IAClB;AACF;;;IAZsB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 242, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/%28app%29/services/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {embedText as '40fb659f9b18e8a5d14b6373a67023c25e58627d25'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 300, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28app%29/services/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(app)/services/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(app)/services/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAmS,GAChU,iEACA","debugId":null}},
    {"offset": {"line": 314, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28app%29/services/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(app)/services/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(app)/services/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA+Q,GAC5S,6CACA","debugId":null}},
    {"offset": {"line": 328, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}