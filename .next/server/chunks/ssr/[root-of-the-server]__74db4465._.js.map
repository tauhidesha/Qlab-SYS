{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firebase.ts"],"sourcesContent":["\nimport { initializeApp, getApp, getApps, type FirebaseApp } from \"firebase/app\";\nimport { getFirestore, type Firestore } from \"firebase/firestore\";\n\n// Log environment variables right at the start of this module's execution\nconsole.log(\"[firebase.ts] Reading NEXT_PUBLIC_FIREBASE_PROJECT_ID:\", process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID);\nconsole.log(\"[firebase.ts] Reading NEXT_PUBLIC_FIREBASE_API_KEY:\", process.env.NEXT_PUBLIC_FIREBASE_API_KEY ? \"Exists\" : \"MISSING\");\n\nconst firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n};\n\n// Log the constructed firebaseConfig\nconsole.log(\"[firebase.ts] Firebase config to be used:\", JSON.stringify(firebaseConfig, null, 2));\n\nlet app: FirebaseApp;\nlet db: Firestore;\n\nconsole.log(\"[firebase.ts] Memulai inisialisasi Firebase (selalu ke Cloud)...\");\n\nif (!firebaseConfig.projectId || !firebaseConfig.apiKey) {\n  console.error(\"--------------------------------------------------------------------\");\n  console.error(\"[firebase.ts] KESALAHAN FATAL: Firebase projectId atau apiKey KOSONG!\");\n  console.error(\"[firebase.ts] Pastikan file .env sudah ada di root proyek dan berisi variabel Firebase yang benar (NEXT_PUBLIC_FIREBASE_PROJECT_ID, NEXT_PUBLIC_FIREBASE_API_KEY, dll).\");\n  console.error(\"[firebase.ts] Jalankan 'npm run genkit:dev' dari terminal di root folder proyek Anda.\");\n  console.error(\"--------------------------------------------------------------------\");\n  // Throw an error or handle appropriately if critical config is missing\n  // For now, we let it proceed so initializeApp might show its own error, but this log is critical.\n}\n\n\nif (getApps().length === 0) {\n  console.log(\"[firebase.ts] Tidak ada aplikasi Firebase yang terinisialisasi, membuat aplikasi baru...\");\n  try {\n    app = initializeApp(firebaseConfig);\n    console.log(\"[firebase.ts] Aplikasi Firebase baru berhasil dibuat. Project ID:\", app.options.projectId);\n  } catch (e) {\n    console.error(\"[firebase.ts] Gagal menginisialisasi aplikasi Firebase:\", e);\n    // throw e; // Re-throw if you want to halt execution, or handle gracefully\n  }\n} else {\n  console.log(\"[firebase.ts] Menggunakan aplikasi Firebase yang sudah ada.\");\n  app = getApp();\n  console.log(\"[firebase.ts] Aplikasi Firebase yang ada. Project ID:\", app.options.projectId);\n}\n\ntry {\n  // @ts-ignore\n  db = getFirestore(app);\n  console.log(\"[firebase.ts] Instance Firestore didapatkan. Selalu menghubungkan ke Cloud Firestore.\");\n} catch (e) {\n   // @ts-ignore\n  console.error(\"[firebase.ts] Gagal mendapatkan instance Firestore:\", e?.message);\n  // @ts-ignore\n  console.error(\"[firebase.ts] Detail error Firestore:\", e);\n}\n\n\nexport { app, db };\n"],"names":[],"mappings":";;;;AACA;AAAA;AACA;AAAA;;;AAEA,0EAA0E;AAC1E,QAAQ,GAAG,CAAC;AACZ,QAAQ,GAAG,CAAC,uDAAuD,uCAA2C;AAE9G,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;AACP;AAEA,qCAAqC;AACrC,QAAQ,GAAG,CAAC,6CAA6C,KAAK,SAAS,CAAC,gBAAgB,MAAM;AAE9F,IAAI;AACJ,IAAI;AAEJ,QAAQ,GAAG,CAAC;AAEZ,IAAI,CAAC,eAAe,SAAS,IAAI,CAAC,eAAe,MAAM,EAAE;IACvD,QAAQ,KAAK,CAAC;IACd,QAAQ,KAAK,CAAC;IACd,QAAQ,KAAK,CAAC;IACd,QAAQ,KAAK,CAAC;IACd,QAAQ,KAAK,CAAC;AACd,uEAAuE;AACvE,kGAAkG;AACpG;AAGA,IAAI,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,KAAK,GAAG;IAC1B,QAAQ,GAAG,CAAC;IACZ,IAAI;QACF,MAAM,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE;QACpB,QAAQ,GAAG,CAAC,qEAAqE,IAAI,OAAO,CAAC,SAAS;IACxG,EAAE,OAAO,GAAG;QACV,QAAQ,KAAK,CAAC,2DAA2D;IACzE,2EAA2E;IAC7E;AACF,OAAO;IACL,QAAQ,GAAG,CAAC;IACZ,MAAM,CAAA,GAAA,oLAAA,CAAA,SAAM,AAAD;IACX,QAAQ,GAAG,CAAC,yDAAyD,IAAI,OAAO,CAAC,SAAS;AAC5F;AAEA,IAAI;IACF,aAAa;IACb,KAAK,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE;IAClB,QAAQ,GAAG,CAAC;AACd,EAAE,OAAO,GAAG;IACT,aAAa;IACd,QAAQ,KAAK,CAAC,uDAAuD,GAAG;IACxE,aAAa;IACb,QAAQ,KAAK,CAAC,yCAAyC;AACzD","debugId":null}},
    {"offset": {"line": 281, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["\nimport '@/lib/firebase'; // Ensure Firebase is initialized early\nimport {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai'; // Impor plugin Google AI\n\nexport const ai = genkit({\n  plugins: [\n    googleAI(), // Gunakan plugin Google AI\n  ],\n  model: 'googleai/gemini-1.5-flash-latest', // Mengubah ke model yang lebih stabil\n  // Opsi telemetry tidak lagi dikonfigurasi di sini untuk Genkit v1.x\n  // Jika butuh logging, konfigurasi dilakukan secara berbeda atau via environment.\n});\n"],"names":[],"mappings":";;;AACA,8MAAyB,uCAAuC;AAChE;AAAA;AACA,8TAA8C,yBAAyB;AAAvE;;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QACP,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KACR;IACD,OAAO;AAGT","debugId":null}},
    {"offset": {"line": 304, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/types/aiToolSchemas.ts"],"sourcesContent":["\nimport { z } from 'zod';\n\n// Skema untuk varian produk/layanan yang akan dikembalikan oleh tool\nconst ProductVariantInfoSchema = z.object({\n  name: z.string().describe(\"Nama varian.\"),\n  price: z.number().describe(\"Harga varian.\"),\n  pointsAwarded: z.number().optional().describe(\"Poin yang diberikan untuk varian ini.\"),\n  estimatedDuration: z.string().optional().describe(\"Estimasi durasi pengerjaan varian ini (jika layanan).\"),\n});\nexport type ProductVariantInfo = z.infer<typeof ProductVariantInfoSchema>;\n\n// Skema untuk informasi produk/layanan yang akan dikembalikan oleh tool\nexport const ProductServiceInfoSchema = z.object({\n  id: z.string().describe(\"ID unik produk/layanan.\"),\n  name: z.string().describe(\"Nama produk atau layanan.\"),\n  type: z.enum(['Layanan', 'Produk']).describe(\"Jenis item, apakah 'Layanan' atau 'Produk'.\"),\n  category: z.string().describe(\"Kategori produk/layanan.\"),\n  price: z.number().describe(\"Harga dasar produk/layanan. Bisa 0 jika harga ditentukan oleh varian.\"),\n  description: z.string().optional().describe(\"Deskripsi singkat produk/layanan.\"),\n  pointsAwarded: z.number().optional().describe(\"Poin loyalitas yang diberikan untuk produk/layanan dasar ini.\"),\n  estimatedDuration: z.string().optional().describe(\"Estimasi durasi pengerjaan (jika ini adalah layanan).\"),\n  variants: z.array(ProductVariantInfoSchema).optional().describe(\"Daftar varian yang tersedia untuk produk/layanan ini.\"),\n});\nexport type ProductServiceInfo = z.infer<typeof ProductServiceInfoSchema>;\n\n// Skema untuk informasi motor klien\nconst ClientMotorcycleInfoSchema = z.object({\n  name: z.string().describe(\"Nama atau model motor.\"),\n  licensePlate: z.string().describe(\"Plat nomor motor.\"),\n});\nexport type ClientMotorcycleInfo = z.infer<typeof ClientMotorcycleInfoSchema>;\n\n// Skema untuk informasi klien yang akan dikembalikan oleh tool\nexport const ClientInfoSchema = z.object({\n  id: z.string().describe(\"ID unik klien.\"),\n  name: z.string().describe(\"Nama lengkap klien.\"),\n  phone: z.string().describe(\"Nomor telepon klien.\"),\n  loyaltyPoints: z.number().describe(\"Jumlah poin loyalitas yang dimiliki klien.\"),\n  motorcycles: z.array(ClientMotorcycleInfoSchema).optional().describe(\"Daftar sepeda motor yang terdaftar atas nama klien ini.\"),\n  lastVisit: z.string().optional().describe(\"Tanggal kunjungan terakhir klien (format YYYY-MM-DD).\"),\n});\nexport type ClientInfo = z.infer<typeof ClientInfoSchema>;\n"],"names":[],"mappings":";;;;AACA;;AAEA,qEAAqE;AACrE,MAAM,2BAA2B,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACxC,MAAM,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC1B,OAAO,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC3B,eAAe,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;IAC9C,mBAAmB,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;AACpD;AAIO,MAAM,2BAA2B,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC/C,IAAI,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACxB,MAAM,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC1B,MAAM,oIAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAW;KAAS,EAAE,QAAQ,CAAC;IAC7C,UAAU,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC9B,OAAO,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC3B,aAAa,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;IAC5C,eAAe,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;IAC9C,mBAAmB,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;IAClD,UAAU,oIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,0BAA0B,QAAQ,GAAG,QAAQ,CAAC;AAClE;AAGA,oCAAoC;AACpC,MAAM,6BAA6B,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC1C,MAAM,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC1B,cAAc,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACpC;AAIO,MAAM,mBAAmB,oIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACvC,IAAI,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACxB,MAAM,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC1B,OAAO,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC3B,eAAe,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACnC,aAAa,oIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,4BAA4B,QAAQ,GAAG,QAAQ,CAAC;IACrE,WAAW,oIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;AAC5C","debugId":null}},
    {"offset": {"line": 350, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/tools/productLookupTool.ts"],"sourcesContent":["'use server';\n/**\n * @fileOverview Genkit tool for looking up product or service details from Firestore.\n */\nimport {ai}from '@/ai/genkit';\nimport {z}from 'genkit';\nimport { collection, query, where, getDocs, limit } from 'firebase/firestore';\nimport { db } from '@/lib/firebase';\nimport type { ServiceProduct, ServiceProductVariant } from '@/app/(app)/services/page';\nimport { ProductServiceInfoSchema, type ProductServiceInfo } from '@/types/aiToolSchemas';\n\nconst ProductLookupInputSchema = z.object({\n  productName: z.string().describe(\"Nama produk atau layanan yang ingin dicari detailnya. Bisa umum seperti 'coating', 'paket detailing', atau spesifik seperti 'Cuci Motor Premium Vario'. Tool akan mencoba mencocokkan dengan nama item, varian, atau kategori.\"),\n});\n\nexport const getProductServiceDetailsByNameTool = ai.defineTool(\n  {\n    name: 'getProductServiceDetailsByNameTool',\n    description: 'Mencari dan mengembalikan detail spesifik dari sebuah produk atau layanan berdasarkan namanya. Jika nama umum, bisa mengembalikan beberapa item yang relevan atau item dasar dengan variannya. Berguna untuk menjawab pertanyaan pelanggan tentang harga, durasi, ketersediaan, atau deskripsi item tertentu.',\n    inputSchema: ProductLookupInputSchema, // Menggunakan ProductLookupInputSchema yang sudah didefinisikan\n    outputSchema: z.union([ProductServiceInfoSchema, z.array(ProductServiceInfoSchema), z.null()]).describe(\"Objek berisi detail produk/layanan, array objek jika beberapa item relevan, atau null jika tidak ditemukan.\"),\n  },\n  async (input) => {\n    if (!input.productName || input.productName.trim() === '') {\n      console.log(\"ProductLookupTool: Nama produk kosong.\");\n      return null;\n    }\n    const searchTerm = input.productName.trim().toLowerCase();\n    console.log(`ProductLookupTool: Mencari produk/layanan dengan nama/keyword: \"${searchTerm}\"`);\n\n    try {\n      const servicesRef = collection(db, 'services');\n      const q = query(servicesRef); // Ambil semua dulu, lalu filter di client-side untuk fleksibilitas\n      const querySnapshot = await getDocs(q);\n\n      if (querySnapshot.empty) {\n        console.log(\"ProductLookupTool: Tidak ada item layanan/produk di database.\");\n        return null;\n      }\n\n      const allItems: ServiceProduct[] = querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() } as ServiceProduct));\n      let matchedItems: ServiceProduct[] = [];\n\n      // Fase 1: Cari kecocokan persis atau sangat dekat\n      for (const item of allItems) {\n        const itemNameLower = item.name.toLowerCase();\n        // Cocok persis dengan nama item dasar\n        if (itemNameLower === searchTerm) {\n          matchedItems.push(item);\n          continue; \n        }\n        // Cocok persis dengan nama varian\n        if (item.variants) {\n          for (const variant of item.variants) {\n            const fullVariantNameLower = `${item.name} - ${variant.name}`.toLowerCase();\n            if (fullVariantNameLower === searchTerm) {\n              // Buat \"item\" baru yang merepresentasikan varian ini\n              const variantAsItem: ServiceProduct = {\n                ...item,\n                name: `${item.name} - ${variant.name}`,\n                price: variant.price,\n                pointsAwarded: variant.pointsAwarded ?? item.pointsAwarded,\n                estimatedDuration: variant.estimatedDuration ?? item.estimatedDuration,\n                variants: undefined, // Varian tidak punya sub-varian di sini\n              };\n              matchedItems.push(variantAsItem);\n              break; \n            }\n          }\n        }\n      }\n\n      // Fase 2: Jika belum ada kecocokan persis, cari kecocokan parsial\n      if (matchedItems.length === 0) {\n        for (const item of allItems) {\n          const itemNameLower = item.name.toLowerCase();\n          // Query terkandung dalam nama item (mis. query \"coating\", item \"Nano Coating\")\n          if (itemNameLower.includes(searchTerm)) {\n            matchedItems.push(item);\n            continue;\n          }\n          // Nama item terkandung dalam query (mis. query \"harga coating xmax\", item \"Coating XMAX\")\n          if (searchTerm.includes(itemNameLower)) {\n             matchedItems.push(item);\n             continue;\n          }\n          // Query cocok dengan salah satu nama varian secara parsial\n          if (item.variants) {\n            for (const variant of item.variants) {\n              const fullVariantNameLower = `${item.name} - ${variant.name}`.toLowerCase();\n              if (fullVariantNameLower.includes(searchTerm) || searchTerm.includes(variant.name.toLowerCase())) {\n                 // Jika query cocok parsial dengan varian, kembalikan item dasarnya dengan semua variannya\n                 // agar AI bisa memilih atau menyajikan.\n                if (!matchedItems.find(m => m.id === item.id)) { // Hindari duplikasi item dasar\n                    matchedItems.push(item);\n                }\n                break; \n              }\n            }\n          }\n        }\n      }\n      \n      // Fase 3: Jika masih belum ada, coba cari berdasarkan kategori\n      if (matchedItems.length === 0) {\n        for (const item of allItems) {\n            if (item.category.toLowerCase().includes(searchTerm)) {\n                 matchedItems.push(item);\n            }\n        }\n      }\n\n\n      if (matchedItems.length === 0) {\n        console.log(`ProductLookupTool: Tidak ada produk/layanan yang cocok dengan \"${input.productName}\".`);\n        return null;\n      }\n\n      // Ubah hasil menjadi format ProductServiceInfoSchema\n      const resultsForAI: ProductServiceInfo[] = matchedItems.map(item => {\n        let effectiveName = item.name;\n        let effectivePrice = item.price;\n        let effectivePoints = item.pointsAwarded;\n        let effectiveDuration = item.estimatedDuration;\n        let itemIsSpecificVariantRepresentation = false;\n\n        // Cek apakah 'item' ini adalah representasi varian yang kita buat di Fase 1\n        if (item.variants === undefined && allItems.some(originalItem => originalItem.id === item.id && originalItem.name !== item.name)) {\n            itemIsSpecificVariantRepresentation = true;\n        }\n        \n        return {\n          id: item.id,\n          name: effectiveName,\n          type: item.type,\n          category: item.category,\n          price: effectivePrice, // Ini akan menjadi harga varian jika item adalah representasi varian\n          description: item.description || undefined,\n          pointsAwarded: effectivePoints || undefined,\n          estimatedDuration: effectiveDuration || undefined,\n          // Jika item adalah representasi varian, kita tidak sertakan array 'variants' lagi\n          // Jika item adalah item dasar dan Punya varian, sertakan\n          variants: itemIsSpecificVariantRepresentation ? undefined : item.variants?.map(v => ({\n            name: v.name,\n            price: v.price,\n            pointsAwarded: v.pointsAwarded || undefined,\n            estimatedDuration: v.estimatedDuration || undefined,\n          })) || undefined,\n        };\n      });\n\n      // Validasi semua hasil\n      try {\n        resultsForAI.forEach(res => ProductServiceInfoSchema.parse(res));\n      } catch (zodError: any) {\n        console.error(\"ProductLookupTool: Zod validation error untuk salah satu item hasil:\", zodError.errors);\n        return null; // Atau handle error dengan cara lain, misal filter item yang tidak valid\n      }\n\n      console.log(`ProductLookupTool: Ditemukan ${resultsForAI.length} item(s) yang cocok.`);\n      \n      // Jika hanya 1 hasil, kembalikan sebagai objek tunggal. Jika >1, sebagai array.\n      // Ini untuk membantu prompt LLM, agar tidak bingung jika inputnya berupa array tunggal.\n      // Tapi, instruksi di prompt LLM harus disesuaikan agar bisa menangani output array juga.\n      // Untuk sekarang, kita konsistenkan untuk mengembalikan array saja, lalu di prompt flow-nya dihandle.\n      return resultsForAI; // Selalu kembalikan array\n\n    } catch (error) {\n      console.error('ProductLookupTool: Error saat mengambil data dari Firestore:', error);\n      return null;\n    }\n  }\n);"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 533, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/tools/clientLookupTool.ts"],"sourcesContent":["\n'use server';\n/**\n * @fileOverview Genkit tool for looking up client details from Firestore.\n */\nimport {ai}from '@/ai/genkit';\nimport {z}from 'genkit';\nimport { collection, query, where, getDocs, limit } from 'firebase/firestore';\nimport { db } from '@/lib/firebase';\nimport type { Client, Motorcycle } from '@/types/client'; // Motorcycle type might be needed\nimport { ClientInfoSchema, type ClientInfo } from '@/types/aiToolSchemas';\n\nconst ClientLookupInputSchema = z.object({\n  searchQuery: z.string().describe(\"Nama atau nomor telepon klien yang ingin dicari. Jika nomor telepon, harus angka saja atau dengan +62. Jika nama, bisa nama lengkap atau sebagian.\"),\n});\n\nexport const getClientDetailsTool = ai.defineTool(\n  {\n    name: 'getClientDetailsTool',\n    description: 'Mencari dan mengembalikan detail klien berdasarkan nama atau nomor telepon. Berguna untuk menjawab pertanyaan pelanggan tentang data mereka seperti poin loyalitas, motor terdaftar, atau histori layanan (jika ada).',\n    inputSchema: ClientLookupInputSchema,\n    outputSchema: z.union([ClientInfoSchema, z.null()]).describe(\"Objek berisi detail klien, atau null jika tidak ditemukan.\"),\n  },\n  async (input) => {\n    if (!input.searchQuery || input.searchQuery.trim() === '') {\n      console.log(\"ClientLookupTool: Query pencarian klien kosong.\");\n      return null;\n    }\n    const searchTerm = input.searchQuery.trim();\n    console.log(`ClientLookupTool: Mencari klien dengan query: \"${searchTerm}\"`);\n\n    try {\n      const clientsRef = collection(db, 'clients');\n      let q;\n      let foundClientData: Client | null = null; // Use a more specific type if available, e.g., your Client type\n\n      // Basic check if it's a phone number (contains mostly digits)\n      if (/^\\+?[0-9\\s-]{7,}$/.test(searchTerm)) {\n        // Try to match phone number\n        const phoneQuery = query(clientsRef, where(\"phone\", \"==\", searchTerm), limit(1));\n        const phoneSnapshot = await getDocs(phoneQuery);\n        if (!phoneSnapshot.empty) {\n          // Explicitly cast to Client type if you have one, or ensure data structure matches\n          foundClientData = { id: phoneSnapshot.docs[0].id, ...phoneSnapshot.docs[0].data() } as Client;\n        }\n      }\n\n      // If not found by phone or if it wasn't a phone-like query, try by name\n      if (!foundClientData) {\n        const nameQuery = query(clientsRef); // Fetch all and filter for demo purposes\n        const nameSnapshot = await getDocs(nameQuery);\n        const searchTermLower = searchTerm.toLowerCase();\n        for (const doc of nameSnapshot.docs) {\n            // Explicitly cast to Client type\n            const clientData = { id: doc.id, ...doc.data() } as Client;\n            if (clientData.name && clientData.name.toLowerCase().includes(searchTermLower)) {\n                foundClientData = clientData;\n                break; // Take the first match\n            }\n        }\n      }\n\n      if (foundClientData) {\n        console.log(`ClientLookupTool: Ditemukan klien: ${foundClientData.name}`);\n\n        let mappedMotorcycles: ClientInfo['motorcycles'] = undefined;\n        // Ensure motorcycles is an array before mapping\n        if (Array.isArray(foundClientData.motorcycles)) {\n            mappedMotorcycles = foundClientData.motorcycles.map(m => ({ name: m.name, licensePlate: m.licensePlate }));\n        } else if (foundClientData.motorcycles) {\n            console.warn(`ClientLookupTool: motorcycles field for client ${foundClientData.id} is not an array, skipping.`);\n        }\n\n\n        const result: ClientInfo = {\n          id: foundClientData.id,\n          name: foundClientData.name,\n          phone: foundClientData.phone,\n          loyaltyPoints: foundClientData.loyaltyPoints || 0,\n          motorcycles: mappedMotorcycles, // Use the safely mapped motorcycles\n          lastVisit: foundClientData.lastVisit || undefined,\n        };\n\n        // Validate with Zod before returning\n        try {\n            ClientInfoSchema.parse(result);\n            return result;\n        } catch (zodError: any) { // Catch any error from Zod\n            console.error(\"ClientLookupTool: Zod validation error for found client:\", zodError);\n            return null; // Or handle error appropriately\n        }\n      } else {\n        console.log(`ClientLookupTool: Tidak ada klien yang cocok dengan query \"${searchTerm}\".`);\n        return null;\n      }\n    } catch (error) {\n      console.error('ClientLookupTool: Error saat mengambil data klien dari Firestore:', error);\n      return null;\n    }\n  }\n);\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 655, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/tools/knowledgeLookupTool.ts"],"sourcesContent":["'use server';\n/**\n * @fileOverview Genkit tool for retrieving specific knowledge base information\n * from Firestore. This acts as a dynamic RAG retriever.\n */\nimport { ai } from '@/ai/genkit';\nimport { z } from 'genkit';\nimport { collection, getDocs, query as firestoreQuery, orderBy, where } from 'firebase/firestore';\nimport { db } from '@/lib/firebase';\nimport type { KnowledgeBaseEntry as KnowledgeBaseEntryType } from '@/types/knowledgeBase'; // Menggunakan tipe dari file baru\n\nconst KnowledgeChunkSchema = z.object({\n  topic: z.string().describe(\"The topic queried.\"),\n  information: z.string().describe(\"The retrieved information relevant to the topic. Could be a paragraph or a few bullet points.\"),\n  found: z.boolean().describe(\"Whether relevant information was found for the topic.\")\n});\nexport type KnowledgeChunk = z.infer<typeof KnowledgeChunkSchema>;\n\nconst KnowledgeLookupInputSchema = z.object({\n  query: z.string().describe(\"The user's question or topic to search for in the knowledge base. e.g., 'harga coating motor beat', 'jam buka bengkel', 'kebijakan garansi'\"),\n});\n\nexport const getKnowledgeBaseInfoTool = ai.defineTool(\n  {\n    name: 'getKnowledgeBaseInfoTool',\n    description: 'Mengambil informasi spesifik dari knowledge base (basis data pengetahuan) berdasarkan topik atau pertanyaan pengguna. Gunakan ini untuk mendapatkan detail tentang layanan (deskripsi umum, proses), kebijakan, jam operasional, atau informasi umum lainnya SEBELUM mencoba menjawab pertanyaan pengguna jika relevan. Hasil dari tool ini akan menjadi sumber informasi utama. JANGAN gunakan tool ini untuk mencari harga atau durasi spesifik, gunakan getProductServiceDetailsByNameTool untuk itu.',\n    inputSchema: KnowledgeLookupInputSchema,\n    outputSchema: KnowledgeChunkSchema,\n  },\n  async (input) => {\n    console.log(`KnowledgeLookupTool: Mencari info untuk query: \"${input.query}\"`); // CONSOLE LOG DITAMBAHKAN DI SINI\n    const queryLower = input.query.toLowerCase().trim();\n    let foundEntryData: KnowledgeBaseEntryType | null = null;\n    let highestMatchScore = 0;\n    let matchedTopicDisplay = input.query;\n\n    try {\n      const kbCollectionRef = collection(db, 'knowledge_base_entries');\n      const q = firestoreQuery(kbCollectionRef, where(\"isActive\", \"==\", true), orderBy('topic'));\n      const snapshot = await getDocs(q);\n      \n      if (snapshot.empty) {\n        console.log(\"KnowledgeLookupTool: No active entries found in 'knowledge_base_entries' collection.\");\n        return { topic: input.query, information: \"Maaf, sumber pengetahuan kami saat ini belum terisi atau tidak ada entri yang aktif.\", found: false };\n      }\n\n      const allEntries: KnowledgeBaseEntryType[] = snapshot.docs.map(doc => ({\n        id: doc.id,\n        ...doc.data()\n      } as KnowledgeBaseEntryType));\n\n      for (const entry of allEntries) {\n        if (!entry.isActive) continue; // Lewati entri yang tidak aktif\n\n        const entryTopicLower = entry.topic.toLowerCase();\n        const entryKeywordsLower = entry.keywords?.map(kw => kw.toLowerCase()) || [];\n        \n        let currentScore = 0;\n        \n        // Skor berdasarkan kecocokan topik\n        if (entryTopicLower === queryLower) { // Cocok persis dengan topik\n          currentScore = entryTopicLower.length * 3; // Skor tinggi untuk cocok persis topik\n        } else if (queryLower.includes(entryTopicLower)) { // Query mengandung nama topik\n          currentScore = entryTopicLower.length * 1.5;\n        } else if (entryTopicLower.includes(queryLower)) { // Nama topik mengandung query\n          currentScore = queryLower.length * 1.2;\n        }\n        \n        // Skor berdasarkan kecocokan kata kunci\n        entryKeywordsLower.forEach(keyword => {\n          if (queryLower.includes(keyword)) {\n            currentScore += keyword.length * 2; // Skor lebih tinggi untuk kata kunci\n          }\n        });\n        \n        // Skor berdasarkan kata-kata dalam query yang ada di topik atau keywords\n        const queryWords = queryLower.split(/\\s+/).filter(w => w.length > 2);\n        queryWords.forEach(word => {\n          if (entryTopicLower.includes(word)) {\n            currentScore += word.length * 0.5;\n          }\n          if (entryKeywordsLower.some(kw => kw.includes(word))) {\n            currentScore += word.length * 0.8;\n          }\n        });\n\n        if (currentScore > highestMatchScore) {\n          foundEntryData = entry;\n          matchedTopicDisplay = entry.topic;\n          highestMatchScore = currentScore;\n        }\n      }\n      \n      if (foundEntryData) {\n        console.log(`KnowledgeLookupTool: Info ditemukan untuk query \"${input.query}\" (cocok dengan topik: \"${matchedTopicDisplay}\") dari Firestore. Skor: ${highestMatchScore}`);\n        return { topic: matchedTopicDisplay, information: foundEntryData.content, found: true };\n      } else {\n        console.log(`KnowledgeLookupTool: Tidak ada info aktif yang relevan untuk query \"${input.query}\" di Firestore.`);\n        return { topic: input.query, information: \"Maaf, informasi detail mengenai topik tersebut tidak ditemukan saat ini di knowledge base kami.\", found: false };\n      }\n\n    } catch (error) {\n      console.error(\"KnowledgeLookupTool: Error saat mengambil data dari Firestore:\", error);\n      return { topic: input.query, information: \"Maaf, terjadi kesalahan saat mengakses sumber pengetahuan kami.\", found: false };\n    }\n  }\n);\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 781, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/tools/createBookingTool.ts"],"sourcesContent":["\n'use server';\n/**\n * @fileOverview Genkit tool for creating bookings and adding to queue for same-day.\n */\nimport { ai } from '@/ai/genkit';\nimport { z } from 'genkit';\nimport { collection, addDoc, Timestamp, serverTimestamp, query, where, getDocs, updateDoc, limit } from 'firebase/firestore';\nimport { db } from '@/lib/firebase';\nimport type { CreateBookingToolInput, CreateBookingToolOutput, BookingEntry, BookingStatus } from '@/types/booking';\nimport type { QueueItem } from '@/app/(app)/queue/page';\nimport { format as formatDateFns, parse, startOfDay, isSameDay } from 'date-fns';\nimport { id as indonesiaLocale } from 'date-fns/locale';\n\n\nconst CreateBookingInputSchema = z.object({\n  customerName: z.string().describe(\"Nama lengkap pelanggan.\"),\n  customerPhone: z.string().optional().describe(\"Nomor telepon WhatsApp pelanggan (format 62xxx).\"),\n  clientId: z.string().optional().describe(\"ID klien jika pelanggan sudah terdaftar.\"),\n  serviceId: z.string().describe(\"ID dari layanan yang di-booking.\"),\n  serviceName: z.string().describe(\"Nama lengkap layanan yang di-booking (bisa termasuk varian).\"),\n  vehicleInfo: z.string().describe(\"Informasi kendaraan pelanggan (mis. Honda Vario B 1234 XYZ).\"),\n  bookingDate: z.string().regex(/^\\d{4}-\\d{2}-\\d{2}$/).describe(\"Tanggal booking dalam format YYYY-MM-DD.\"),\n  bookingTime: z.string().regex(/^\\d{2}:\\d{2}$/).describe(\"Waktu booking dalam format HH:MM (24 jam).\"),\n  estimatedDuration: z.string().optional().describe(\"Estimasi durasi layanan (mis. '30 menit', '1 jam').\"),\n  notes: z.string().optional().describe(\"Catatan tambahan untuk booking (mis. permintaan khusus pelanggan).\")\n});\n\nconst CreateBookingOutputSchema = z.object({\n  success: z.boolean().describe(\"Apakah pembuatan booking berhasil.\"),\n  bookingId: z.string().optional().describe(\"ID booking yang baru dibuat jika sukses.\"),\n  queueItemId: z.string().optional().describe(\"ID item antrian jika booking langsung ditambahkan ke antrian.\"),\n  message: z.string().describe(\"Pesan status hasil operasi booking.\"),\n  status: z.string().optional().describe(\"Status booking yang baru dibuat (mis. 'Pending', 'Confirmed', 'In Queue').\")\n});\n\nexport const createBookingTool = ai.defineTool(\n  {\n    name: 'createBookingTool',\n    description: 'Membuat jadwal booking layanan untuk pelanggan. Jika booking untuk hari ini, akan otomatis ditambahkan ke antrian. Wajib konfirmasi KETERSEDIAAN SLOT jika pelanggan meminta waktu spesifik sebelum memanggil tool ini. Asumsikan slot selalu tersedia jika pelanggan tidak bertanya spesifik atau AI sudah mengkonfirmasi ketersediaan berdasarkan informasi sebelumnya.',\n    inputSchema: CreateBookingInputSchema,\n    outputSchema: CreateBookingOutputSchema,\n  },\n  async (input: CreateBookingToolInput): Promise<CreateBookingToolOutput> => {\n    console.log(\"createBookingTool input:\", input);\n    try {\n      const bookingDateTimeStr = `${input.bookingDate}T${input.bookingTime}:00`;\n      let parsedBookingDateTime: Date;\n      try {\n        parsedBookingDateTime = parse(bookingDateTimeStr, \"yyyy-MM-dd'T'HH:mm:ss\", new Date());\n        if (isNaN(parsedBookingDateTime.getTime())) {\n          throw new Error('Format tanggal atau waktu tidak valid.');\n        }\n      } catch (parseError) {\n        console.error(\"Error parsing booking date/time:\", parseError);\n        return { success: false, message: `Format tanggal booking (${input.bookingDate}) atau waktu booking (${input.bookingTime}) tidak valid. Gunakan YYYY-MM-DD dan HH:MM.` };\n      }\n\n      const bookingTimestamp = Timestamp.fromDate(parsedBookingDateTime);\n\n      if (startOfDay(parsedBookingDateTime) < startOfDay(new Date()) && !isSameDay(parsedBookingDateTime, new Date())) {\n        return { success: false, message: \"Tidak bisa membuat booking untuk tanggal atau waktu yang sudah lewat.\" };\n      }\n\n      const newBookingData: Omit<BookingEntry, 'id' | 'createdAt' | 'updatedAt' | 'queueItemId'> = {\n        customerName: input.customerName,\n        customerPhone: input.customerPhone,\n        clientId: input.clientId,\n        serviceId: input.serviceId,\n        serviceName: input.serviceName,\n        vehicleInfo: input.vehicleInfo,\n        bookingDateTime: bookingTimestamp,\n        estimatedDuration: input.estimatedDuration,\n        status: isSameDay(parsedBookingDateTime, new Date()) ? 'In Queue' : 'Confirmed', // Default to In Queue if today\n        notes: input.notes,\n        source: 'WhatsApp', // Source from AI/WhatsApp\n      };\n\n      const bookingsCollectionRef = collection(db, 'bookings');\n      const bookingDocRef = await addDoc(bookingsCollectionRef, {\n        ...newBookingData,\n        createdAt: serverTimestamp(),\n        updatedAt: serverTimestamp(),\n      });\n      console.log(`Booking created with ID: ${bookingDocRef.id}`);\n\n      let queueItemId: string | undefined = undefined;\n      let queueMessage = \"\";\n\n      if (isSameDay(parsedBookingDateTime, new Date())) {\n        const queueCollectionRef = collection(db, 'queueItems');\n        // Check if queue item for this booking already exists\n        const q = query(queueCollectionRef, where(\"bookingId\", \"==\", bookingDocRef.id), limit(1));\n        const existingQueueSnap = await getDocs(q);\n\n        if (existingQueueSnap.empty) {\n            const newQueueItem: Omit<QueueItem, 'id' | 'createdAt' | 'completedAt' | 'serviceStartTime'> = {\n            customerName: input.customerName,\n            clientId: input.clientId,\n            vehicleInfo: input.vehicleInfo,\n            service: input.serviceName, // serviceName from booking input\n            serviceId: input.serviceId, // serviceId from booking input\n            bookingId: bookingDocRef.id, // Link to booking\n            status: 'Menunggu', // Default status for new queue item\n            estimatedTime: input.estimatedDuration || 'N/A',\n          };\n\n          const queueDocRef = await addDoc(queueCollectionRef, {\n            ...newQueueItem,\n            createdAt: bookingTimestamp, // Masuk antrian sesuai waktu booking jika hari ini\n          });\n          queueItemId = queueDocRef.id;\n          // Update booking entry with queueItemId\n          await updateDoc(bookingDocRef, { queueItemId: queueItemId, status: 'In Queue' });\n          queueMessage = \" dan langsung ditambahkan ke antrian hari ini\";\n          console.log(`Booking for today added to queue with ID: ${queueItemId}`);\n        } else {\n            queueItemId = existingQueueSnap.docs[0].id;\n            // Ensure booking status is 'In Queue' if already in queue\n            if (newBookingData.status !== 'In Queue') {\n                 await updateDoc(bookingDocRef, { queueItemId: queueItemId, status: 'In Queue' });\n            }\n            queueMessage = \" dan sudah ada dalam antrian hari ini\";\n            console.log(`Booking for today already in queue with ID: ${queueItemId}`);\n        }\n      }\n\n      return {\n        success: true,\n        bookingId: bookingDocRef.id,\n        queueItemId: queueItemId,\n        message: `Booking untuk ${input.serviceName} pada ${formatDateFns(parsedBookingDateTime, \"dd MMMM yyyy 'pukul' HH:mm\", {locale: indonesiaLocale})} berhasil dibuat${queueMessage}.`,\n        status: newBookingData.status,\n      };\n\n    } catch (error) {\n      console.error(\"Error in createBookingTool:\", error);\n      let errorMessage = \"Terjadi kesalahan saat membuat booking.\";\n      if (error instanceof Error) {\n        errorMessage = error.message;\n      }\n      return { success: false, message: errorMessage };\n    }\n  }\n);\n\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 951, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/types/ai/cs-whatsapp-reply.ts"],"sourcesContent":["\nimport { z } from 'genkit';\n\nexport const ChatMessageSchema = z.object({\n  role: z.enum(['user', 'model']), // 'user' for customer/CS agent, 'model' for AI's previous replies\n  content: z.string(),\n});\nexport type ChatMessage = z.infer<typeof ChatMessageSchema>;\n\nexport const WhatsAppReplyInputSchema = z.object({\n  customerMessage: z.string().describe('Pesan yang diterima dari pelanggan melalui WhatsApp, atau pertanyaan dari staf CS.'),\n  senderNumber: z.string().optional().describe('Nomor WhatsApp pengirim pesan (pelanggan).'),\n  chatHistory: z.array(ChatMessageSchema).optional().describe('Riwayat percakapan sebelumnya antara pelanggan dan AI/staf CS.'),\n  agentBehavior: z.string().optional().describe('Perilaku agen AI yang diinginkan, mis. \"Ramah & Membantu\".'),\n  knowledgeBase: z.string().optional().describe('Panduan tingkat tinggi untuk AI. Detail pengetahuan spesifik akan diambil melalui tools.'),\n  currentDate: z.string().optional().describe('Tanggal saat ini dalam format YYYY-MM-DD. Berguna untuk konteks booking.'),\n  currentTime: z.string().optional().describe('Waktu saat ini dalam format HH:MM (24 jam). Berguna untuk konteks booking.'),\n  tomorrowDate: z.string().optional().describe('Tanggal besok dalam format YYYY-MM-DD. Berguna untuk konteks booking.'),\n  dayAfterTomorrowDate: z.string().optional().describe('Tanggal lusa (besoknya besok) dalam format YYYY-MM-DD. Berguna untuk konteks booking.'),\n});\nexport type WhatsAppReplyInput = z.infer<typeof WhatsAppReplyInputSchema>;\n\nexport const WhatsAppReplyOutputSchema = z.object({\n  suggestedReply: z.string().describe('Saran balasan yang dihasilkan AI untuk dikirim ke pelanggan.'),\n});\nexport type WhatsAppReplyOutput = z.infer<typeof WhatsAppReplyOutputSchema>;\n    \n"],"names":[],"mappings":";;;;;AACA;AAAA;;AAEO,MAAM,oBAAoB,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACxC,MAAM,uIAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAQ;KAAQ;IAC9B,SAAS,uIAAA,CAAA,IAAC,CAAC,MAAM;AACnB;AAGO,MAAM,2BAA2B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC/C,iBAAiB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACrC,cAAc,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;IAC7C,aAAa,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,mBAAmB,QAAQ,GAAG,QAAQ,CAAC;IAC5D,eAAe,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;IAC9C,eAAe,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;IAC9C,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;IAC5C,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;IAC5C,cAAc,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;IAC7C,sBAAsB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;AACvD;AAGO,MAAM,4BAA4B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAChD,gBAAgB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACtC","debugId":null}},
    {"offset": {"line": 986, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/types/aiSettings.ts"],"sourcesContent":["\nimport { z } from 'zod';\n\nexport const AI_AGENT_BEHAVIORS = [\n  \"Ramah & Membantu\",\n  \"Profesional & To-the-point\",\n  \"Humoris & Santai\",\n  \"Empatik & Sabar\",\n] as const;\nexport type AiAgentBehavior = typeof AI_AGENT_BEHAVIORS[number];\n\nexport const AI_TRANSFER_CONDITIONS = [\n  \"Pelanggan Meminta Secara Eksplisit\",\n  \"AI Tidak Menemukan Jawaban (Setelah 2x Coba)\", // Programmatic check for this is complex currently\n  \"Terdeteksi Emosi Negatif dari Pelanggan\", // Needs sentiment analysis\n  \"Disebut Kata Kunci Eskalasi (mis. 'manajer', 'komplain')\",\n  \"Setelah 5 Pertanyaan Tanpa Solusi\", // Programmatic check for this is complex currently\n] as const;\nexport type AiTransferCondition = typeof AI_TRANSFER_CONDITIONS[number];\n\nconst FollowUpDelaysSchema = z.object({\n  firstAttemptHours: z.preprocess(\n    (val) => (val === \"\" || val === undefined || val === null) ? undefined : parseInt(String(val), 10),\n    z.number({ invalid_type_error: \"Jam harus angka.\"}).min(1, \"Minimal 1 jam.\").max(168, \"Maksimal 168 jam (7 hari).\").optional()\n  ),\n  secondAttemptDays: z.preprocess(\n    (val) => (val === \"\" || val === undefined || val === null) ? undefined : parseInt(String(val), 10),\n    z.number({ invalid_type_error: \"Hari harus angka.\"}).min(1, \"Minimal 1 hari.\").max(30, \"Maksimal 30 hari.\").optional()\n  ),\n  thirdAttemptDays: z.preprocess(\n    (val) => (val === \"\" || val === undefined || val === null) ? undefined : parseInt(String(val), 10),\n    z.number({ invalid_type_error: \"Hari harus angka.\"}).min(1, \"Minimal 1 hari.\").max(30, \"Maksimal 30 hari.\").optional()\n  ),\n  fourthAttemptDays: z.preprocess(\n    (val) => (val === \"\" || val === undefined || val === null) ? undefined : parseInt(String(val), 10),\n    z.number({ invalid_type_error: \"Hari harus angka.\"}).min(1, \"Minimal 1 hari.\").max(90, \"Maksimal 90 hari.\").optional()\n  ),\n});\n\nexport const AiSettingsFormSchema = z.object({\n  agentBehavior: z.enum(AI_AGENT_BEHAVIORS, {\n    required_error: \"Perilaku agen AI harus dipilih.\",\n  }),\n  welcomeMessage: z.string().min(10, \"Pesan selamat datang minimal 10 karakter.\").max(300, \"Pesan selamat datang maksimal 300 karakter.\"),\n  transferConditions: z.array(z.enum(AI_TRANSFER_CONDITIONS)).min(1, \"Minimal satu kondisi transfer harus dipilih.\"),\n  knowledgeBaseDescription: z.string().max(10000, \"Deskripsi sumber pengetahuan maksimal 10000 karakter.\").optional().describe(\"Panduan tingkat tinggi untuk AI. Detail pengetahuan akan diambil melalui tools.\"),\n  \n  enableHumanHandoff: z.boolean().default(false).describe(\"Aktifkan notifikasi ke agen manusia jika AI perlu bantuan.\"),\n  humanAgentWhatsAppNumber: z.string().regex(/^\\+?[0-9\\s-]{10,18}$|^$/, \"Format nomor WhatsApp agen tidak valid (mis. +628123456789 atau kosong).\").optional().describe(\"Nomor WhatsApp agen manusia untuk notifikasi handoff.\"),\n\n  enableFollowUp: z.boolean().default(false).describe(\"Aktifkan fitur follow-up otomatis untuk pelanggan yang pernah menghubungi via WhatsApp namun belum melakukan kunjungan atau transaksi. Follow-up berhenti jika pelanggan tercatat datang/bertransaksi.\"),\n  followUpMessageTemplate: z.string().max(300, \"Template pesan follow-up maksimal 300 karakter.\").optional(),\n  followUpDelays: FollowUpDelaysSchema.optional(),\n}).superRefine((data, ctx) => {\n  if (data.enableFollowUp) {\n    if (!data.followUpMessageTemplate || data.followUpMessageTemplate.trim() === \"\") {\n      ctx.addIssue({\n        code: z.ZodIssueCode.custom,\n        message: \"Template pesan follow-up diperlukan jika fitur follow-up aktif.\",\n        path: [\"followUpMessageTemplate\"],\n      });\n    }\n    if (!data.followUpDelays?.firstAttemptHours) {\n      ctx.addIssue({\n        code: z.ZodIssueCode.custom,\n        message: \"Penundaan follow-up pertama (jam) diperlukan.\",\n        path: [\"followUpDelays\", \"firstAttemptHours\"],\n      });\n    }\n  }\n  if (data.enableHumanHandoff && (!data.humanAgentWhatsAppNumber || data.humanAgentWhatsAppNumber.trim() === \"\")) {\n    ctx.addIssue({\n      code: z.ZodIssueCode.custom,\n      message: \"Nomor WhatsApp Agen Manusia diperlukan jika notifikasi handoff aktif.\",\n      path: [\"humanAgentWhatsAppNumber\"],\n    });\n  }\n});\n\nexport type AiSettingsFormValues = z.infer<typeof AiSettingsFormSchema>;\nexport type FollowUpDelaysValues = z.infer<typeof FollowUpDelaysSchema>;\n\n\nexport const DEFAULT_AI_SETTINGS: AiSettingsFormValues = {\n  agentBehavior: \"Humoris & Santai\",\n  welcomeMessage: \"Selamat datang di QLAB Auto Detailing! Ada yang bisa saya bantu hari ini?\",\n  transferConditions: [\"Pelanggan Meminta Secara Eksplisit\", \"AI Tidak Menemukan Jawaban (Setelah 2x Coba)\"],\n  knowledgeBaseDescription: `Anda adalah asisten AI untuk QLAB Auto Detailing. Tugas utama Anda adalah membantu pelanggan dan staf. Gunakan tools yang tersedia untuk mencari informasi produk, layanan, klien, atau detail dari knowledge base. Prioritaskan penggunaan 'getKnowledgeBaseInfoTool' untuk pertanyaan umum atau detail kebijakan, dan 'getProductServiceDetailsByNameTool' untuk harga/durasi spesifik.`,\n  \n  enableHumanHandoff: false,\n  humanAgentWhatsAppNumber: '',\n\n  enableFollowUp: false,\n  followUpMessageTemplate: \"Halo Kak, kami perhatikan Anda sempat menghubungi kami beberapa waktu lalu. Apakah ada rencana untuk berkunjung ke bengkel kami? Ada promo menarik lho!\",\n  followUpDelays: {\n    firstAttemptHours: 24,\n    secondAttemptDays: 7,\n    thirdAttemptDays: 7,\n    fourthAttemptDays: 30,\n  },\n};\n    \n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1090, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/cs-whatsapp-reply-flow.ts"],"sourcesContent":["\n'use server';\n/**\n * @fileOverview AI flow for WhatsApp customer service replies.\n * Integrates with Firestore settings for dynamic AI behavior.\n * - generateWhatsAppReply - Function to generate a draft reply.\n */\n\nimport { ai } from '@/ai/genkit';\nimport { getProductServiceDetailsByNameTool } from '@/ai/tools/productLookupTool';\nimport { getClientDetailsTool } from '@/ai/tools/clientLookupTool';\nimport { getKnowledgeBaseInfoTool } from '@/ai/tools/knowledgeLookupTool';\nimport { createBookingTool } from '@/ai/tools/createBookingTool';\nimport type { WhatsAppReplyInput, WhatsAppReplyOutput, ChatMessage } from '@/types/ai/cs-whatsapp-reply';\nimport { WhatsAppReplyInputSchema, WhatsAppReplyOutputSchema } from '@/types/ai/cs-whatsapp-reply';\nimport { z } from 'genkit';\nimport { DEFAULT_AI_SETTINGS, type AiSettingsFormValues } from '@/types/aiSettings';\nimport { format as formatDateFns, addDays } from 'date-fns';\nimport { doc, getDoc } from 'firebase/firestore';\nimport { db } from '@/lib/firebase';\n\nasync function getAiSettingsFromFirestore(): Promise<Partial<AiSettingsFormValues>> {\n  try {\n    const settingsDocRef = doc(db, 'appSettings', 'aiAgentConfig');\n    const docSnap = await getDoc(settingsDocRef);\n    if (docSnap.exists()) {\n      console.log(\"AI settings fetched from Firestore:\", docSnap.data());\n      return docSnap.data() as Partial<AiSettingsFormValues>;\n    }\n    console.log(\"No AI settings found in Firestore, using defaults.\");\n    return {};\n  } catch (error) {\n    console.error(\"Error fetching AI settings from Firestore:\", error);\n    return {}; // Fallback to empty object, defaults will apply\n  }\n}\n\nexport async function generateWhatsAppReply({ customerMessage, senderNumber, chatHistory }: { customerMessage: string; senderNumber?: string; chatHistory?: ChatMessage[] }): Promise<WhatsAppReplyOutput> {\n  const firestoreSettings = await getAiSettingsFromFirestore();\n  // Merge Firestore settings with defaults. Firestore settings take precedence.\n  const agentSettings = { ...DEFAULT_AI_SETTINGS, ...firestoreSettings };\n  \n  const now = new Date();\n\n  const flowInput: WhatsAppReplyInput = {\n    customerMessage: customerMessage,\n    senderNumber: senderNumber,\n    chatHistory: chatHistory || [],\n    agentBehavior: agentSettings.agentBehavior, \n    knowledgeBase: agentSettings.knowledgeBaseDescription,\n    currentDate: formatDateFns(now, 'yyyy-MM-dd'),\n    currentTime: formatDateFns(now, 'HH:mm'),\n    tomorrowDate: formatDateFns(addDays(now, 1), 'yyyy-MM-dd'),\n    dayAfterTomorrowDate: formatDateFns(addDays(now, 2), 'yyyy-MM-dd'),\n  };\n  \n  console.log(\"generateWhatsAppReply input to flow (using merged settings, combined prompt):\", JSON.stringify(flowInput, null, 2));\n  const aiResponse = await whatsAppReplyFlowCombined(flowInput);\n  return aiResponse;\n}\n\nconst replyPromptCombined = ai.definePrompt({\n  name: 'whatsAppReplyPrompt_Combined_v4', // Updated version for clarity\n  input: { schema: WhatsAppReplyInputSchema },\n  output: { schema: WhatsAppReplyOutputSchema },\n  tools: [getKnowledgeBaseInfoTool, getProductServiceDetailsByNameTool, getClientDetailsTool, createBookingTool],\n  prompt: `Anda adalah Zoya, seorang Customer Service Assistant AI untuk QLAB Auto Detailing.\nPerilaku Anda: {{{agentBehavior}}}.\nAnda bertugas membantu pengguna dengan menjawab pertanyaan atau memproses permintaan mereka mengenai layanan dan produk QLAB.\n\nINSTRUKSI UTAMA:\n1.  Gunakan tool yang tersedia jika diperlukan untuk mendapatkan informasi akurat atau melakukan tindakan booking.\n2.  Informasi umum atau kebijakan dapat dicari menggunakan 'getKnowledgeBaseInfoTool'.\n3.  Detail spesifik produk/layanan seperti harga, durasi, atau ketersediaan gunakan 'getProductServiceDetailsByNameTool'.\n    *   Tool 'getProductServiceDetailsByNameTool' bisa mengembalikan satu item atau array beberapa item jika query-nya umum.\n    *   **Saat menggunakan output dari 'getProductServiceDetailsByNameTool': SELALU gunakan NAMA dan HARGA PERSIS seperti yang dikembalikan oleh tool. JANGAN membuat nama layanan atau harga sendiri.**\n    *   Jika pelanggan menyebutkan layanan secara umum (misalnya \"coating motor\", \"cuci xmax\") atau bertanya \"ada apa aja?\", gunakan tool 'getProductServiceDetailsByNameTool' dengan query yang lebih umum (misalnya, \"coating\", \"paket detailing\", \"cuci motor\").\n    *   Jika tool mengembalikan **ARRAY BEBERAPA ITEM** (misalnya, hasil dari query umum seperti \"coating\" atau \"paket detailing\"):\n        *   Sebutkan 2-3 item yang paling relevan dari array tersebut.\n        *   Untuk setiap item yang dipilih, sebutkan **NAMA itemnya (dari field 'name' output tool)** dan **HARGA-nya (dari field 'price' output tool)**.\n        *   Jika item tersebut punya array 'variants' yang TIDAK KOSONG, sebutkan NAMA item dasar, lalu sebutkan beberapa contoh varian dari dalam array 'variants' beserta harganya.\n        *   Contoh jika tool mengembalikan array: \"Untuk coating, kami ada beberapa pilihan Kak: (1) [NAMA_ITEM_1_DARI_TOOL] harganya Rp [HARGA_ITEM_1_DARI_TOOL]. (2) Untuk [NAMA_ITEM_2_DARI_TOOL], ada varian [NAMA_VARIAN_A_DARI_TOOL_2] Rp [HARGA_VARIAN_A_DARI_TOOL_2] dan varian [NAMA_VARIAN_B_DARI_TOOL_2] Rp [HARGA_VARIAN_B_DARI_TOOL_2]. Kakak tertarik yang mana?\"\n    *   Jika tool mengembalikan **SATU ITEM** (objek tunggal, bukan array):\n        *   Gunakan field 'name' dari output tool sebagai NAMA LAYANAN.\n        *   Jika item tersebut TIDAK memiliki array 'variants' atau array 'variants' KOSONG:\n            *   Sebutkan harga dari field 'price' item tersebut. Contoh: \"Untuk [NAMA_ITEM_DARI_TOOL], harganya Rp [HARGA_DARI_TOOL].\"\n        *   Jika item tersebut MEMILIKI array 'variants' yang berisi beberapa pilihan:\n            *   Sebutkan NAMA item dasar (dari field 'name' output tool).\n            *   Kemudian, sebutkan beberapa pilihan varian DARI DALAM ARRAY 'variants' tersebut beserta harganya. Contoh: \"Untuk layanan [NAMA_ITEM_DASAR_DARI_TOOL], kami ada beberapa pilihan ukuran Kak: Varian [NAMA_VARIAN_1_DARI_TOOL] harganya Rp [HARGA_VARIAN_1_DARI_TOOL], dan Varian [NAMA_VARIAN_2_DARI_TOOL] harganya Rp [HARGA_VARIAN_2_DARI_TOOL]. Kakak tertarik yang mana?\"\n            *   Jika pelanggan bertanya harga spesifik varian (mis. \"glossy size L berapa?\"), pastikan Anda mencari item dasar (misalnya \"Coating Motor Glossy\" jika itu nama itemnya), lalu cari varian \"L\" (atau nama varian yang paling cocok) di dalam array \\`variants\\` item tersebut untuk mendapatkan harga yang benar.\n    *   Jika pelanggan bertanya tentang kategori layanan (misalnya \"layanan detailing apa saja?\"), Anda bisa gunakan 'getKnowledgeBaseInfoTool' dengan query tentang kategori tersebut atau 'getProductServiceDetailsByNameTool' dengan nama kategori sebagai productName.\n4.  Untuk data pelanggan (poin, motor terdaftar), gunakan 'getClientDetailsTool'.\n5.  Jika pelanggan meminta booking, gunakan 'createBookingTool'. Pastikan Anda telah mengkonfirmasi layanan yang diinginkan, nama pelanggan, info kendaraan, dan tanggal/waktu sebelum memanggil tool booking. Untuk tanggal dan waktu, jika pelanggan tidak spesifik, Anda bisa menawarkan slot tersedia atau menanyakan preferensi mereka. Konfirmasi KETERSEDIAAN SLOT jika pelanggan meminta waktu spesifik SEBELUM memanggil tool ini (gunakan pengetahuan umum Anda atau getKnowledgeBaseInfoTool jika ada info ketersediaan umum).\n6.  Konteks Knowledge Base Tambahan: {{{knowledgeBase}}}\n\nINFORMASI WAKTU SAAT INI:\nTanggal saat ini adalah {{{currentDate}}}, jam {{{currentTime}}}. Besok adalah {{{tomorrowDate}}}, dan lusa adalah {{{dayAfterTomorrowDate}}}.\n\nFORMAT BALASAN:\nFormat balasan ANDA HARUS SELALU berupa objek JSON dengan satu field bernama \"suggestedReply\" yang berisi teks balasan Anda.\nContoh balasan JSON: {\"suggestedReply\": \"Tentu, Kak. Untuk layanan Cuci Premium, harganya adalah Rp 75.000.\"}\nJANGAN PERNAH menyebutkan nama tool yang Anda gunakan dalam balasan teks ke pelanggan.\n\nGAYA BAHASA:\nGunakan bahasa Indonesia yang baku, sopan, ramah, dan natural untuk percakapan WhatsApp.\nJika pertanyaan di luar lingkup, sarankan untuk datang ke bengkel atau hubungi nomor resmi.\nJaga balasan ringkas namun lengkap. Hindari janji yang tidak pasti.\nSelalu akhiri dengan sapaan sopan atau kalimat positif.\n\nRIWAYAT PERCAKAPAN SEBELUMNYA (jika ada):\n{{#if chatHistory.length}}\n{{#each chatHistory}}\n  {{this.role}}: {{{this.content}}}\n{{/each}}\n{{/if}}\n\nPESAN PELANGGAN TERBARU:\nuser: {{{customerMessage}}}\n\nHasilkan hanya objek JSON sebagai balasan Anda.\n`\n});\n\nconst whatsAppReplyFlowCombined = ai.defineFlow(\n  {\n    name: 'whatsAppReplyFlow_Combined_v4', // Updated version\n    inputSchema: WhatsAppReplyInputSchema,\n    outputSchema: WhatsAppReplyOutputSchema,\n  },\n  async (input: WhatsAppReplyInput) => {\n    console.log(\"whatsAppReplyFlow_Combined_v4 input received by flow:\", JSON.stringify(input, null, 2));\n    \n    const {output} = await replyPromptCombined(input); \n    if (!output) {\n      throw new Error('Gagal mendapatkan saran balasan dari AI (combined prompt flow v4).');\n    }\n    console.log(\"whatsAppReplyFlow_Combined_v4 output:\", output);\n    return output;\n  }\n);\n    \n"],"names":[],"mappings":";;;;;AAEA;;;;CAIC,GAED;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AACA;AAAA;AACA;;;;;;;;;;;;;;AAEA,eAAe;IACb,IAAI;QACF,MAAM,iBAAiB,CAAA,GAAA,iKAAA,CAAA,MAAG,AAAD,EAAE,sHAAA,CAAA,KAAE,EAAE,eAAe;QAC9C,MAAM,UAAU,MAAM,CAAA,GAAA,iKAAA,CAAA,SAAM,AAAD,EAAE;QAC7B,IAAI,QAAQ,MAAM,IAAI;YACpB,QAAQ,GAAG,CAAC,uCAAuC,QAAQ,IAAI;YAC/D,OAAO,QAAQ,IAAI;QACrB;QACA,QAAQ,GAAG,CAAC;QACZ,OAAO,CAAC;IACV,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,8CAA8C;QAC5D,OAAO,CAAC,GAAG,gDAAgD;IAC7D;AACF;AAEO,eAAe,sBAAsB,EAAE,eAAe,EAAE,YAAY,EAAE,WAAW,EAAmF;IACzK,MAAM,oBAAoB,MAAM;IAChC,8EAA8E;IAC9E,MAAM,gBAAgB;QAAE,GAAG,0HAAA,CAAA,sBAAmB;QAAE,GAAG,iBAAiB;IAAC;IAErE,MAAM,MAAM,IAAI;IAEhB,MAAM,YAAgC;QACpC,iBAAiB;QACjB,cAAc;QACd,aAAa,eAAe,EAAE;QAC9B,eAAe,cAAc,aAAa;QAC1C,eAAe,cAAc,wBAAwB;QACrD,aAAa,CAAA,GAAA,sJAAA,CAAA,SAAa,AAAD,EAAE,KAAK;QAChC,aAAa,CAAA,GAAA,sJAAA,CAAA,SAAa,AAAD,EAAE,KAAK;QAChC,cAAc,CAAA,GAAA,sJAAA,CAAA,SAAa,AAAD,EAAE,CAAA,GAAA,uIAAA,CAAA,UAAO,AAAD,EAAE,KAAK,IAAI;QAC7C,sBAAsB,CAAA,GAAA,sJAAA,CAAA,SAAa,AAAD,EAAE,CAAA,GAAA,uIAAA,CAAA,UAAO,AAAD,EAAE,KAAK,IAAI;IACvD;IAEA,QAAQ,GAAG,CAAC,iFAAiF,KAAK,SAAS,CAAC,WAAW,MAAM;IAC7H,MAAM,aAAa,MAAM,0BAA0B;IACnD,OAAO;AACT;AAEA,MAAM,sBAAsB,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC1C,MAAM;IACN,OAAO;QAAE,QAAQ,6IAAA,CAAA,2BAAwB;IAAC;IAC1C,QAAQ;QAAE,QAAQ,6IAAA,CAAA,4BAAyB;IAAC;IAC5C,OAAO;QAAC,yIAAA,CAAA,2BAAwB;QAAE,uIAAA,CAAA,qCAAkC;QAAE,sIAAA,CAAA,uBAAoB;QAAE,uIAAA,CAAA,oBAAiB;KAAC;IAC9G,QAAQ,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsDX,CAAC;AACD;AAEA,MAAM,4BAA4B,mHAAA,CAAA,KAAE,CAAC,UAAU,CAC7C;IACE,MAAM;IACN,aAAa,6IAAA,CAAA,2BAAwB;IACrC,cAAc,6IAAA,CAAA,4BAAyB;AACzC,GACA,OAAO;IACL,QAAQ,GAAG,CAAC,yDAAyD,KAAK,SAAS,CAAC,OAAO,MAAM;IAEjG,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,oBAAoB;IAC3C,IAAI,CAAC,QAAQ;QACX,MAAM,IAAI,MAAM;IAClB;IACA,QAAQ,GAAG,CAAC,yCAAyC;IACrD,OAAO;AACT;;;IArGoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 1256, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/%28app%29/ai-cs-assistant/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {generateWhatsAppReply as '4042c47ea0c74421e840a6780974a2d92d185bfc6a'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 1314, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28app%29/ai-cs-assistant/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(app)/ai-cs-assistant/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(app)/ai-cs-assistant/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA0S,GACvU,wEACA","debugId":null}},
    {"offset": {"line": 1328, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28app%29/ai-cs-assistant/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(app)/ai-cs-assistant/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(app)/ai-cs-assistant/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAsR,GACnT,oDACA","debugId":null}},
    {"offset": {"line": 1342, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}