{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firebase.ts"],"sourcesContent":["\nimport { initializeApp, getApp, getApps, type FirebaseApp } from \"firebase/app\";\nimport { getFirestore, type Firestore } from \"firebase/firestore\";\n\n// Minimal logging\nconsole.log(\"[firebase.ts] Initializing Firebase...\");\n\nconst firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n};\n\nif (!firebaseConfig.projectId || !firebaseConfig.apiKey) {\n  console.error(\"[firebase.ts] FATAL ERROR: Firebase projectId or apiKey is MISSING in environment variables.\");\n}\n\nlet app: FirebaseApp;\nlet db: Firestore;\n\nif (getApps().length === 0) {\n  try {\n    app = initializeApp(firebaseConfig);\n    console.log(\"[firebase.ts] Firebase app initialized. Project ID:\", app.options.projectId);\n  } catch (e: any) {\n    console.error(\"[firebase.ts] FAILED to initialize Firebase app:\", e.message);\n    // @ts-ignore\n    app = null;\n  }\n} else {\n  app = getApp();\n  console.log(\"[firebase.ts] Using existing Firebase app. Project ID:\", app.options.projectId);\n}\n\n// @ts-ignore\nif (app) {\n  try {\n    // @ts-ignore\n    db = getFirestore(app);\n    console.log(\"[firebase.ts] Firestore instance obtained.\");\n  } catch (e: any) {\n    console.error(\"[firebase.ts] FAILED to get Firestore instance:\", e?.message);\n  }\n} else {\n    console.error(\"[firebase.ts] Firebase app not properly initialized, cannot get Firestore.\");\n}\n\nexport { app, db };\n"],"names":[],"mappings":";;;;AACA;AAAA;AACA;AAAA;;;AAEA,kBAAkB;AAClB,QAAQ,GAAG,CAAC;AAEZ,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;AACP;AAEA,IAAI,CAAC,eAAe,SAAS,IAAI,CAAC,eAAe,MAAM,EAAE;IACvD,QAAQ,KAAK,CAAC;AAChB;AAEA,IAAI;AACJ,IAAI;AAEJ,IAAI,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,KAAK,GAAG;IAC1B,IAAI;QACF,MAAM,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE;QACpB,QAAQ,GAAG,CAAC,uDAAuD,IAAI,OAAO,CAAC,SAAS;IAC1F,EAAE,OAAO,GAAQ;QACf,QAAQ,KAAK,CAAC,oDAAoD,EAAE,OAAO;QAC3E,aAAa;QACb,MAAM;IACR;AACF,OAAO;IACL,MAAM,CAAA,GAAA,oLAAA,CAAA,SAAM,AAAD;IACX,QAAQ,GAAG,CAAC,0DAA0D,IAAI,OAAO,CAAC,SAAS;AAC7F;AAEA,aAAa;AACb,IAAI,KAAK;IACP,IAAI;QACF,aAAa;QACb,KAAK,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE;QAClB,QAAQ,GAAG,CAAC;IACd,EAAE,OAAO,GAAQ;QACf,QAAQ,KAAK,CAAC,mDAAmD,GAAG;IACtE;AACF,OAAO;IACH,QAAQ,KAAK,CAAC;AAClB","debugId":null}},
    {"offset": {"line": 264, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["\nimport '@/lib/firebase'; // Ensure Firebase is initialized early\nimport {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai'; // Impor plugin Google AI\n\nif (!process.env.GOOGLE_API_KEY) {\n  const errorMessage = \"Kesalahan Konfigurasi: GOOGLE_API_KEY tidak ditemukan di environment variables. Ini dibutuhkan oleh plugin Google AI. Pastikan sudah di-set di file .env Anda.\";\n  console.error(`\\n\\n🛑 ${errorMessage}\\n\\n`);\n  throw new Error(errorMessage);\n}\n\nexport const ai = genkit({\n  plugins: [\n    googleAI(), // Gunakan plugin Google AI\n  ],\n  model: 'googleai/gemini-1.5-flash-latest', // Model diubah ke Gemini 1.5 Flash terbaru\n  // Opsi telemetry tidak lagi dikonfigurasi di sini untuk Genkit v1.x\n  // Jika butuh logging, konfigurasi dilakukan secara berbeda atau via environment.\n});\n\n"],"names":[],"mappings":";;;AACA,8MAAyB,uCAAuC;AAChE;AAAA;AACA,8TAA8C,yBAAyB;AAAvE;;;;AAEA,IAAI,CAAC,QAAQ,GAAG,CAAC,cAAc,EAAE;IAC/B,MAAM,eAAe;IACrB,QAAQ,KAAK,CAAC,CAAC,OAAO,EAAE,aAAa,IAAI,CAAC;IAC1C,MAAM,IAAI,MAAM;AAClB;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QACP,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KACR;IACD,OAAO;AAGT","debugId":null}},
    {"offset": {"line": 292, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/types/aiSettings.ts"],"sourcesContent":["\nimport { z } from 'zod';\n\nexport const AI_AGENT_BEHAVIORS = [\n  \"Ramah & Membantu\",\n  \"Profesional & To-the-point\",\n  \"Humoris & Santai\",\n  \"Empatik & Sabar\",\n] as const;\nexport type AiAgentBehavior = typeof AI_AGENT_BEHAVIORS[number];\n\nexport const AI_TRANSFER_CONDITIONS = [\n  \"Pelanggan Meminta Secara Eksplisit\",\n  \"AI Tidak Menemukan Jawaban (Setelah 2x Coba)\",\n  \"Terdeteksi Emosi Negatif dari Pelanggan\",\n  \"Disebut Kata Kunci Eskalasi (mis. 'manajer', 'komplain')\",\n  \"Setelah 5 Pertanyaan Tanpa Solusi\",\n] as const;\nexport type AiTransferCondition = typeof AI_TRANSFER_CONDITIONS[number];\n\nconst FollowUpDelaysSchema = z.object({\n  firstAttemptHours: z.preprocess(\n    (val) => (val === \"\" || val === undefined || val === null) ? undefined : parseInt(String(val), 10),\n    z.number({ invalid_type_error: \"Jam harus angka.\"}).min(1, \"Minimal 1 jam.\").max(168, \"Maksimal 168 jam (7 hari).\").optional()\n  ),\n  secondAttemptDays: z.preprocess(\n    (val) => (val === \"\" || val === undefined || val === null) ? undefined : parseInt(String(val), 10),\n    z.number({ invalid_type_error: \"Hari harus angka.\"}).min(1, \"Minimal 1 hari.\").max(30, \"Maksimal 30 hari.\").optional()\n  ),\n  thirdAttemptDays: z.preprocess(\n    (val) => (val === \"\" || val === undefined || val === null) ? undefined : parseInt(String(val), 10),\n    z.number({ invalid_type_error: \"Hari harus angka.\"}).min(1, \"Minimal 1 hari.\").max(30, \"Maksimal 30 hari.\").optional()\n  ),\n  fourthAttemptDays: z.preprocess(\n    (val) => (val === \"\" || val === undefined || val === null) ? undefined : parseInt(String(val), 10),\n    z.number({ invalid_type_error: \"Hari harus angka.\"}).min(1, \"Minimal 1 hari.\").max(90, \"Maksimal 90 hari.\").optional()\n  ),\n});\n\nexport const AiSettingsFormSchema = z.object({\n  agentBehavior: z.enum(AI_AGENT_BEHAVIORS, {\n    required_error: \"Perilaku agen AI harus dipilih.\",\n  }),\n  welcomeMessage: z.string().min(10, \"Pesan selamat datang minimal 10 karakter.\").max(300, \"Pesan selamat datang maksimal 300 karakter.\"),\n  transferConditions: z.array(z.enum(AI_TRANSFER_CONDITIONS)).min(1, \"Minimal satu kondisi transfer harus dipilih.\"),\n  knowledgeBaseDescription: z.string().max(10000, \"Deskripsi sumber pengetahuan maksimal 10000 karakter.\").optional().describe(\"Panduan tingkat tinggi untuk AI. Detail pengetahuan akan diambil melalui tools.\"),\n  \n  enableHumanHandoff: z.boolean().default(false).describe(\"Aktifkan notifikasi ke agen manusia jika AI perlu bantuan.\"),\n  humanAgentWhatsAppNumber: z.string().regex(/^\\+?[0-9\\s-]{10,18}$|^$/, \"Format nomor WhatsApp agen tidak valid (mis. +628123456789 atau kosong).\").optional().describe(\"Nomor WhatsApp agen manusia untuk notifikasi handoff.\"),\n\n  enableFollowUp: z.boolean().default(false).describe(\"Aktifkan fitur follow-up otomatis untuk pelanggan yang pernah menghubungi via WhatsApp namun belum melakukan kunjungan atau transaksi. Follow-up berhenti jika pelanggan tercatat datang/bertransaksi.\"),\n  followUpMessageTemplate: z.string().max(300, \"Template pesan follow-up maksimal 300 karakter.\").optional(),\n  followUpDelays: FollowUpDelaysSchema.optional(),\n  mainPrompt: z.string().min(100, \"Prompt utama minimal 100 karakter.\").max(15000, \"Prompt utama maksimal 15000 karakter.\").optional().describe(\"Prompt utama yang mengarahkan perilaku dan logika Zoya.\"),\n}).superRefine((data, ctx) => {\n  if (data.enableFollowUp) {\n    if (!data.followUpMessageTemplate || data.followUpMessageTemplate.trim() === \"\") {\n      ctx.addIssue({\n        code: z.ZodIssueCode.custom,\n        message: \"Template pesan follow-up diperlukan jika fitur follow-up aktif.\",\n        path: [\"followUpMessageTemplate\"],\n      });\n    }\n    if (!data.followUpDelays?.firstAttemptHours) {\n      ctx.addIssue({\n        code: z.ZodIssueCode.custom,\n        message: \"Penundaan follow-up pertama (jam) diperlukan.\",\n        path: [\"followUpDelays\", \"firstAttemptHours\"],\n      });\n    }\n  }\n  if (data.enableHumanHandoff && (!data.humanAgentWhatsAppNumber || data.humanAgentWhatsAppNumber.trim() === \"\")) {\n    ctx.addIssue({\n      code: z.ZodIssueCode.custom,\n      message: \"Nomor WhatsApp Agen Manusia diperlukan jika notifikasi handoff aktif.\",\n      path: [\"humanAgentWhatsAppNumber\"],\n    });\n  }\n});\n\nexport type AiSettingsFormValues = z.infer<typeof AiSettingsFormSchema>;\nexport type FollowUpDelaysValues = z.infer<typeof FollowUpDelaysSchema>;\n\nexport const DEFAULT_MAIN_PROMPT_ZOYA = `\nAnda adalah \"Zoya\" - Customer Service AI dari QLAB Moto Detailing.\n\n🎯 Gaya Bahasa:\n- Santai dan akrab, kayak ngobrol sama temen tongkrongan.\n- Gunakan sapaan seperti \"bro\", \"kak\", atau \"mas\".\n- Tetap informatif, jelas, dan cepat nangkep maksud pelanggan.\n- Gunakan istilah otomotif santai: \"kinclong\", \"ganteng maksimal\", \"spa motor\".\n- Gunakan emoji secukupnya untuk menambah ekspresi: ✅😎✨💸🛠️👋.\n- Hindari kata kasar, tapi boleh pakai \"anjay\" atau \"wih\" untuk ekspresi kaget positif.\n- Selalu jawab dalam Bahasa Indonesia.\n\n🧠 Logika Utama & Pengetahuan Umum (BEKAL ANDA, BUKAN UNTUK DITUNJUKKAN KE USER):\n- Layanan \"Full Detailing\" HANYA TERSEDIA untuk motor dengan cat GLOSSY. Jika user bertanya untuk motor DOFF, tolak dengan sopan dan tawarkan layanan lain (misal: \"Premium Wash\" atau \"Coating Doff\").\n- Harga \"Coating\" untuk motor DOFF dan GLOSSY itu BERBEDA. Jika user bertanya soal coating, tanyakan dulu jenis cat motornya (doff/glossy) dan tipe motornya. Gunakan tool 'cariSizeMotor' untuk mendapatkan ukuran motor, lalu sampaikan bahwa harga coating tergantung ukuran dan jenis cat tersebut.\n- Motor besar (Moge) seperti Harley, atau motor 600cc ke atas biasanya masuk ukuran \"XL\". Tool 'cariSizeMotor' akan membantu mengkonfirmasi ini.\n- Jika user bertanya harga spesifik layanan untuk model motor tertentu:\n  1. Pertama, gunakan tool 'cariSizeMotor' untuk mendapatkan ukuran motornya. Inputnya adalah nama motor yang disebutkan user.\n  2. Setelah tahu ukurannya dari output tool (misalnya, output tool bilang \"Motor NMAX termasuk ukuran M\"), sampaikan ke user ukuran motornya dan bahwa harga layanan (misalnya \"Cuci Premium\") untuk motor ukuran tersebut adalah [sebutkan harga berdasarkan ukuran jika kamu tahu dari pricelist internal, atau bilang \"perlu dicek manual di sistem kasir/pricelist kami\"].\n  3. Jika user bertanya layanan yang harganya sangat tergantung ukuran DAN jenis cat (seperti Coating), setelah dapat ukuran dari tool, informasikan bahwa harga coating juga tergantung jenis cat (doff/glossy) dan sarankan untuk cek langsung atau berikan estimasi jika ada.\n- Jika user hanya bertanya \"ukuran motor PCX apa?\", gunakan tool 'cariSizeMotor' dengan input nama motor \"PCX\". Sampaikan hasil ukuran dari output tool.\n- Anda bisa memberikan informasi umum tentang layanan (mis. \"Cuci Premium itu bikin motor bersih kinclong sampai ke sela-sela bro!\"), tapi untuk harga dan durasi, lebih baik hati-hati jika tidak ada data pasti.\n- QLAB Moto Detailing berlokasi di [Masukkan Alamat Bengkel Di Sini Jika Perlu]. Jam buka: [Masukkan Jam Buka Di Sini].\n- {{{dynamicContext}}} <!-- Ini akan diisi info tambahan jika ada -->\n\n🛠️ Tool yang Bisa Kamu Pakai:\n1. 'cariSizeMotor': Untuk mendapatkan ukuran motor (S, M, L, XL).\n   Input: {\"namaMotor\": \"NMAX\"}\n   Output: {\"success\": true, \"size\": \"M\", \"message\": \"Motor Yamaha NMAX (nmax) termasuk ukuran M.\", \"vehicleModelFound\": \"NMAX\"}\n   Gunakan 'message' dari output tool jika sukses untuk menginformasikan user. Jika gagal, sampaikan 'message' error dari tool.\n\nFLOW INTERAKSI:\n- Sapa user dengan ramah.\n- Jika user bertanya soal ukuran motor atau harga layanan yang butuh ukuran, panggil tool 'cariSizeMotor'. Gunakan 'message' dari output tool sebagai bagian dari jawabanmu.\n- Setelah memberikan informasi, selalu tawarkan bantuan lebih lanjut atau ajak booking.\n- Jika user bertanya di luar topik detailing motor QLAB, jawab dengan sopan bahwa Anda hanya bisa membantu soal QLAB Moto Detailing.\n\nJAWABAN ZOYA (format natural, TANPA menyebutkan \"Pengetahuan Umum\" atau \"Logika Utama\" Anda):\n`;\n\n\nexport const DEFAULT_AI_SETTINGS: AiSettingsFormValues = {\n  agentBehavior: \"Humoris & Santai\",\n  welcomeMessage: \"Halo bro! Zoya di sini, siap bantu seputar QLAB Moto Detailing. Ada yang bisa Zoya bantu?\",\n  transferConditions: [\"Pelanggan Meminta Secara Eksplisit\"],\n  knowledgeBaseDescription: `Anda adalah asisten AI untuk QLAB Moto Detailing. Tugas utama Anda adalah membantu pelanggan dan staf. Gunakan pengetahuan umum tentang layanan dan produk QLAB. Jika perlu informasi spesifik seperti ukuran motor, gunakan tool yang tersedia.`,\n  mainPrompt: DEFAULT_MAIN_PROMPT_ZOYA,\n  enableHumanHandoff: false,\n  humanAgentWhatsAppNumber: '',\n  enableFollowUp: false,\n  followUpMessageTemplate: \"Halo Kak, kami perhatikan Anda sempat menghubungi kami beberapa waktu lalu. Apakah ada rencana untuk berkunjung ke bengkel kami? Ada promo menarik lho!\",\n  followUpDelays: {\n    firstAttemptHours: 24,\n    secondAttemptDays: 7,\n    thirdAttemptDays: 7,\n    fourthAttemptDays: 30,\n  },\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 438, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/cs-whatsapp-reply-flow.ts"],"sourcesContent":["\n'use server';\n/**\n * @fileOverview Flow AI untuk WhatsApp Customer Service QLAB.\n * Versi ini fokus pada pemanggilan model dengan tool 'cariSizeMotor'.\n */\nimport { ai } from '@/ai/genkit';\nimport * as z from 'zod';\nimport { db } from '@/lib/firebase';\nimport { collection, query as firestoreQuery, where, getDocs as getFirestoreDocs, Timestamp, doc, getDoc as getFirestoreDoc, limit } from 'firebase/firestore';\nimport { DEFAULT_AI_SETTINGS } from '@/types/aiSettings';\n// Import tool tidak lagi diperlukan karena tool didefinisikan di sini\n\n// == Definisi Tool cariSizeMotorTool dipindahkan ke sini ==\nconst CariSizeMotorInputSchema = z.object({\n  namaMotor: z.string().min(1, \"Nama motor tidak boleh kosong.\").describe('Nama atau model motor yang ingin dicari ukurannya, contoh: NMAX, PCX, Vario.'),\n});\ntype CariSizeMotorInput = z.infer<typeof CariSizeMotorInputSchema>;\n\nconst CariSizeMotorOutputSchema = z.object({\n  success: z.boolean().describe('Apakah pencarian berhasil atau tidak.'),\n  size: z.string().optional().describe('Ukuran motor (S, M, L, XL) jika ditemukan.'),\n  message: z.string().describe('Pesan hasil pencarian, termasuk ukuran jika berhasil atau pesan error jika gagal.'),\n  vehicleModelFound: z.string().optional().describe('Nama model motor yang sebenarnya ditemukan di database.'),\n});\ntype CariSizeMotorOutput = z.infer<typeof CariSizeMotorOutputSchema>;\n\nasync function findMotorSize(input: CariSizeMotorInput): Promise<CariSizeMotorOutput> {\n    const { namaMotor } = input;\n    const namaMotorLower = namaMotor.toLowerCase().trim();\n    console.log(`[cariSizeMotorTool.fn] Mencari ukuran untuk: \"${namaMotorLower}\"`);\n\n    if (!db) {\n      console.error(\"[cariSizeMotorTool.fn] Firestore DB (db) is not initialized.\");\n      return { success: false, message: \"Database tidak terhubung, tidak bisa mencari ukuran motor.\" };\n    }\n\n    try {\n      const vehicleTypesRef = collection(db, 'vehicleTypes');\n      let q;\n      let querySnapshot;\n      let foundVehicleData: any = null;\n\n      q = firestoreQuery(vehicleTypesRef, where('aliases', 'array-contains', namaMotorLower), limit(1));\n      querySnapshot = await getFirestoreDocs(q);\n\n      if (!querySnapshot.empty) {\n        foundVehicleData = querySnapshot.docs[0].data();\n      } else {\n        q = firestoreQuery(vehicleTypesRef, where('model_lowercase', '==', namaMotorLower), limit(1));\n        querySnapshot = await getFirestoreDocs(q);\n        if (!querySnapshot.empty) {\n          foundVehicleData = querySnapshot.docs[0].data();\n        } else {\n          const allVehiclesSnapshot = await getFirestoreDocs(vehicleTypesRef);\n          for (const doc of allVehiclesSnapshot.docs) {\n            const vehicle = doc.data();\n            if (vehicle.model && vehicle.model.toLowerCase() === namaMotorLower) {\n              foundVehicleData = vehicle;\n              break;\n            }\n          }\n        }\n      }\n\n      if (foundVehicleData && foundVehicleData.size) {\n        console.log(`[cariSizeMotorTool.fn] Ditemukan: Model \"${foundVehicleData.model}\", Size \"${foundVehicleData.size}\"`);\n        return {\n          success: true,\n          size: foundVehicleData.size,\n          message: `Motor ${foundVehicleData.model} (${namaMotor}) termasuk ukuran ${foundVehicleData.size}.`,\n          vehicleModelFound: foundVehicleData.model,\n        };\n      } else {\n        console.log(`[cariSizeMotorTool.fn] Ukuran motor untuk \"${namaMotor}\" tidak ditemukan.`);\n        return {\n          success: false,\n          message: `Maaf, Zoya tidak menemukan ukuran untuk motor \"${namaMotor}\". Mungkin bisa coba nama model yang lebih spesifik atau umum?`,\n        };\n      }\n    } catch (error) {\n      console.error(\"[cariSizeMotorTool.fn] Error saat mencari ukuran motor:\", error);\n      return {\n        success: false,\n        message: \"Terjadi kesalahan internal saat mencari ukuran motor. Coba lagi nanti.\",\n      };\n    }\n}\n\nconst cariSizeMotorTool = ai.defineTool(\n  {\n    name: 'cariSizeMotor',\n    description: 'Mencari ukuran (S, M, L, XL) untuk model motor tertentu. Gunakan tool ini jika perlu mengetahui ukuran motor untuk menentukan harga layanan atau informasi lain, atau jika user menanyakan ukuran motornya.',\n    inputSchema: CariSizeMotorInputSchema,\n    outputSchema: CariSizeMotorOutputSchema,\n  },\n  findMotorSize\n);\n// == Akhir definisi Tool cariSizeMotorTool ==\n\n\n// Skema internal untuk validasi input chat history di flow\nconst ChatMessageSchemaInternal = z.object({\n  role: z.enum(['user', 'model']),\n  content: z.string(),\n});\ntype ChatMessage = z.infer<typeof ChatMessageSchemaInternal>;\n\n// Skema input untuk ZoyaChatFlow\nconst ZoyaChatInputSchema = z.object({\n  messages: z.array(ChatMessageSchemaInternal).optional().describe(\"Riwayat percakapan lengkap, jika ada.\"),\n  customerMessage: z.string().min(1, \"Pesan pelanggan tidak boleh kosong.\").describe(\"Pesan terbaru dari customer.\"),\n  senderNumber: z.string().optional().describe(\"Nomor WhatsApp pengirim (opsional).\"),\n  mainPromptString: z.string().optional().describe(\"String prompt utama yang mungkin dikirim dari UI atau diambil dari Firestore.\"),\n  currentDate: z.string().optional(),\n  currentTime: z.string().optional(),\n  tomorrowDate: z.string().optional(),\n  dayAfterTomorrowDate: z.string().optional(),\n});\nexport type ZoyaChatInput = z.infer<typeof ZoyaChatInputSchema>;\n\n// Skema output tetap sama, hanya teks balasan\n// const ZoyaChatOutputSchema = z.string().describe(\"Balasan teks dari Zoya.\"); // Tidak diekspor\n\nconst zoyaChatFlow = ai.defineFlow(\n  {\n    name: 'zoyaChatFlow',\n    inputSchema: ZoyaChatInputSchema,\n    outputSchema: z.string(), // Langsung pakai z.string() karena tidak diekspor\n  },\n  async (input: ZoyaChatInput): Promise<string> => {\n    console.log(\"[CS-FLOW] zoyaChatFlow input. Customer Message:\", input.customerMessage, \"History Length:\", (input.messages || []).length);\n\n    const lastUserMessageContent = input.customerMessage ||\n                                   (input.messages && input.messages.length > 0 ? input.messages[input.messages.length - 1].content : '');\n\n    if (!lastUserMessageContent || lastUserMessageContent.trim() === '') {\n      console.warn(\"[CS-FLOW] No valid last user message content. Returning empty reply.\");\n      return \"Maaf, Zoya tidak menerima pesan yang jelas.\";\n    }\n\n    let dynamicContext = `INFO_UMUM_BENGKEL: QLAB Moto Detailing adalah bengkel perawatan dan detailing motor.`;\n    if (!db) {\n        console.warn(\"[CS-FLOW] Firestore DB (db) is not initialized. Some context might be missing.\");\n        dynamicContext += \" WARNING: Database tidak terhubung, info detail mungkin tidak akurat.\";\n    }\n    console.log(`[CS-FLOW] Dynamic context built: ${dynamicContext}`);\n\n    const historyForAI = (input.messages || [])\n      .filter(msg => msg.content && msg.content.trim() !== '')\n      .map((msg) => ({\n        role: msg.role,\n        content: [{ text: msg.content }],\n    }));\n\n    const mainPromptFromSettings = input.mainPromptString || DEFAULT_AI_SETTINGS.mainPrompt;\n\n    const finalSystemPrompt = mainPromptFromSettings\n                                .replace(\"{{{dynamicContext}}}\", dynamicContext)\n                                .replace(\"{{{customerMessage}}}\", input.customerMessage)\n                                .replace(/{{#if messages.length}}[\\s\\S]*?{{\\/if}}/g, \"\")\n                                .replace(/{{#if senderNumber}}[\\s\\S]*?{{\\/if}}/g, \"\")\n                                .replace(/{{#if currentDate}}[\\s\\S]*?{{\\/if}}/g, \"\")\n                                .replace(/{{#if tomorrowDate}}[\\s\\S]*?{{\\/if}}/g, \"\");\n\n    const messagesForAI = [\n      ...historyForAI,\n      { role: 'user' as const, content: [{ text: input.customerMessage }] }\n    ];\n\n    console.log(`[CS-FLOW] Calling ai.generate with model googleai/gemini-1.5-flash-latest. History Length: ${historyForAI.length}`);\n    console.log(`[CS-FLOW] System Prompt being used (simplified): ${finalSystemPrompt.substring(0, 300)}...`);\n\n    try {\n      const result = await ai.generate({\n        model: 'googleai/gemini-1.5-flash-latest',\n        prompt: finalSystemPrompt,\n        messages: messagesForAI,\n        tools: [cariSizeMotorTool], // Aktifkan tool lagi\n        toolChoice: 'auto',\n        config: { temperature: 0.5 },\n      });\n\n      console.log(\"[CS-FLOW] Raw AI generate result:\", JSON.stringify(result, null, 2));\n      \n      let suggestedReply = \"\";\n      const toolRequestData = result.toolRequest; // Genkit v1.x: akses sebagai properti\n\n      if (toolRequestData) {\n        console.log(\"[CS-FLOW] AI requested a tool call:\", JSON.stringify(toolRequestData, null, 2));\n        let toolOutputMessage = \"Tool tidak dikenal atau input salah.\";\n\n        if (toolRequestData.name === 'cariSizeMotor' && toolRequestData.input) {\n          const toolResult = await findMotorSize(toolRequestData.input as CariSizeMotorInput);\n          toolOutputMessage = toolResult.message;\n          \n          // Kirim hasil tool kembali ke AI untuk dirangkai menjadi jawaban natural\n          const modelResponseAfterTool = await ai.generate({\n            model: 'googleai/gemini-1.5-flash-latest',\n            messages: [\n              ...messagesForAI,\n              result.message, // Pesan model sebelumnya yang berisi toolRequest\n              { // Pesan respons dari tool\n                role: 'tool',\n                content: [{\n                  toolResponse: {\n                    name: toolRequestData.name,\n                    output: toolResult, // Kirim seluruh output tool (objek)\n                  }\n                }]\n              }\n            ],\n            prompt: finalSystemPrompt,\n            config: { temperature: 0.5 },\n          });\n          suggestedReply = modelResponseAfterTool.text || \"Zoya bingung setelah pakai alat, coba lagi ya.\";\n\n        } else {\n           suggestedReply = toolOutputMessage; // Jika tool tidak dikenal\n        }\n        console.log(\"[CS-FLOW] Tool output message / AI reply after tool:\", suggestedReply);\n\n      } else {\n        suggestedReply = result.text || \"\";\n      }\n\n      const finishReason = result.finishReason;\n      const safetyRatings = result.safetyRatings;\n\n      console.log(`[CS-FLOW] AI Finish Reason: ${finishReason}`);\n      if (safetyRatings && safetyRatings.length > 0) {\n        console.log('[CS-FLOW] AI Safety Ratings:', JSON.stringify(safetyRatings, null, 2));\n      }\n\n      if (!suggestedReply && finishReason !== \"stop\") {\n        console.error(`[CS-FLOW] ❌ AI generation failed or tool handling error. Finish Reason: ${finishReason}. Safety: ${JSON.stringify(safetyRatings)}`);\n        return \"Maaf, Zoya lagi agak bingung nih boskuu. Coba tanya lagi dengan cara lain ya, atau hubungi CS langsung.\";\n      }\n      return suggestedReply;\n\n    } catch (flowError: any) {\n        console.error(\"[CS-FLOW] ❌ Critical error dalam flow zoyaChatFlow:\", flowError);\n        if (flowError.cause) {\n            console.error(\"[CS-FLOW] Error Cause:\", JSON.stringify(flowError.cause, null, 2));\n        }\n        return `Waduh, Zoya lagi error nih, boskuu. Coba tanya lagi nanti ya. (Pesan Error: ${flowError.message || 'Kesalahan internal tidak diketahui'})`;\n    }\n  }\n);\n\n// Fungsi wrapper yang akan dipanggil oleh UI atau API route\nexport async function generateWhatsAppReply(input: ZoyaChatInput): Promise<{ suggestedReply: string }> {\n  console.log(\"[CS-FLOW] generateWhatsAppReply input:\", JSON.stringify(input, null, 2));\n\n  let mainPromptToUse = input.mainPromptString;\n\n  if (!mainPromptToUse) {\n    try {\n      if (db) {\n        const settingsDocRef = doc(db, 'appSettings', 'aiAgentConfig');\n        const docSnap = await getFirestoreDoc(settingsDocRef);\n        if (docSnap.exists() && docSnap.data()?.mainPrompt) {\n          mainPromptToUse = docSnap.data().mainPrompt;\n          console.log(\"[CS-FLOW] generateWhatsAppReply: Using mainPromptString from Firestore.\");\n        } else {\n          console.log(\"[CS-FLOW] generateWhatsAppReply: mainPrompt not found in Firestore or is empty. Using DEFAULT_AI_SETTINGS.mainPrompt.\");\n          mainPromptToUse = DEFAULT_AI_SETTINGS.mainPrompt;\n        }\n      } else {\n        console.log(\"[CS-FLOW] generateWhatsAppReply: Firestore (db) not available. Using DEFAULT_AI_SETTINGS.mainPrompt.\");\n        mainPromptToUse = DEFAULT_AI_SETTINGS.mainPrompt;\n      }\n    } catch (error) {\n      console.error(\"[CS-FLOW] generateWhatsAppReply: Error fetching mainPrompt from Firestore. Using default.\", error);\n      mainPromptToUse = DEFAULT_AI_SETTINGS.mainPrompt;\n    }\n  } else {\n     console.log(\"[CS-FLOW] generateWhatsAppReply: Using mainPromptString directly from input.\");\n  }\n\n  const flowInput: ZoyaChatInput = {\n    messages: input.messages || [],\n    customerMessage: input.customerMessage,\n    senderNumber: input.senderNumber,\n    mainPromptString: mainPromptToUse,\n    currentDate: input.currentDate,\n    currentTime: input.currentTime,\n    tomorrowDate: input.tomorrowDate,\n    dayAfterTomorrowDate: input.dayAfterTomorrowDate,\n  };\n\n  try {\n    const replyText = await zoyaChatFlow(flowInput);\n    return { suggestedReply: replyText };\n  } catch (error: any) {\n    console.error(\"[CS-FLOW Wrapper] Error running zoyaChatFlow:\", error);\n    return { suggestedReply: `Maaf, Zoya sedang ada kendala teknis. (${error.message || 'Tidak diketahui'})` };\n  }\n}\n    "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 730, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/%28app%29/ai-cs-assistant/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {generateWhatsAppReply as '4053660f6447b38038e1d20965a3df3cd57a2a7b51'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 794, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28app%29/ai-cs-assistant/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(app)/ai-cs-assistant/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(app)/ai-cs-assistant/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA0S,GACvU,wEACA","debugId":null}},
    {"offset": {"line": 808, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28app%29/ai-cs-assistant/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(app)/ai-cs-assistant/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(app)/ai-cs-assistant/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAsR,GACnT,oDACA","debugId":null}},
    {"offset": {"line": 822, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}