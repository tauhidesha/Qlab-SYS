{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firebase.ts"],"sourcesContent":["\nimport { initializeApp, getApp, getApps, type FirebaseApp } from \"firebase/app\";\nimport { getFirestore, type Firestore } from \"firebase/firestore\";\n\n// Minimal logging\nconsole.log(\"[firebase.ts] Initializing Firebase...\");\n\nconst firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n};\n\nif (!firebaseConfig.projectId || !firebaseConfig.apiKey) {\n  console.error(\"[firebase.ts] FATAL ERROR: Firebase projectId or apiKey is MISSING in environment variables.\");\n}\n\nlet app: FirebaseApp;\nlet db: Firestore;\n\nif (getApps().length === 0) {\n  try {\n    app = initializeApp(firebaseConfig);\n    console.log(\"[firebase.ts] Firebase app initialized. Project ID:\", app.options.projectId);\n  } catch (e: any) {\n    console.error(\"[firebase.ts] FAILED to initialize Firebase app:\", e.message);\n    // @ts-ignore\n    app = null;\n  }\n} else {\n  app = getApp();\n  console.log(\"[firebase.ts] Using existing Firebase app. Project ID:\", app.options.projectId);\n}\n\n// @ts-ignore\nif (app) {\n  try {\n    // @ts-ignore\n    db = getFirestore(app);\n    console.log(\"[firebase.ts] Firestore instance obtained.\");\n  } catch (e: any) {\n    console.error(\"[firebase.ts] FAILED to get Firestore instance:\", e?.message);\n  }\n} else {\n    console.error(\"[firebase.ts] Firebase app not properly initialized, cannot get Firestore.\");\n}\n\nexport { app, db };\n"],"names":[],"mappings":";;;;AACA;AAAA;AACA;AAAA;;;AAEA,kBAAkB;AAClB,QAAQ,GAAG,CAAC;AAEZ,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;AACP;AAEA,IAAI,CAAC,eAAe,SAAS,IAAI,CAAC,eAAe,MAAM,EAAE;IACvD,QAAQ,KAAK,CAAC;AAChB;AAEA,IAAI;AACJ,IAAI;AAEJ,IAAI,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,KAAK,GAAG;IAC1B,IAAI;QACF,MAAM,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE;QACpB,QAAQ,GAAG,CAAC,uDAAuD,IAAI,OAAO,CAAC,SAAS;IAC1F,EAAE,OAAO,GAAQ;QACf,QAAQ,KAAK,CAAC,oDAAoD,EAAE,OAAO;QAC3E,aAAa;QACb,MAAM;IACR;AACF,OAAO;IACL,MAAM,CAAA,GAAA,oLAAA,CAAA,SAAM,AAAD;IACX,QAAQ,GAAG,CAAC,0DAA0D,IAAI,OAAO,CAAC,SAAS;AAC7F;AAEA,aAAa;AACb,IAAI,KAAK;IACP,IAAI;QACF,aAAa;QACb,KAAK,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE;QAClB,QAAQ,GAAG,CAAC;IACd,EAAE,OAAO,GAAQ;QACf,QAAQ,KAAK,CAAC,mDAAmD,GAAG;IACtE;AACF,OAAO;IACH,QAAQ,KAAK,CAAC;AAClB","debugId":null}},
    {"offset": {"line": 264, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["\nimport '@/lib/firebase'; // Ensure Firebase is initialized early\nimport {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai'; // Impor plugin Google AI\n\nif (!process.env.GOOGLE_API_KEY) {\n  const errorMessage = \"Kesalahan Konfigurasi: GOOGLE_API_KEY tidak ditemukan di environment variables. Ini dibutuhkan oleh plugin Google AI. Pastikan sudah di-set di file .env Anda.\";\n  console.error(`\\n\\n🛑 ${errorMessage}\\n\\n`);\n  throw new Error(errorMessage);\n}\n\nexport const ai = genkit({\n  plugins: [\n    googleAI(), // Gunakan plugin Google AI\n  ],\n  model: 'googleai/gemini-1.5-flash-latest', // Model diubah ke Gemini 1.5 Flash terbaru\n  // Opsi telemetry tidak lagi dikonfigurasi di sini untuk Genkit v1.x\n  // Jika butuh logging, konfigurasi dilakukan secara berbeda atau via environment.\n});\n\n"],"names":[],"mappings":";;;AACA,8MAAyB,uCAAuC;AAChE;AAAA;AACA,8TAA8C,yBAAyB;AAAvE;;;;AAEA,IAAI,CAAC,QAAQ,GAAG,CAAC,cAAc,EAAE;IAC/B,MAAM,eAAe;IACrB,QAAQ,KAAK,CAAC,CAAC,OAAO,EAAE,aAAa,IAAI,CAAC;IAC1C,MAAM,IAAI,MAAM;AAClB;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QACP,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KACR;IACD,OAAO;AAGT","debugId":null}},
    {"offset": {"line": 292, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/types/aiSettings.ts"],"sourcesContent":["\nimport { z } from 'zod';\n\nexport const AI_AGENT_BEHAVIORS = [\n  \"Ramah & Membantu\",\n  \"Profesional & To-the-point\",\n  \"Humoris & Santai\",\n  \"Empatik & Sabar\",\n] as const;\nexport type AiAgentBehavior = typeof AI_AGENT_BEHAVIORS[number];\n\nexport const AI_TRANSFER_CONDITIONS = [\n  \"Pelanggan Meminta Secara Eksplisit\",\n  \"AI Tidak Menemukan Jawaban (Setelah 2x Coba)\",\n  \"Terdeteksi Emosi Negatif dari Pelanggan\",\n  \"Disebut Kata Kunci Eskalasi (mis. 'manajer', 'komplain')\",\n  \"Setelah 5 Pertanyaan Tanpa Solusi\",\n] as const;\nexport type AiTransferCondition = typeof AI_TRANSFER_CONDITIONS[number];\n\nconst FollowUpDelaysSchema = z.object({\n  firstAttemptHours: z.preprocess(\n    (val) => (val === \"\" || val === undefined || val === null) ? undefined : parseInt(String(val), 10),\n    z.number({ invalid_type_error: \"Jam harus angka.\"}).min(1, \"Minimal 1 jam.\").max(168, \"Maksimal 168 jam (7 hari).\").optional()\n  ),\n  secondAttemptDays: z.preprocess(\n    (val) => (val === \"\" || val === undefined || val === null) ? undefined : parseInt(String(val), 10),\n    z.number({ invalid_type_error: \"Hari harus angka.\"}).min(1, \"Minimal 1 hari.\").max(30, \"Maksimal 30 hari.\").optional()\n  ),\n  thirdAttemptDays: z.preprocess(\n    (val) => (val === \"\" || val === undefined || val === null) ? undefined : parseInt(String(val), 10),\n    z.number({ invalid_type_error: \"Hari harus angka.\"}).min(1, \"Minimal 1 hari.\").max(30, \"Maksimal 30 hari.\").optional()\n  ),\n  fourthAttemptDays: z.preprocess(\n    (val) => (val === \"\" || val === undefined || val === null) ? undefined : parseInt(String(val), 10),\n    z.number({ invalid_type_error: \"Hari harus angka.\"}).min(1, \"Minimal 1 hari.\").max(90, \"Maksimal 90 hari.\").optional()\n  ),\n});\n\nexport const AiSettingsFormSchema = z.object({\n  agentBehavior: z.enum(AI_AGENT_BEHAVIORS, {\n    required_error: \"Perilaku agen AI harus dipilih.\",\n  }),\n  welcomeMessage: z.string().min(10, \"Pesan selamat datang minimal 10 karakter.\").max(300, \"Pesan selamat datang maksimal 300 karakter.\"),\n  transferConditions: z.array(z.enum(AI_TRANSFER_CONDITIONS)).min(1, \"Minimal satu kondisi transfer harus dipilih.\"),\n  knowledgeBaseDescription: z.string().max(10000, \"Deskripsi sumber pengetahuan maksimal 10000 karakter.\").optional().describe(\"Panduan tingkat tinggi untuk AI. Detail pengetahuan akan diambil melalui tools.\"),\n\n  enableHumanHandoff: z.boolean().default(false).describe(\"Aktifkan notifikasi ke agen manusia jika AI perlu bantuan.\"),\n  humanAgentWhatsAppNumber: z.string().regex(/^\\+?[0-9\\s-]{10,18}$|^$/, \"Format nomor WhatsApp agen tidak valid (mis. +628123456789 atau kosong).\").optional().describe(\"Nomor WhatsApp agen manusia untuk notifikasi handoff.\"),\n\n  enableFollowUp: z.boolean().default(false).describe(\"Aktifkan fitur follow-up otomatis untuk pelanggan yang pernah menghubungi via WhatsApp namun belum melakukan kunjungan atau transaksi. Follow-up berhenti jika pelanggan tercatat datang/bertransaksi.\"),\n  followUpMessageTemplate: z.string().max(300, \"Template pesan follow-up maksimal 300 karakter.\").optional(),\n  followUpDelays: FollowUpDelaysSchema.optional(),\n  mainPrompt: z.string().min(100, \"Prompt utama minimal 100 karakter.\").max(15000, \"Prompt utama maksimal 15000 karakter.\").optional().describe(\"Prompt utama yang mengarahkan perilaku dan logika Zoya.\"),\n}).superRefine((data, ctx) => {\n  if (data.enableFollowUp) {\n    if (!data.followUpMessageTemplate || data.followUpMessageTemplate.trim() === \"\") {\n      ctx.addIssue({\n        code: z.ZodIssueCode.custom,\n        message: \"Template pesan follow-up diperlukan jika fitur follow-up aktif.\",\n        path: [\"followUpMessageTemplate\"],\n      });\n    }\n    if (!data.followUpDelays?.firstAttemptHours) {\n      ctx.addIssue({\n        code: z.ZodIssueCode.custom,\n        message: \"Penundaan follow-up pertama (jam) diperlukan.\",\n        path: [\"followUpDelays\", \"firstAttemptHours\"],\n      });\n    }\n  }\n  if (data.enableHumanHandoff && (!data.humanAgentWhatsAppNumber || data.humanAgentWhatsAppNumber.trim() === \"\")) {\n    ctx.addIssue({\n      code: z.ZodIssueCode.custom,\n      message: \"Nomor WhatsApp Agen Manusia diperlukan jika notifikasi handoff aktif.\",\n      path: [\"humanAgentWhatsAppNumber\"],\n    });\n  }\n});\n\nexport type AiSettingsFormValues = z.infer<typeof AiSettingsFormSchema>;\nexport type FollowUpDelaysValues = z.infer<typeof FollowUpDelaysSchema>;\n\nexport const DEFAULT_MAIN_PROMPT_ZOYA = `\nAnda adalah \"Zoya\" - Customer Service AI dari QLAB Moto Detailing.\nTUGAS UTAMA ANDA (PRIORITAS DARI ATAS KE BAWAH):\n1.  **TANGANI PERTANYAAN UKURAN MOTOR**: Jika pesan user HANYA berisi pertanyaan tentang ukuran motor (misalnya, \"NMAX ukuran apa?\", \"ukuran PCX?\", \"beat termasuk ukuran apa?\"), LANGSUNG gunakan tool \\`cariSizeMotor\\` dan berikan jawabannya. JANGAN menyapa ulang atau bertanya hal lain dulu. Contoh jawaban: \"Siap! Motor NMAX itu masuknya ukuran M ya, Bos.\"\n2.  **TANGANI PERTANYAAN LAYANAN SPESIFIK**: Jika user menyebut NAMA LAYANAN SPESIFIK (mis. \"cuci premium\", \"coating advance formula L\"):\n    a.  Jika {{{knownMotorcycleName}}} adalah \"belum diketahui\": Sapa balik, sebut layanan yang dia minati, lalu TANYAKAN TIPE MOTORNYA. Contoh: \"Wih, cuci premium mantap nih, Kak! Motornya tipe apa ya?\"\n    b.  Jika {{{knownMotorcycleName}}} SUDAH DIKETAHUI (mis. user bilang \"mau cuci premium, motor saya NMAX\" ATAU user baru saja memberitahu tipe motornya setelah Anda bertanya): LANGSUNG gunakan tool \\`getProductServiceDetailsByNameTool\\` untuk layanan SPESIFIK tersebut dengan motor yang sudah diketahui. Sampaikan detailnya (harga, durasi, dll). JANGAN bertanya lagi mau layanan yang mana jika minat spesifik sudah jelas.\n3.  **TANGANI PERTANYAAN KATEGORI LAYANAN UMUM**: Jika user bertanya tentang KATEGORI layanan secara umum (mis. \"mau cuci\", \"info detailing\", \"coating apa aja?\") DAN BUKAN merupakan jawaban atas pertanyaan Anda soal tipe motor untuk layanan spesifik: Ini akan ditangani oleh sub-flow (di luar kendali prompt ini, Anda hanya akan menerima outputnya).\n4.  **SAPAAN AWAL**: Jika tidak ada kondisi di atas yang terpenuhi (mis. user baru chat \"halo\"), sapa pelanggan baru dengan ramah.\n\n🎯 Gaya Bahasa:\n- Santai, akrab: \"bro\", \"kak\", \"mas\".\n- Informatif, jelas.\n- Istilah otomotif: \"kinclong\", \"ganteng maksimal\", \"spa motor\".\n- Emoji secukupnya: ✅😎✨💸🛠️👋.\n- Bahasa Indonesia.\n\n🧠 Pengetahuan Umum (BEKAL ANDA, BUKAN UNTUK DITUNJUKKAN KE USER):\n- \"Full Detailing\" HANYA untuk cat GLOSSY.\n- \"Coating\" punya harga BEDA untuk DOFF dan GLOSSY.\n- Moge (Harley, CBR600RR) otomatis \"SIZE XL\".\n- QLAB Moto Detailing: Jl. Sukasenang V No.1A, Cikutra, Bandung. Buka 09:00 - 21:00 WIB.\n- INFO_MOTOR_DARI_SISTEM: Nama: {{{knownMotorcycleName}}}, Ukuran: {{{knownMotorcycleSize}}}\n\n🛠️ Tools yang BISA KAMU MINTA ke sistem:\n1.  **cariSizeMotor**: Mendapatkan ukuran motor. Input: \\`{\"namaMotor\": \"NAMA_MOTOR_DARI_USER\"}\\`\n2.  **getProductServiceDetailsByNameTool**: Mendapatkan detail layanan/produk SPESIFIK. Input: \\`{\"productName\": \"NAMA_LAYANAN_SPESIFIK_DARI_USER\"}\\`\n\nJAWABAN ZOYA (format natural, TANPA menyebutkan \"Pengetahuan Umum\" atau \"Logika Utama\" Anda, atau bagaimana Anda meminta sistem menjalankan tool):\n`.trim();\n\n\nexport const DEFAULT_SERVICE_INQUIRY_SUB_FLOW_PROMPT = `\nAnda adalah AI perangkai jawaban yang CERDAS dan TO THE POINT.\nDATA YANG ANDA TERIMA DARI SISTEM (DI DALAM PESAN 'tool' SEBELUM INI):\n- Hasil dari tool 'cariInfoLayananTool' untuk kategori: \"{{{serviceKeyword}}}\"\n- Pertanyaan Awal Pelanggan: \"{{{customerQuery}}}\"\n- Informasi Motor Pelanggan: Nama: {{{knownMotorcycleName}}}, Ukuran: {{{knownMotorcycleSize}}}\n\nTUGAS ANDA (LANGSUNG LAKUKAN, JANGAN ADA KATA PENGANTAR SEPERTI \"SAYA COBA CARI INFO...\"):\n1.  PERIKSA output dari tool 'cariInfoLayananTool' yang sudah ada di history pesan.\n2.  JIKA output tool berisi SATU ATAU LEBIH item layanan:\n    a.  JIKA informasi motor ({{{knownMotorcycleName}}}) adalah \"belum diketahui\":\n        -   MULAI dengan kalimat: \"Untuk layanan {{{serviceKeyword}}}, QLAB ada beberapa pilihan nih, Kak:\"\n        -   Untuk SETIAP item layanan dari tool:\n            -   Sebutkan NAMA item (**bold**).\n            -   Deskripsi singkat (jika ada).\n            -   Contoh VARIAN jika ada (mis. \"Tersedia varian S, M, L\").\n            -   Harga DASAR (field 'price') dan Estimasi DURASI (field 'estimatedDuration') jika ada di data.\n        -   Setelah semua item dijelaskan, AKHIRI dengan: \"Dari pilihan {{{serviceKeyword}}} tadi, ada yang kakak minati? Oh iya, motornya apa ya kak?\"\n    b.  JIKA informasi motor ({{{knownMotorcycleName}}}) SUDAH DIKETAHUI:\n        -   MULAI dengan kalimat: \"Oke Kak! Untuk motor {{{knownMotorcycleName}}} terkait layanan {{{serviceKeyword}}}, pilihannya ada:\"\n        -   Jelaskan SEMUA item layanan dari tool (nama, deskripsi, varian, harga dasar, durasi).\n        -   Setelah semua item dijelaskan, AKHIRI dengan: \"Nah, buat motor {{{knownMotorcycleName}}}, dari pilihan layanan {{{serviceKeyword}}} yang tadi Zoya sebutin, ada yang bikin kamu tertarik?\"\n3.  JIKA output tool KOSONG atau null:\n    -   JAWAB LANGSUNG: \"Waduh, maaf banget nih Kak, buat kategori {{{serviceKeyword}}} kayaknya lagi belum ada info detailnya di sistem Zoya. Mungkin bisa kasih tau lebih spesifik lagi, atau mau Zoya bantu cari info layanan lain?\"\n4.  PENTING: Fokus pada penjelasan layanan/produk dan menanyakan minat/tipe motor.\n\nJAWABAN ANDA (untuk diteruskan ke user, formatnya harus natural dan mudah dibaca):\n`.trim();\n\n\nexport const DEFAULT_AI_SETTINGS: AiSettingsFormValues = {\n  agentBehavior: \"Humoris & Santai\",\n  welcomeMessage: \"Halo bro! Zoya di sini, siap bantu seputar QLAB Moto Detailing. Ada yang bisa Zoya bantu?\",\n  transferConditions: [\"Pelanggan Meminta Secara Eksplisit\"],\n  knowledgeBaseDescription: `Anda adalah asisten AI untuk QLAB Moto Detailing. Tugas utama Anda adalah membantu pelanggan dan staf. Gunakan pengetahuan umum tentang layanan dan produk QLAB. Jika perlu informasi spesifik seperti ukuran motor atau detail layanan, gunakan tool yang tersedia.`,\n  mainPrompt: DEFAULT_MAIN_PROMPT_ZOYA,\n  enableHumanHandoff: false,\n  humanAgentWhatsAppNumber: '',\n  enableFollowUp: false,\n  followUpMessageTemplate: \"Halo Kak, kami perhatikan Anda sempat menghubungi kami beberapa waktu lalu. Apakah ada rencana untuk berkunjung ke bengkel kami? Ada promo menarik lho!\",\n  followUpDelays: {\n    firstAttemptHours: 24,\n    secondAttemptDays: 7,\n    thirdAttemptDays: 7,\n    fourthAttemptDays: 30,\n  },\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 458, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/tools/cari-size-motor-tool.ts"],"sourcesContent":["\n/**\n * @fileOverview Genkit tool for finding the size of a motorcycle model.\n * This tool is intended to be used by flows.\n *\n * - cariSizeMotorTool - The Genkit tool definition.\n * - findMotorSize - The actual function performing the lookup (exported for direct use).\n * - CariSizeMotorInput - Zod type for the tool's input.\n * - CariSizeMotorOutput - Zod type for the tool's output.\n */\n\nimport { ai } from '@/ai/genkit'; // Harus dari @/ai/genkit\nimport { z } from 'zod';\nimport { db } from '@/lib/firebase';\nimport { collection, query as firestoreQuery, where, getDocs, limit } from 'firebase/firestore';\n\n// Schemas for the actual tool\nconst CariSizeMotorInputSchema = z.object({\n  namaMotor: z.string().min(1, \"Nama motor tidak boleh kosong.\").describe('Nama atau model motor yang ingin dicari ukurannya, contoh: NMAX, PCX, Vario.'),\n});\nexport type CariSizeMotorInput = z.infer<typeof CariSizeMotorInputSchema>;\n\nconst CariSizeMotorOutputSchema = z.object({\n  success: z.boolean().describe('Apakah pencarian berhasil atau tidak.'),\n  size: z.string().optional().describe('Ukuran motor (S, M, L, XL) jika ditemukan.'),\n  message: z.string().describe('Pesan hasil pencarian, termasuk ukuran jika berhasil atau pesan error jika gagal.'),\n  vehicleModelFound: z.string().optional().describe('Nama model motor yang sebenarnya ditemukan di database.'),\n});\nexport type CariSizeMotorOutput = z.infer<typeof CariSizeMotorOutputSchema>;\n\n// Export this function so it can be called directly from other flows if needed.\nexport async function findMotorSize(input: CariSizeMotorInput): Promise<CariSizeMotorOutput> {\n    const { namaMotor } = input;\n    const namaMotorLower = namaMotor.toLowerCase().trim();\n    console.log(`[findMotorSize Tool Function] Mencari ukuran untuk: \"${namaMotorLower}\"`);\n\n    if (!db) {\n      console.error(\"[findMotorSize Tool Function] Firestore DB (db) is not initialized.\");\n      return { success: false, message: \"Database tidak terhubung, tidak bisa mencari ukuran motor.\" };\n    }\n\n    try {\n      const vehicleTypesRef = collection(db, 'vehicleTypes');\n      let q;\n      let querySnapshot;\n      let foundVehicleData: any = null;\n\n      // Coba cari berdasarkan alias dulu\n      q = firestoreQuery(vehicleTypesRef, where('aliases', 'array-contains', namaMotorLower), limit(1));\n      querySnapshot = await getDocs(q);\n\n      if (!querySnapshot.empty) {\n        foundVehicleData = querySnapshot.docs[0].data();\n      } else {\n        // Jika tidak ketemu di alias, coba cari berdasarkan model_lowercase (jika ada field itu)\n        // Atau bisa juga ambil semua lalu filter, tapi kurang efisien.\n        // Untuk contoh ini, kita asumsikan ada model_lowercase atau kita ambil semua\n        const allVehiclesSnapshot = await getDocs(vehicleTypesRef);\n        for (const doc of allVehiclesSnapshot.docs) {\n          const vehicle = doc.data();\n          if (vehicle.model && vehicle.model.toLowerCase() === namaMotorLower) {\n            foundVehicleData = vehicle;\n            break;\n          }\n           // Check model_lowercase as fallback\n          if (vehicle.model_lowercase && vehicle.model_lowercase === namaMotorLower) {\n            foundVehicleData = vehicle;\n            break;\n          }\n        }\n      }\n\n      if (foundVehicleData && foundVehicleData.size) {\n        console.log(`[findMotorSize Tool Function] Ditemukan: ${foundVehicleData.model} ukuran ${foundVehicleData.size}`);\n        return {\n          success: true,\n          size: foundVehicleData.size,\n          message: `Motor ${foundVehicleData.model} (${namaMotor}) termasuk ukuran ${foundVehicleData.size}.`,\n          vehicleModelFound: foundVehicleData.model,\n        };\n      } else {\n        console.log(`[findMotorSize Tool Function] Ukuran untuk \"${namaMotor}\" tidak ditemukan.`);\n        return {\n          success: false,\n          message: `Maaf, Zoya tidak menemukan ukuran untuk motor \"${namaMotor}\". Mungkin bisa coba nama model yang lebih spesifik atau umum?`,\n        };\n      }\n    } catch (error) {\n      console.error(\"[findMotorSize Tool Function] Error saat mencari ukuran motor:\", error);\n      return {\n        success: false,\n        message: \"Terjadi kesalahan internal saat mencari ukuran motor. Coba lagi nanti.\",\n      };\n    }\n}\n\nexport const cariSizeMotorTool = ai.defineTool(\n  {\n    name: 'cariSizeMotor',\n    description: 'Mencari ukuran (S, M, L, XL) untuk model motor tertentu. Gunakan jika user bertanya ukuran motornya, atau jika perlu tahu ukuran motor untuk menentukan harga layanan atau informasi lain.',\n    inputSchema: CariSizeMotorInputSchema,\n    outputSchema: CariSizeMotorOutputSchema,\n  },\n  findMotorSize // Pass the actual function here\n);\n\n\n    "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 565, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/types/aiToolSchemas.ts"],"sourcesContent":["\nimport { z } from 'zod';\n\n// Skema untuk varian produk/layanan yang akan dikembalikan oleh tool\nconst ProductVariantInfoSchema = z.object({\n  name: z.string().describe(\"Nama varian.\"),\n  price: z.number().describe(\"Harga varian.\"),\n  pointsAwarded: z.number().optional().describe(\"Poin yang diberikan untuk varian ini.\"),\n  estimatedDuration: z.string().optional().describe(\"Estimasi durasi pengerjaan varian ini (jika layanan).\"),\n});\nexport type ProductVariantInfo = z.infer<typeof ProductVariantInfoSchema>;\n\n// Skema untuk informasi produk/layanan yang akan dikembalikan oleh tool\nexport const ProductServiceInfoSchema = z.object({\n  id: z.string().describe(\"ID unik produk/layanan.\"),\n  name: z.string().describe(\"Nama produk atau layanan.\"),\n  type: z.enum(['Layanan', 'Produk']).describe(\"Jenis item, apakah 'Layanan' atau 'Produk'.\"),\n  category: z.string().describe(\"Kategori produk/layanan.\"),\n  price: z.number().describe(\"Harga dasar produk/layanan. Bisa 0 jika harga ditentukan oleh varian.\"),\n  description: z.string().optional().describe(\"Deskripsi singkat produk/layanan.\"),\n  pointsAwarded: z.number().optional().describe(\"Poin loyalitas yang diberikan untuk produk/layanan dasar ini.\"),\n  estimatedDuration: z.string().optional().describe(\"Estimasi durasi pengerjaan (jika ini adalah layanan).\"),\n  variants: z.array(ProductVariantInfoSchema).optional().describe(\"Daftar varian yang tersedia untuk produk/layanan ini.\"),\n});\nexport type ProductServiceInfo = z.infer<typeof ProductServiceInfoSchema>;\n\n// Skema untuk informasi motor klien\nconst ClientMotorcycleInfoSchema = z.object({\n  name: z.string().describe(\"Nama atau model motor.\"),\n  licensePlate: z.string().describe(\"Plat nomor motor.\"),\n});\nexport type ClientMotorcycleInfo = z.infer<typeof ClientMotorcycleInfoSchema>;\n\n// Skema untuk informasi klien yang akan dikembalikan oleh tool\nexport const ClientInfoSchema = z.object({\n  id: z.string().describe(\"ID unik klien.\"),\n  name: z.string().describe(\"Nama lengkap klien.\"),\n  phone: z.string().describe(\"Nomor telepon klien.\"),\n  loyaltyPoints: z.number().describe(\"Jumlah poin loyalitas yang dimiliki klien.\"),\n  motorcycles: z.array(ClientMotorcycleInfoSchema).optional().describe(\"Daftar sepeda motor yang terdaftar atas nama klien ini.\"),\n  lastVisit: z.string().optional().describe(\"Tanggal kunjungan terakhir klien (format YYYY-MM-DD).\"),\n});\nexport type ClientInfo = z.infer<typeof ClientInfoSchema>;\n"],"names":[],"mappings":";;;;AACA;AAAA;;AAEA,qEAAqE;AACrE,MAAM,2BAA2B,iLAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACxC,MAAM,iLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC1B,OAAO,iLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC3B,eAAe,iLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;IAC9C,mBAAmB,iLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;AACpD;AAIO,MAAM,2BAA2B,iLAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC/C,IAAI,iLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACxB,MAAM,iLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC1B,MAAM,iLAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAW;KAAS,EAAE,QAAQ,CAAC;IAC7C,UAAU,iLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC9B,OAAO,iLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC3B,aAAa,iLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;IAC5C,eAAe,iLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;IAC9C,mBAAmB,iLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;IAClD,UAAU,iLAAA,CAAA,IAAC,CAAC,KAAK,CAAC,0BAA0B,QAAQ,GAAG,QAAQ,CAAC;AAClE;AAGA,oCAAoC;AACpC,MAAM,6BAA6B,iLAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC1C,MAAM,iLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC1B,cAAc,iLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACpC;AAIO,MAAM,mBAAmB,iLAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACvC,IAAI,iLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACxB,MAAM,iLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC1B,OAAO,iLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC3B,eAAe,iLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACnC,aAAa,iLAAA,CAAA,IAAC,CAAC,KAAK,CAAC,4BAA4B,QAAQ,GAAG,QAAQ,CAAC;IACrE,WAAW,iLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;AAC5C","debugId":null}},
    {"offset": {"line": 612, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/tools/productLookupTool.ts"],"sourcesContent":["\n/**\n * @fileOverview Genkit tool for looking up product or service details from Firestore.\n */\n\nimport { ai } from '@/ai/genkit';\nimport { z } from 'zod';\nimport { collection, query as firestoreQuery, getDocs } from 'firebase/firestore';\nimport { db } from '@/lib/firebase';\nimport { ProductServiceInfoSchema, type ProductServiceInfo, type ProductVariantInfo } from '@/types/aiToolSchemas';\nimport { v4 as uuidv4 } from 'uuid';\n\n// Define ServiceProduct type locally or import if it's broadly used\ninterface ServiceProductDbData {\n  id: string;\n  name: string;\n  type: 'Layanan' | 'Produk';\n  category: string;\n  price: number;\n  description?: string;\n  pointsAwarded?: number;\n  estimatedDuration?: string;\n  variants?: ServiceProductVariant[];\n  stockQuantity?: number;\n  costPrice?: number;\n  [key: string]: any; // Allow other fields that might exist in Firestore\n}\n\n\nconst ProductLookupInputSchema = z.object({\n  productName: z.string().describe(\"Nama produk atau layanan yang ingin dicari detailnya. Harus spesifik.\"),\n});\nexport type ProductLookupInput = z.infer<typeof ProductLookupInputSchema>;\n\n// Export this function so it can be called directly from other flows if needed.\nexport async function findProductServiceByName(input: ProductLookupInput): Promise<ProductServiceInfo | null> {\n    if (!input.productName || input.productName.trim() === '') {\n      console.log(\"ProductLookupTool Function: Nama produk kosong.\");\n      return null;\n    }\n    console.log(`ProductLookupTool Function: Mencari produk/layanan dengan nama: \"${input.productName}\"`);\n\n    if (!db) {\n      console.error(\"[ProductLookupTool Function] FATAL: Firestore DB (db) is not initialized. Cannot query.\");\n      return null;\n    }\n\n    try {\n      const servicesRef = collection(db, 'services');\n      const q = firestoreQuery(servicesRef); // Get all services/products\n      const querySnapshot = await getDocs(q);\n\n      let foundItem: ProductServiceInfo | null = null;\n      const searchTermLower = input.productName.toLowerCase().trim();\n\n      let bestMatchCandidate: (ProductServiceInfo & { originalItem?: ServiceProductDbData, isVariantMatch?: boolean, matchScore?: number }) | null = null;\n\n      for (const doc of querySnapshot.docs) {\n        const item = { id: doc.id, ...doc.data() } as ServiceProductDbData; \n\n        // Check base item name\n        if (item.name.toLowerCase().includes(searchTermLower)) {\n          let score = 0;\n          if (item.name.toLowerCase() === searchTermLower) score = 100; // Exact match\n          else if (item.name.toLowerCase().startsWith(searchTermLower)) score = 50; // Starts with\n          else score = 20; // Includes\n\n          if (!bestMatchCandidate || score > (bestMatchCandidate.matchScore || 0) || (score === bestMatchCandidate.matchScore && item.name.length < bestMatchCandidate.name.length)) {\n             bestMatchCandidate = { \n                ...item, // Spread all fields from item\n                // Ensure all required fields for ProductServiceInfo are present\n                id: item.id,\n                name: item.name,\n                type: item.type,\n                category: item.category,\n                price: item.price,\n                // Optional fields:\n                description: item.description || undefined,\n                pointsAwarded: item.pointsAwarded || undefined,\n                estimatedDuration: item.estimatedDuration || undefined,\n                variants: item.variants?.map(v => ({...v, id: v.id || uuidv4()})) || undefined,\n                originalItem: item, \n                isVariantMatch: false, \n                matchScore: score \n            };\n          }\n        }\n\n        // Check variants\n        if (item.variants) {\n          for (const variant of item.variants) {\n            const fullVariantName = `${item.name} - ${variant.name}`;\n            if (fullVariantName.toLowerCase().includes(searchTermLower)) {\n              let score = 0;\n              if (fullVariantName.toLowerCase() === searchTermLower) score = 110; // Higher score for exact variant match\n              else if (fullVariantName.toLowerCase().startsWith(searchTermLower)) score = 60;\n              else score = 30;\n\n              if (!bestMatchCandidate || score > (bestMatchCandidate.matchScore || 0) || (score === bestMatchCandidate.matchScore && fullVariantName.length < bestMatchCandidate.name.length)) {\n                bestMatchCandidate = {\n                  id: item.id, \n                  name: fullVariantName, \n                  type: item.type,\n                  category: item.category,\n                  price: variant.price, \n                  description: item.description || undefined, \n                  pointsAwarded: variant.pointsAwarded ?? item.pointsAwarded,\n                  estimatedDuration: variant.estimatedDuration ?? item.estimatedDuration,\n                  variants: undefined, \n                  originalItem: item, \n                  isVariantMatch: true, \n                  matchScore: score\n                };\n              }\n            }\n          }\n        }\n      }\n      \n      if (bestMatchCandidate) {\n        console.log(`ProductLookupTool Function: Ditemukan kandidat terbaik: ${bestMatchCandidate.name} (Score: ${bestMatchCandidate.matchScore})`);\n        // Construct the final item to return, ensuring it matches ProductServiceInfoSchema\n        foundItem = {\n            id: bestMatchCandidate.id,\n            name: bestMatchCandidate.name,\n            type: bestMatchCandidate.type,\n            category: bestMatchCandidate.category,\n            price: bestMatchCandidate.price,\n            description: bestMatchCandidate.description || undefined,\n            pointsAwarded: bestMatchCandidate.pointsAwarded || undefined,\n            estimatedDuration: bestMatchCandidate.estimatedDuration || undefined,\n            variants: !bestMatchCandidate.isVariantMatch && bestMatchCandidate.originalItem?.variants \n                ? bestMatchCandidate.originalItem.variants.map((v: any) => ({ // Ensure v has id or generate one\n                    id: v.id || uuidv4(),\n                    name: v.name,\n                    price: v.price,\n                    pointsAwarded: v.pointsAwarded,\n                    estimatedDuration: v.estimatedDuration,\n                  })) \n                : undefined,\n        };\n\n        try {\n          ProductServiceInfoSchema.parse(foundItem);\n          return foundItem;\n        } catch (zodError: any) {\n          console.error(\"ProductLookupTool Function: Zod validation error for found item:\", JSON.stringify(zodError.format(), null, 2));\n          console.error(\"ProductLookupTool Function: Data that failed validation:\", JSON.stringify(foundItem, null, 2));\n          return null;\n        }\n      } else {\n        console.log(`ProductLookupTool Function: Tidak ada produk/layanan yang cocok dengan nama \"${input.productName}\".`);\n        return null;\n      }\n    } catch (error) {\n      console.error('ProductLookupTool Function: Error saat mengambil data dari Firestore:', error);\n      return null;\n    }\n}\n\nexport const getProductServiceDetailsByNameTool = ai.defineTool(\n  {\n    name: 'getProductServiceDetailsByNameTool',\n    description: 'Mencari dan mengembalikan detail spesifik dari sebuah produk atau layanan berdasarkan namanya. Berguna untuk menjawab pertanyaan pelanggan tentang harga, durasi, ketersediaan, atau deskripsi item tertentu.',\n    inputSchema: ProductLookupInputSchema,\n    outputSchema: z.union([ProductServiceInfoSchema, z.null()]).describe(\"Objek berisi detail produk/layanan, atau null jika tidak ditemukan.\"),\n  },\n  findProductServiceByName // Pass the actual function here\n);\n\n\n    "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 768, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/tools/cariInfoLayananTool.ts"],"sourcesContent":["\n/**\n * @fileOverview Genkit tool for searching services by category.\n * This tool is intended to be used by sub-flows or specialized flows.\n *\n * - cariInfoLayananTool - The Genkit tool definition.\n * - findLayananByCategory - The actual function performing the lookup (exported for direct use).\n * - CariInfoLayananInput - Zod type for the tool's input.\n * - CariInfoLayananOutput - Zod type for the tool's output.\n */\n\nimport { ai } from '@/ai/genkit'; // Harus dari @/ai/genkit\nimport { z } from 'zod';\nimport { db } from '@/lib/firebase';\nimport { collection, query as firestoreQuery, getDocs, where } from 'firebase/firestore';\nimport type { ProductServiceInfo } from '@/types/aiToolSchemas';\nimport { ProductServiceInfoSchema } from '@/types/aiToolSchemas';\nimport { v4 as uuidv4 } from 'uuid'; // Ensure uuid is imported if variants might need new IDs\n\n// Schemas for the actual tool (NOT exported directly from this file if it's not 'use server')\nconst CariInfoLayananInputSchema = z.object({\n  keyword: z.string().min(1, \"Kata kunci kategori pencarian tidak boleh kosong.\").describe('Nama KATEGORI layanan yang ingin dicari, mis. \"cuci\", \"coating\", \"detailing\". Akan dicocokkan (case-insensitive) dengan field \"category\" pada data layanan.'),\n});\nexport type CariInfoLayananInput = z.infer<typeof CariInfoLayananInputSchema>;\n\nconst CariInfoLayananOutputSchema = z.array(ProductServiceInfoSchema).describe(\"Daftar layanan yang cocok dengan KATEGORI yang dicari, bisa kosong.\");\nexport type CariInfoLayananOutput = z.infer<typeof CariInfoLayananOutputSchema>;\n\n// This function contains the actual server-side logic (DB access)\n// Export this function so it can be called directly from other flows if needed.\nexport async function findLayananByCategory(input: CariInfoLayananInput): Promise<CariInfoLayananOutput> {\n  const { keyword } = input;\n  const categoryKeywordLower = keyword.toLowerCase().trim();\n  console.log(`[findLayananByCategory Tool Function] Attempting to find services for CATEGORY: \"${categoryKeywordLower}\"`);\n\n  if (!db) {\n    console.error(\"[findLayananByCategory Tool Function] FATAL: Firestore DB (db) is not initialized. Cannot query.\");\n    return [];\n  }\n  console.log(`[findLayananByCategory Tool Function] Using Firestore Project ID: ${db.app.options.projectId || 'PROJECT ID NOT AVAILABLE ON DB INSTANCE'}`);\n\n\n  const matchingServices: ProductServiceInfo[] = [];\n  try {\n    const servicesCollectionRef = collection(db, 'services');\n    console.log(`[findLayananByCategory Tool Function] Querying collection 'services' WHERE \"category\" == \"${categoryKeywordLower}\"`);\n    // Query Firestore. Pastikan field 'category' di Firestore juga lowercase atau lakukan perbandingan case-insensitive jika memungkinkan\n    const q = firestoreQuery(servicesCollectionRef, where(\"category\", \"==\", categoryKeywordLower));\n    const querySnapshot = await getDocs(q);\n\n    console.log(`[findLayananByCategory Tool Function] Query successful. Found ${querySnapshot.size} documents matching category \"${categoryKeywordLower}\".`);\n\n    querySnapshot.forEach((docSnap) => {\n      const serviceData = docSnap.data();\n      let itemTypeFormatted: 'Layanan' | 'Produk' | undefined = undefined;\n      if (typeof serviceData.type === 'string') {\n        if (serviceData.type.toLowerCase() === 'layanan') {\n          itemTypeFormatted = 'Layanan';\n        } else if (serviceData.type.toLowerCase() === 'produk') {\n          itemTypeFormatted = 'Produk';\n        }\n      }\n\n      const serviceItem = {\n        id: docSnap.id,\n        name: serviceData.name,\n        type: itemTypeFormatted,\n        category: serviceData.category,\n        price: typeof serviceData.price === 'number' ? serviceData.price : 0,\n        description: serviceData.description || undefined,\n        pointsAwarded: serviceData.pointsAwarded || undefined,\n        estimatedDuration: serviceData.estimatedDuration || undefined,\n        variants: serviceData.variants?.map((v: any) => ({\n          id: v.id || uuidv4(), \n          name: v.name,\n          price: v.price,\n          pointsAwarded: v.pointsAwarded || undefined,\n          estimatedDuration: v.estimatedDuration || undefined,\n        })) || undefined,\n      };\n      \n      const validationResult = ProductServiceInfoSchema.safeParse(serviceItem);\n      if (validationResult.success) {\n        matchingServices.push(validationResult.data);\n      } else {\n        console.warn(`[findLayananByCategory Tool Function] Data layanan ${docSnap.id} (Nama: ${serviceData.name || 'N/A'}) tidak valid:`, JSON.stringify(validationResult.error.format(), null, 2));\n        console.warn(`[findLayananByCategory Tool Function] Data yang gagal validasi:`, JSON.stringify(serviceItem, null, 2));\n      }\n    });\n\n    console.log(`[findLayananByCategory Tool Function] Successfully validated and pushed ${matchingServices.length} services for CATEGORY \"${categoryKeywordLower}\".`);\n    if (matchingServices.length === 0 && querySnapshot.size > 0) {\n        console.warn(`[findLayananByCategory Tool Function] WARNING: Found ${querySnapshot.size} documents for category \"${categoryKeywordLower}\", but ALL FAILED Zod validation.`);\n    } else if (matchingServices.length === 0 && querySnapshot.size === 0) {\n        console.log(`[findLayananByCategory Tool Function] INFO: No documents found for category \"${categoryKeywordLower}\" in Firestore, or the field 'category' does not exactly match \"${categoryKeywordLower}\".`);\n    }\n    return matchingServices;\n  } catch (error) {\n    console.error(\"[findLayananByCategory Tool Function] Error saat mencari layanan berdasarkan KATEGORI:\", error);\n    return []; // Return empty array on error\n  }\n}\n\n// Define the Genkit tool, using the function above as its implementation\nexport const cariInfoLayananTool = ai.defineTool(\n  {\n    name: 'cariInfoLayananTool',\n    description: 'Mencari daftar layanan atau produk yang tersedia berdasarkan NAMA KATEGORI layanan yang spesifik. Input adalah nama kategori (mis. \"Cuci Motor\", \"Coating\"), output adalah daftar layanan dalam kategori tersebut.',\n    inputSchema: CariInfoLayananInputSchema,\n    outputSchema: CariInfoLayananOutputSchema,\n  },\n  findLayananByCategory // Pass the actual function here\n);\n\n\n    "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 876, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/handle-service-inquiry-flow.ts"],"sourcesContent":["\n'use server';\n/**\n * @fileOverview Sub-flow AI untuk menangani pertanyaan umum tentang jenis layanan.\n * Flow ini akan menjelaskan layanan, menggunakan cariInfoLayananTool untuk mendapatkan\n * daftar paket, dan merespons sesuai dengan informasi motor yang diketahui.\n */\nimport { ai } from '@/ai/genkit';\nimport { z } from 'zod';\nimport { DEFAULT_SERVICE_INQUIRY_SUB_FLOW_PROMPT } from '@/types/aiSettings';\n\n// Import FUNGSI implementasi tool, bukan objek tool Genkit-nya jika mau dipanggil langsung\nimport { findLayananByCategory, type CariInfoLayananInput, type CariInfoLayananOutput } from '@/ai/tools/cariInfoLayananTool';\n// Import tool cariSizeMotorTool jika masih diperlukan untuk dipanggil via ai.generate, atau fungsi implementasinya jika mau direct call\nimport { cariSizeMotorTool, type CariSizeMotorInput, type CariSizeMotorOutput } from '@/ai/tools/cari-size-motor-tool';\n\n// Schema input untuk sub-flow ini (TIDAK di-export, hanya tipenya)\nconst HandleServiceInquiryInputSchema = z.object({\n  serviceKeyword: z.string().describe(\"Kata kunci atau kategori layanan yang ditanyakan pelanggan, mis. 'Coating', 'Cuci Motor'.\"),\n  customerQuery: z.string().describe(\"Pesan asli dari pelanggan atau pertanyaan dari staf CS.\"),\n  knownMotorcycleInfo: z.object({\n    name: z.string(),\n    size: z.string().optional(),\n  }).optional().describe(\"Informasi motor pelanggan jika sudah diketahui.\"),\n});\nexport type HandleServiceInquiryInput = z.infer<typeof HandleServiceInquiryInputSchema>;\n\n// Schema output untuk sub-flow ini (TIDAK di-export, hanya tipenya)\nconst HandleServiceInquiryOutputSchema = z.object({\n  responseText: z.string().describe(\"Jawaban lengkap yang dihasilkan oleh sub-flow ini untuk disampaikan ke pelanggan.\"),\n});\nexport type HandleServiceInquiryOutput = z.infer<typeof HandleServiceInquiryOutputSchema>;\n\n\nconst serviceInquirySpecialistFlow = ai.defineFlow(\n  {\n    name: 'serviceInquirySpecialistFlow',\n    inputSchema: HandleServiceInquiryInputSchema,\n    outputSchema: HandleServiceInquiryOutputSchema,\n  },\n  async (input: HandleServiceInquiryInput): Promise<HandleServiceInquiryOutput> => {\n    console.log(\"[SUB-FLOW handleServiceInquiry] Input:\", JSON.stringify(input, null, 2));\n    let responseText = \"Maaf, ada sedikit kendala saat memproses permintaan layanan Anda.\";\n\n    // LANGSUNG PANGGIL FUNGSI IMPLEMENTASI TOOL\n    const toolInputForLayanan: CariInfoLayananInput = { keyword: input.serviceKeyword };\n    // Panggil fungsi `findLayananByCategory` yang diekspor dari file tool\n    const toolOutputLayanan: CariInfoLayananOutput = await findLayananByCategory(toolInputForLayanan);\n    console.log(`[SUB-FLOW handleServiceInquiry] Output LANGSUNG dari fungsi 'findLayananByCategory':`, JSON.stringify(toolOutputLayanan, null, 2));\n\n    // --- Sekarang, proses hasil tool dengan prompt utama sub-flow ---\n    const systemPromptForProcessing = DEFAULT_SERVICE_INQUIRY_SUB_FLOW_PROMPT\n      .replace(\"{{{serviceKeyword}}}\", input.serviceKeyword)\n      .replace(\"{{{customerQuery}}}\", input.customerQuery)\n      .replace(\"{{{knownMotorcycleName}}}\", input.knownMotorcycleInfo?.name || \"belum diketahui\")\n      .replace(\"{{{knownMotorcycleSize}}}\", input.knownMotorcycleInfo?.size || \"belum diketahui\");\n    \n    console.log(\"[SUB-FLOW handleServiceInquiry] Menggunakan system prompt untuk pemrosesan:\", systemPromptForProcessing.substring(0,250) + \"...\");\n\n    // Membuat histori \"seolah-olah\" AI meminta tool dan tool memberikan jawaban\n    const messagesForProcessing = [\n      { role: 'user' as const, content: [{ text: `Tolong info dong soal layanan ${input.serviceKeyword}. ${input.customerQuery}` }] },\n      // Simulasi AI meminta tool (meskipun kita panggil langsung)\n      {\n        role: 'model' as const,\n        content: [{\n          toolRequest: {\n            name: 'cariInfoLayananTool', // Nama tool seperti yang didefinisikan di ai.defineTool\n            input: toolInputForLayanan,\n          }\n        }]\n      },\n      // Hasil dari tool yang kita panggil langsung\n      {\n        role: 'tool' as const,\n        content: [{\n          toolResponse: {\n            name: 'cariInfoLayananTool', // Nama tool yang sama\n            output: toolOutputLayanan,\n          }\n        }]\n      }\n    ];\n    \n    const modelResponseAfterTool = await ai.generate({\n      model: 'googleai/gemini-1.5-flash-latest',\n      prompt: systemPromptForProcessing,\n      messages: messagesForProcessing,\n      tools: [cariSizeMotorTool], // Sediakan tool cariSizeMotor jika AI perlu menanyakan ukuran\n      toolChoice: 'auto',\n      config: { temperature: 0.3 },\n    });\n    \n    console.log(\"[SUB-FLOW handleServiceInquiry] Hasil panggilan AI (setelah tool dipanggil langsung):\", JSON.stringify(modelResponseAfterTool, null, 2));\n    responseText = modelResponseAfterTool.text || \"Zoya dapet infonya, tapi bingung mau ngomong apa setelah pakai alat.\";\n\n    // Logika jika AI di tahap ini meminta tool cariSizeMotor\n    if (modelResponseAfterTool.toolRequest && modelResponseAfterTool.toolRequest.name === 'cariSizeMotor') {\n      const sizeToolRequest = modelResponseAfterTool.toolRequest;\n      // Jika cariSizeMotorTool juga dipanggil langsung, gunakan:\n      // const sizeToolOutput = await findMotorSizeFunction(sizeToolRequest.input as CariSizeMotorInput);\n      // Tapi karena kita menyediakannya sebagai tool ke ai.generate, kita bisa biarkan LLM memanggilnya\n      // Untuk konsistensi, jika ingin memanggil direct, perlu impor fungsi implementasinya\n      // Di sini kita asumsikan LLM akan memanggilnya jika perlu, dan kita akan menangani toolRequest-nya\n      // Namun, karena findMotorSize sudah ada sebagai fungsi async di tool cari-size-motor-tool, kita bisa panggil langsung juga\n      // Untuk contoh ini, kita tetap biarkan LLM yang meminta tool 'cariSizeMotor' jika perlu\n      // ATAU, jika kita ingin memaksa atau mempermudah, bisa juga dipanggil langsung seperti findLayananByCategory.\n      // Mari kita coba tetap dengan LLM yang meminta sizeTool untuk saat ini.\n      // Jika masih bermasalah, langkah selanjutnya adalah memanggil fungsi findMotorSize secara langsung.\n\n      const sizeToolOutput = await (cariSizeMotorTool.fn as Function)(sizeToolRequest.input as CariSizeMotorInput); // Ini asumsi .fn ada, jika tidak ada, perlu penyesuaian\n      console.log(`[SUB-FLOW handleServiceInquiry] Output tool 'cariSizeMotor':`, JSON.stringify(sizeToolOutput, null, 2));\n\n      const messagesAfterSizeTool = [\n        ...messagesForProcessing,\n        modelResponseAfterTool.message, \n         { \n          role: 'tool' as const,\n          content: [{\n            toolResponse: {\n              name: sizeToolRequest.name,\n              output: sizeToolOutput,\n            }\n          }]\n        }\n      ];\n      const finalResponseFromAI = await ai.generate({\n          model: 'googleai/gemini-1.5-flash-latest',\n          prompt: systemPromptForProcessing,\n          messages: messagesAfterSizeTool,\n          config: {temperature: 0.3},\n      });\n      responseText = finalResponseFromAI.text || \"Zoya udah cek ukuran motornya, tapi bingung mau lanjutin gimana.\"\n    }\n\n    console.log(\"[SUB-FLOW handleServiceInquiry] Final responseText:\", responseText);\n    return { responseText };\n  }\n);\n\n// Wrapper function yang akan dipanggil oleh flow utama\nexport async function handleServiceInquiry(input: HandleServiceInquiryInput): Promise<HandleServiceInquiryOutput> {\n  return serviceInquirySpecialistFlow(input);\n}\n\n    "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1039, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/cs-whatsapp-reply-flow.ts"],"sourcesContent":["\n'use server';\n/**\n * @fileOverview Flow AI utama untuk WhatsApp Customer Service QLAB.\n * Menggunakan tools modular dan bisa mendelegasikan ke sub-flow.\n */\nimport { ai } from '@/ai/genkit';\nimport * as z from 'zod'; \nimport { db } from '@/lib/firebase';\nimport { doc, getDoc as getFirestoreDoc } from 'firebase/firestore';\nimport { DEFAULT_AI_SETTINGS } from '@/types/aiSettings';\n\n// Import tools modular\nimport { cariSizeMotorTool, type CariSizeMotorInput, type CariSizeMotorOutput } from '@/ai/tools/cari-size-motor-tool';\nimport { getProductServiceDetailsByNameTool, type ProductLookupInput } from '@/ai/tools/productLookupTool'; \nimport type { ProductServiceInfo } from '@/types/aiToolSchemas'; \n\n// Import sub-flow dan tipenya\nimport { handleServiceInquiry, type HandleServiceInquiryInput, type HandleServiceInquiryOutput } from './handle-service-inquiry-flow';\n\n// Skema internal untuk validasi input chat history di flow\nconst ChatMessageSchemaInternal = z.object({\n  role: z.enum(['user', 'model']),\n  content: z.string(),\n});\nexport type ChatMessage = z.infer<typeof ChatMessageSchemaInternal>;\n\n// Skema input utama untuk ZoyaChatFlow (digunakan oleh UI)\nconst ZoyaChatInputSchema = z.object({\n  messages: z.array(ChatMessageSchemaInternal).optional().describe(\"Riwayat percakapan lengkap, jika ada.\"),\n  customerMessage: z.string().min(1, \"Pesan pelanggan tidak boleh kosong.\").describe(\"Pesan terbaru dari customer.\"),\n  senderNumber: z.string().optional().describe(\"Nomor WhatsApp pengirim (opsional).\"),\n  mainPromptString: z.string().optional().describe(\"String prompt utama yang mungkin dikirim dari UI atau diambil dari Firestore.\"),\n  currentDate: z.string().optional(),\n  currentTime: z.string().optional(),\n  tomorrowDate: z.string().optional(),\n  dayAfterTomorrowDate: z.string().optional(),\n  knownMotorcycleInfo: z.object({\n    name: z.string(),\n    size: z.string().optional(),\n  }).optional().describe(\"Informasi motor pelanggan jika sudah diketahui dari interaksi sebelumnya atau database.\"),\n});\nexport type ZoyaChatInput = z.infer<typeof ZoyaChatInputSchema>;\n\n// Schema output untuk wrapper function (digunakan oleh UI)\nconst WhatsAppReplyOutputSchema = z.object({\n  suggestedReply: z.string().describe('Saran balasan yang dihasilkan AI untuk dikirim ke pelanggan.'),\n});\nexport type WhatsAppReplyOutput = z.infer<typeof WhatsAppReplyOutputSchema>;\n\n\n// Flow utama\nconst zoyaChatFlow = ai.defineFlow(\n  {\n    name: 'zoyaChatFlow',\n    inputSchema: ZoyaChatInputSchema,\n    outputSchema: z.string(), // Output flow adalah string balasan\n  },\n  async (input: ZoyaChatInput): Promise<string> => {\n    console.log(\"[CS-FLOW] zoyaChatFlow input. Customer Message:\", input.customerMessage, \"History Length:\", (input.messages || []).length, \"KnownMotorcycleInfo:\", JSON.stringify(input.knownMotorcycleInfo));\n\n    const lastUserMessageContent = input.customerMessage ||\n                                   (input.messages && input.messages.length > 0 ? input.messages[input.messages.length - 1].content : '');\n\n    if (!lastUserMessageContent || lastUserMessageContent.trim() === '') {\n      return \"Maaf, Zoya tidak menerima pesan yang jelas.\";\n    }\n\n    const lowerCaseCustomerMessage = lastUserMessageContent.toLowerCase();\n    const serviceKeywords = [\"cuci\", \"coating\", \"poles\", \"detailing\", \"repaint\", \"servis\", \"layanan\"];\n    const specificServiceKeywords = [\"premium\", \"reguler\", \"advance formula\", \"nano ceramic\", \"ultimate\", \"full detailing\", \"detailing body\", \"detailing kaki\", \"cuci premium\", \"cuci reguler\"];\n    \n    let detectedGeneralServiceKeyword: string | null = null;\n    let isAskingSpecificService = specificServiceKeywords.some(kw => lowerCaseCustomerMessage.includes(kw));\n    \n    if (!isAskingSpecificService) {\n        for (const keyword of serviceKeywords) {\n            if (lowerCaseCustomerMessage.includes(keyword)) {\n                detectedGeneralServiceKeyword = keyword;\n                // Disambiguasi\n                if ((keyword === \"cuci\" && lowerCaseCustomerMessage.includes(\"cuci motor\")) || (keyword === \"layanan\" && lowerCaseCustomerMessage.includes(\"layanan cuci\"))) detectedGeneralServiceKeyword = \"cuci\";\n                else if ((keyword === \"coating\" && lowerCaseCustomerMessage.includes(\"coating motor\")) || (keyword === \"layanan\" && lowerCaseCustomerMessage.includes(\"layanan coating\"))) detectedGeneralServiceKeyword = \"coating\";\n                else if ((keyword === \"poles\" && lowerCaseCustomerMessage.includes(\"poles motor\")) || (keyword === \"layanan\" && lowerCaseCustomerMessage.includes(\"layanan poles\"))) detectedGeneralServiceKeyword = \"poles\";\n                else if ((keyword === \"detailing\" && lowerCaseCustomerMessage.includes(\"detailing motor\")) || (keyword === \"layanan\" && lowerCaseCustomerMessage.includes(\"layanan detailing\"))) detectedGeneralServiceKeyword = \"detailing\";\n                else if ((keyword === \"repaint\" && lowerCaseCustomerMessage.includes(\"repaint motor\")) || (keyword === \"layanan\" && lowerCaseCustomerMessage.includes(\"layanan repaint\"))) detectedGeneralServiceKeyword = \"repaint\";\n                break;\n            }\n        }\n    }\n    \n    let callSubFlow = false;\n    const lastAiMessage = input.messages?.filter(msg => msg.role === 'model').pop();\n    const lastUserMessageBeforeCurrent = input.messages?.filter(msg => msg.role === 'user' && msg.content !== input.customerMessage).pop();\n\n    let wasPrevAiAskingForMotorForSpecificService = false;\n    if (lastUserMessageBeforeCurrent && lastAiMessage) {\n        const prevUserMsgLower = lastUserMessageBeforeCurrent.content.toLowerCase();\n        const prevAiMsgLower = lastAiMessage.content.toLowerCase();\n        // Cek apakah AI di giliran sebelumnya bertanya tipe motor SETELAH user menyebut layanan SPESIFIK\n        if (specificServiceKeywords.some(kw => prevUserMsgLower.includes(kw)) && \n            (prevAiMsgLower.includes(\"motornya tipe apa\") || prevAiMsgLower.includes(\"motornya apa nih\"))) {\n            wasPrevAiAskingForMotorForSpecificService = true;\n        }\n    }\n\n    if (wasPrevAiAskingForMotorForSpecificService) {\n        callSubFlow = false; \n        console.log(\"[CS-FLOW] Main Zoya will handle: AI (main flow) previously asked for motor for a specific service. User likely providing motor type now.\");\n    } else if (detectedGeneralServiceKeyword && !isAskingSpecificService) {\n        const isAskingPrice = lowerCaseCustomerMessage.includes(\"harga\") || lowerCaseCustomerMessage.includes(\"berapa\") || lowerCaseCustomerMessage.match(/\\brp\\b/) || lowerCaseCustomerMessage.match(/\\d{3,}/);\n        const knownMotorName = input.knownMotorcycleInfo?.name;\n        const motorIsUnknown = !knownMotorName || knownMotorName === \"belum diketahui\";\n        const subflowAskedForMotorInLastAiMsg = lastAiMessage &&\n            serviceKeywords.some(kw => lastAiMessage.content.toLowerCase().includes(kw)) &&\n            (lastAiMessage.content.toLowerCase().includes(\"pilihan layanan\") || lastAiMessage.content.toLowerCase().includes(\"opsi layanan\") || lastAiMessage.content.toLowerCase().includes(\"menawarkan beberapa pilihan\")) &&\n            (lastAiMessage.content.toLowerCase().includes(\"motornya apa\") || lastAiMessage.content.toLowerCase().includes(\"motornya tipe apa\"));\n\n        if (subflowAskedForMotorInLastAiMsg) {\n            callSubFlow = false;\n            console.log(\"[CS-FLOW] Main Zoya will handle: Sub-flow previously asked for motor for a general category.\");\n        } else if (motorIsUnknown && !isAskingPrice) {\n            callSubFlow = true;\n            console.log(\"[CS-FLOW] Sub-flow for CATEGORY: '\"+detectedGeneralServiceKeyword+\"', motor unknown, not asking price.\");\n        } else if (serviceKeywords.some(kw => lowerCaseCustomerMessage === kw) && motorIsUnknown) {\n            callSubFlow = true;\n            console.log(\"[CS-FLOW] Sub-flow for CATEGORY: User message is only a general keyword '\"+detectedGeneralServiceKeyword+\"', motor unknown.\");\n        } else {\n             console.log(\"[CS-FLOW] Default to Main Zoya (General): Conditions for sub-flow (for general inquiry) not met. isAskingPrice:\", isAskingPrice, \"motorIsUnknown:\", motorIsUnknown, \"subflowAskedForMotorInLastAiMsg:\", subflowAskedForMotorInLastAiMsg);\n        }\n    } else {\n        console.log(`[CS-FLOW] Default to Main Zoya: detectedGeneralServiceKeyword='${detectedGeneralServiceKeyword}', isAskingSpecificService='${isAskingSpecificService}', wasPrevAiAskingForMotorForSpecificService='${wasPrevAiAskingForMotorForSpecificService}'.`);\n    }\n\n\n    if (callSubFlow && detectedGeneralServiceKeyword) {\n      console.log(`[CS-FLOW] General service inquiry detected for CATEGORY: \"${detectedGeneralServiceKeyword}\". Calling sub-flow 'handleServiceInquiry'. Known Motor: ${JSON.stringify(input.knownMotorcycleInfo)}`);\n      const subFlowInput: HandleServiceInquiryInput = {\n        serviceKeyword: detectedGeneralServiceKeyword,\n        customerQuery: lastUserMessageContent,\n        knownMotorcycleInfo: input.knownMotorcycleInfo,\n      };\n      const subFlowOutput: HandleServiceInquiryOutput = await handleServiceInquiry(subFlowInput);\n      return subFlowOutput.responseText;\n    }\n    \n\n    // --- Logika Flow Utama Zoya ---\n    let dynamicContext = `INFO_UMUM_BENGKEL: QLAB Moto Detailing adalah bengkel perawatan dan detailing motor.`;\n    if (!db) {\n        console.warn(\"[CS-FLOW] Firestore DB (db) is not initialized. Some context might be missing.\");\n        dynamicContext += \" WARNING: Database tidak terhubung, info detail mungkin tidak akurat.\";\n    } else {\n        console.log(\"[CS-FLOW] Firestore DB (db) is available. Context should be complete.\");\n    }\n\n    const mainPromptFromSettings = input.mainPromptString || DEFAULT_AI_SETTINGS.mainPrompt;\n\n    const finalSystemPrompt = mainPromptFromSettings\n                                .replace(\"{{{dynamicContext}}}\", dynamicContext)\n                                .replace(\"{{{knownMotorcycleName}}}\", input.knownMotorcycleInfo?.name || \"belum diketahui\")\n                                .replace(\"{{{knownMotorcycleSize}}}\", input.knownMotorcycleInfo?.size || \"belum diketahui\");\n\n\n    const historyForAI = (input.messages || [])\n      .filter(msg => msg.content && msg.content.trim() !== '')\n      .map((msg) => ({\n        role: msg.role,\n        content: [{ text: msg.content }],\n    }));\n\n    const messagesForAI = [\n      ...historyForAI,\n      { role: 'user' as const, content: [{ text: input.customerMessage }] }\n    ];\n\n    console.log(`[CS-FLOW] Calling MAIN ai.generate with model googleai/gemini-1.5-flash-latest. History Length: ${historyForAI.length}`);\n    console.log(`[CS-FLOW] System Prompt being used (simplified): ${finalSystemPrompt.substring(0, 300)}...`);\n\n    try {\n      const result = await ai.generate({\n        model: 'googleai/gemini-1.5-flash-latest',\n        prompt: finalSystemPrompt,\n        messages: messagesForAI,\n        tools: [cariSizeMotorTool, getProductServiceDetailsByNameTool], \n        toolChoice: 'auto',\n        config: { temperature: 0.5 },\n      });\n\n      console.log(\"[CS-FLOW] Raw MAIN AI generate result:\", JSON.stringify(result, null, 2));\n\n      let suggestedReply = result.text || \"\";\n      const toolRequest = result.toolRequest;\n\n      if (toolRequest) {\n        console.log(\"[CS-FLOW] MAIN AI requested a tool call:\", JSON.stringify(toolRequest, null, 2));\n        let finalReplyFromTool = \"Maaf, Zoya lagi bingung mau pakai alat apa.\";\n        let toolOutputToRelay: any = \"Error: Tool output tidak diset.\";\n\n        if (toolRequest.name === 'cariSizeMotor' && toolRequest.input) {\n          toolOutputToRelay = await (cariSizeMotorTool.fn as Function)(toolRequest.input as CariSizeMotorInput);\n        } else if (toolRequest.name === 'getProductServiceDetailsByNameTool' && toolRequest.input) {\n          toolOutputToRelay = await (getProductServiceDetailsByNameTool.fn as Function)(toolRequest.input as ProductLookupInput);\n        }\n        \n        if (toolOutputToRelay !== \"Error: Tool output tidak diset.\") {\n            console.log(`[CS-FLOW] Output from tool '${toolRequest.name}':`, JSON.stringify(toolOutputToRelay, null, 2));\n            \n            const messagesAfterTool = [\n                ...messagesForAI, \n                result.message,   \n                {                 \n                    role: 'tool' as const,\n                    content: [{\n                    toolResponse: {\n                        name: toolRequest.name,\n                        output: toolOutputToRelay,\n                    }\n                    }]\n                }\n            ];\n\n            const modelResponseAfterTool = await ai.generate({\n                model: 'googleai/gemini-1.5-flash-latest',\n                prompt: finalSystemPrompt, \n                messages: messagesAfterTool, \n                config: { temperature: 0.5 },\n            });\n            finalReplyFromTool = modelResponseAfterTool.text || `Zoya dapet info dari alat ${toolRequest.name}, tapi bingung mau ngomong apa.`;\n        }\n        return finalReplyFromTool;\n\n      } else if (suggestedReply) {\n        const finishReason = result.finishReason;\n        const safetyRatings = result.safetyRatings;\n        console.log(`[CS-FLOW] MAIN AI Finish Reason (no tool): ${finishReason}`);\n        if (safetyRatings && safetyRatings.length > 0) {\n            console.log('[CS-FLOW] MAIN AI Safety Ratings (no tool):', JSON.stringify(safetyRatings, null, 2));\n        }\n\n        if (!suggestedReply && finishReason !== \"stop\") {\n            console.error(`[CS-FLOW] ❌ MAIN AI generation failed or no text output. Finish Reason: ${finishReason}. Safety: ${JSON.stringify(safetyRatings)}`);\n            return \"Maaf, Zoya lagi agak bingung nih boskuu. Coba tanya lagi dengan cara lain ya, atau hubungi CS langsung.\";\n        }\n        return suggestedReply;\n      } else {\n        console.error(`[CS-FLOW] ❌ No tool request and no text output from MAIN AI. Result: ${JSON.stringify(result, null, 2)}`);\n        return \"Waduh, Zoya lagi nggak bisa jawab nih. Coba lagi ya.\";\n      }\n\n    } catch (flowError: any) {\n        console.error(\"[CS-FLOW] ❌ Critical error dalam MAIN zoyaChatFlow:\", flowError);\n        if (flowError.cause) console.error(\"[CS-FLOW] Error Cause:\", JSON.stringify(flowError.cause, null, 2));\n        return `Waduh, Zoya lagi error nih, boskuu. Coba tanya lagi nanti ya. (Pesan Error: ${flowError.message || 'Kesalahan internal tidak diketahui'})`;\n    }\n  }\n);\n\n// Wrapper function yang akan dipanggil oleh UI atau API route\nexport async function generateWhatsAppReply(input: ZoyaChatInput): Promise<WhatsAppReplyOutput> {\n  console.log(\"[CS-FLOW] generateWhatsAppReply (wrapper) input:\", JSON.stringify(input, null, 2));\n\n  let mainPromptToUse = input.mainPromptString;\n\n  if (!mainPromptToUse) {\n    try {\n      if (db) {\n        const settingsDocRef = doc(db, 'appSettings', 'aiAgentConfig');\n        const docSnap = await getFirestoreDoc(settingsDocRef);\n        if (docSnap.exists() && docSnap.data()?.mainPrompt) {\n          mainPromptToUse = docSnap.data().mainPrompt;\n          console.log(\"[CS-FLOW] generateWhatsAppReply (wrapper): Using mainPromptString from Firestore.\");\n        } else {\n          console.log(\"[CS-FLOW] generateWhatsAppReply (wrapper): mainPrompt not found in Firestore or is empty. Checking default.\");\n          mainPromptToUse = DEFAULT_AI_SETTINGS.mainPrompt;\n          console.log(\"[CS-FLOW] generateWhatsAppReply (wrapper): Using DEFAULT_AI_SETTINGS.mainPrompt.\");\n        }\n      } else {\n        console.log(\"[CS-FLOW] generateWhatsAppReply (wrapper): Firestore (db) not available. Using default for mainPrompt.\");\n        mainPromptToUse = DEFAULT_AI_SETTINGS.mainPrompt;\n      }\n    } catch (error) {\n      console.error(\"[CS-FLOW] generateWhatsAppReply (wrapper): Error fetching mainPrompt from Firestore. Using default.\", error);\n      mainPromptToUse = DEFAULT_AI_SETTINGS.mainPrompt;\n    }\n  } else {\n     console.log(\"[CS-FLOW] generateWhatsAppReply (wrapper): Using mainPromptString directly from input.\");\n  }\n\n  const flowInput: ZoyaChatInput = {\n    ...input,\n    messages: input.messages || [], \n    mainPromptString: mainPromptToUse,\n  };\n\n  try {\n    const replyText = await zoyaChatFlow(flowInput);\n    return { suggestedReply: replyText };\n  } catch (error: any) {\n    console.error(\"[CS-FLOW Wrapper] Error running zoyaChatFlow:\", error);\n    return { suggestedReply: `Maaf, Zoya sedang ada kendala teknis. (${error.message || 'Tidak diketahui'})` };\n  }\n}\n\n    \n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1353, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/%28app%29/ai-cs-assistant/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {generateWhatsAppReply as '4053660f6447b38038e1d20965a3df3cd57a2a7b51'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 1417, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28app%29/ai-cs-assistant/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(app)/ai-cs-assistant/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(app)/ai-cs-assistant/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA0S,GACvU,wEACA","debugId":null}},
    {"offset": {"line": 1431, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28app%29/ai-cs-assistant/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(app)/ai-cs-assistant/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(app)/ai-cs-assistant/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAsR,GACnT,oDACA","debugId":null}},
    {"offset": {"line": 1445, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}