{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firebase.ts"],"sourcesContent":["\nimport { initializeApp, getApp, getApps, type FirebaseApp } from \"firebase/app\";\nimport { getFirestore, type Firestore } from \"firebase/firestore\";\n\n// Minimal logging\nconsole.log(\"[firebase.ts] Initializing Firebase...\");\n\nconst firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n};\n\nif (!firebaseConfig.projectId || !firebaseConfig.apiKey) {\n  console.error(\"[firebase.ts] FATAL ERROR: Firebase projectId or apiKey is MISSING in environment variables.\");\n}\n\nlet app: FirebaseApp;\nlet db: Firestore;\n\nif (getApps().length === 0) {\n  try {\n    app = initializeApp(firebaseConfig);\n    console.log(\"[firebase.ts] Firebase app initialized. Project ID:\", app.options.projectId);\n  } catch (e: any) {\n    console.error(\"[firebase.ts] FAILED to initialize Firebase app:\", e.message);\n    // @ts-ignore\n    app = null;\n  }\n} else {\n  app = getApp();\n  console.log(\"[firebase.ts] Using existing Firebase app. Project ID:\", app.options.projectId);\n}\n\n// @ts-ignore\nif (app) {\n  try {\n    // @ts-ignore\n    db = getFirestore(app);\n    console.log(\"[firebase.ts] Firestore instance obtained.\");\n  } catch (e: any) {\n    console.error(\"[firebase.ts] FAILED to get Firestore instance:\", e?.message);\n  }\n} else {\n    console.error(\"[firebase.ts] Firebase app not properly initialized, cannot get Firestore.\");\n}\n\nexport { app, db };\n"],"names":[],"mappings":";;;;AACA;AAAA;AACA;AAAA;;;AAEA,kBAAkB;AAClB,QAAQ,GAAG,CAAC;AAEZ,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;AACP;AAEA,IAAI,CAAC,eAAe,SAAS,IAAI,CAAC,eAAe,MAAM,EAAE;IACvD,QAAQ,KAAK,CAAC;AAChB;AAEA,IAAI;AACJ,IAAI;AAEJ,IAAI,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,KAAK,GAAG;IAC1B,IAAI;QACF,MAAM,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE;QACpB,QAAQ,GAAG,CAAC,uDAAuD,IAAI,OAAO,CAAC,SAAS;IAC1F,EAAE,OAAO,GAAQ;QACf,QAAQ,KAAK,CAAC,oDAAoD,EAAE,OAAO;QAC3E,aAAa;QACb,MAAM;IACR;AACF,OAAO;IACL,MAAM,CAAA,GAAA,oLAAA,CAAA,SAAM,AAAD;IACX,QAAQ,GAAG,CAAC,0DAA0D,IAAI,OAAO,CAAC,SAAS;AAC7F;AAEA,aAAa;AACb,IAAI,KAAK;IACP,IAAI;QACF,aAAa;QACb,KAAK,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE;QAClB,QAAQ,GAAG,CAAC;IACd,EAAE,OAAO,GAAQ;QACf,QAAQ,KAAK,CAAC,mDAAmD,GAAG;IACtE;AACF,OAAO;IACH,QAAQ,KAAK,CAAC;AAClB","debugId":null}},
    {"offset": {"line": 264, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["\nimport '@/lib/firebase'; // Ensure Firebase is initialized early\nimport {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai'; // Impor plugin Google AI\n\nif (!process.env.GOOGLE_API_KEY) {\n  const errorMessage = \"Kesalahan Konfigurasi: GOOGLE_API_KEY tidak ditemukan di environment variables. Ini dibutuhkan oleh plugin Google AI. Pastikan sudah di-set di file .env Anda.\";\n  console.error(`\\n\\n🛑 ${errorMessage}\\n\\n`);\n  throw new Error(errorMessage);\n}\n\nexport const ai = genkit({\n  plugins: [\n    googleAI(), // Gunakan plugin Google AI\n  ],\n  model: 'googleai/gemini-1.5-flash-latest', // Model diubah ke Gemini 1.5 Flash terbaru\n  // Opsi telemetry tidak lagi dikonfigurasi di sini untuk Genkit v1.x\n  // Jika butuh logging, konfigurasi dilakukan secara berbeda atau via environment.\n});\n\n"],"names":[],"mappings":";;;AACA,8MAAyB,uCAAuC;AAChE;AAAA;AACA,8TAA8C,yBAAyB;AAAvE;;;;AAEA,IAAI,CAAC,QAAQ,GAAG,CAAC,cAAc,EAAE;IAC/B,MAAM,eAAe;IACrB,QAAQ,KAAK,CAAC,CAAC,OAAO,EAAE,aAAa,IAAI,CAAC;IAC1C,MAAM,IAAI,MAAM;AAClB;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QACP,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KACR;IACD,OAAO;AAGT","debugId":null}},
    {"offset": {"line": 300, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firebase-admin.ts"],"sourcesContent":["\nimport * as admin from 'firebase-admin';\n\n// Enhanced logging\nconsole.log(\"[firebase-admin.ts] Attempting to initialize Firebase Admin SDK...\");\nconsole.log(`[firebase-admin.ts] Current working directory: ${process.cwd()}`);\n\nconst gacSet = !!process.env.GOOGLE_APPLICATION_CREDENTIALS;\nconst firestoreEmulatorHost = process.env.FIRESTORE_EMULATOR_HOST;\nconst authEmulatorHost = process.env.FIREBASE_AUTH_EMULATOR_HOST;\nconst explicitProjectIdFromEnv = process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID;\nlet firebaseConfigProjectId = 'NOT PARSED YET';\n\ntry {\n    if (process.env.FIREBASE_CONFIG) {\n        const fbConfig = JSON.parse(process.env.FIREBASE_CONFIG);\n        firebaseConfigProjectId = fbConfig.projectId || 'projectId NOT FOUND in FIREBASE_CONFIG';\n    } else {\n        firebaseConfigProjectId = 'FIREBASE_CONFIG NOT SET';\n    }\n} catch (e) {\n    firebaseConfigProjectId = 'Error parsing FIREBASE_CONFIG';\n}\n\nconsole.log(`[firebase-admin.ts] Checking environment variables for Admin SDK:`);\nconsole.log(`  - GOOGLE_APPLICATION_CREDENTIALS: ${gacSet ? 'SET (path hidden)' : 'NOT SET'}`);\nconsole.log(`  - FIRESTORE_EMULATOR_HOST: ${firestoreEmulatorHost || 'NOT SET'}`);\nconsole.log(`  - FIREBASE_AUTH_EMULATOR_HOST: ${authEmulatorHost || 'NOT SET'}`);\nconsole.log(`  - FIREBASE_CONFIG (Project ID from it): ${firebaseConfigProjectId}`);\nconsole.log(`  - GCLOUD_PROJECT (often used as fallback for Project ID): ${process.env.GCLOUD_PROJECT || 'NOT SET'}`);\nconsole.log(`  - NEXT_PUBLIC_FIREBASE_PROJECT_ID (for explicit fallback): ${explicitProjectIdFromEnv || 'NOT SET'}`);\n\n\nlet adminApp: admin.app.App | undefined = undefined;\nlet adminDb: admin.firestore.Firestore | undefined = undefined;\nlet adminAuth: admin.auth.Auth | undefined = undefined;\n\nif (!admin.apps.length) {\n  const appOptions: admin.AppOptions = {};\n  let initializationDescription = \"\";\n\n  if (explicitProjectIdFromEnv) {\n    appOptions.projectId = explicitProjectIdFromEnv;\n    initializationDescription = `using explicit projectId from NEXT_PUBLIC_FIREBASE_PROJECT_ID: '${explicitProjectIdFromEnv}'`;\n  } else if (process.env.GCLOUD_PROJECT) {\n    appOptions.projectId = process.env.GCLOUD_PROJECT;\n    initializationDescription = `using projectId from GCLOUD_PROJECT: '${process.env.GCLOUD_PROJECT}'`;\n  } else {\n    initializationDescription = `with default options (relying on GAC or other inference)`;\n  }\n  \n  console.log(`[firebase-admin.ts] Attempting Firebase Admin SDK initialization ${initializationDescription}...`);\n\n  try {\n    adminApp = admin.initializeApp(appOptions); // Pass options directly\n    console.log(`[firebase-admin.ts] Firebase Admin SDK initialization SUCCEEDED. App Name: ${adminApp.name}, Project ID: ${adminApp.options.projectId}`);\n\n    if (!adminApp.options.projectId) {\n      console.error(`[firebase-admin.ts] CRITICAL: Firebase Admin SDK initialized, BUT Project ID is UNDEFINED.`);\n      console.error(`  - This occurred DESPITE attempting to use options: ${JSON.stringify(appOptions)}`);\n      console.error(`  - GAC was ${gacSet ? 'SET' : 'NOT SET'}.`);\n      console.error(`  - Firestore/Auth Admin features will likely fail.`);\n    }\n\n    // Obtain Firestore and Auth instances\n    try {\n      adminDb = admin.firestore();\n      console.log('[firebase-admin.ts] Firestore Admin instance obtained.');\n    } catch (dbError: any) {\n      console.error(`[firebase-admin.ts] FAILED to get Firestore Admin instance: ${dbError?.message}. Firestore calls will fail.`);\n      adminDb = undefined;\n    }\n    try {\n      adminAuth = admin.auth();\n      console.log('[firebase-admin.ts] Auth Admin instance obtained.');\n    } catch (authError: any) {\n      console.warn(`[firebase-admin.ts] FAILED to get Auth Admin instance: ${authError?.message}. Some Auth features might fail.`);\n      adminAuth = undefined;\n    }\n\n  } catch (initError: any) {\n    console.error(`[firebase-admin.ts] Firebase Admin SDK initialization FAILED ${initializationDescription}. Error: ${initError.message}`);\n    console.error(`  Context: GAC ${gacSet ? 'SET' : 'NOT SET'}, Explicit ProjectID: ${explicitProjectIdFromEnv || 'NOT SET'}, GCLOUD_PROJECT: ${process.env.GCLOUD_PROJECT || 'NOT SET'}.`);\n    // adminApp, adminDb, adminAuth will remain undefined\n  }\n\n} else {\n  adminApp = admin.app(); // Get the default app if already initialized\n  console.log(`[firebase-admin.ts] Firebase Admin SDK already initialized. Using existing app: ${adminApp.name}, Project ID: ${adminApp.options.projectId}`);\n  // Attempt to get db and auth from existing app, with error handling\n  if (adminApp) {\n    try {\n      adminDb = adminApp.firestore();\n      console.log('[firebase-admin.ts] Firestore Admin instance obtained from existing app.');\n    } catch (dbError: any) {\n      console.error(`[firebase-admin.ts] FAILED to get Firestore from existing app: ${dbError.message}.`);\n      adminDb = undefined;\n    }\n    try {\n      adminAuth = adminApp.auth();\n      console.log('[firebase-admin.ts] Auth Admin instance obtained from existing app.');\n    } catch (authError: any) {\n      console.warn(`[firebase-admin.ts] FAILED to get Auth from existing app: ${authError.message}.`);\n      adminAuth = undefined;\n    }\n  }\n}\n\nexport { adminDb, adminAuth };\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 401, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/cs-whatsapp-reply-flow.ts"],"sourcesContent":["'use server';\n\n// import { configureGenkit } from '@genkit-ai/core'; // configureGenkit sebaiknya di file genkit.ts utama\nimport { ai } from '@/ai/genkit'; // Menggunakan objek 'ai' global dari genkit.ts\n// import { defineFlow } from 'genkit'; // DIUBAH: Tidak lagi di-import langsung, pakai ai.defineFlow\n// import { googleAI } from '@genkit-ai/googleai'; // Tidak perlu diimport di sini jika 'ai' sudah dikonfigurasi\n// import { defineTool, type Tool } from 'genkit'; // DIUBAH: Tidak lagi di-import langsung, pakai ai.defineTool\nimport * as z from 'zod';\n\n// Firebase Admin SDK untuk koneksi ke Firestore\nimport { adminDb } from '@/lib/firebase-admin';\n\n// Skema Zod untuk input, TIDAK DI-EXPORT\nconst ZoyaChatInputSchema = z.object({\n  messages: z.array(\n    z.object({\n      role: z.enum(['user', 'model']),\n      content: z.string(), // Konten sekarang string biasa, pembungkusan 'parts' dilakukan di flow\n    })\n  ).optional(), // Dibuat opsional agar bisa fallback ke customerMessage\n  customerMessage: z.string().optional(), // Ini akan jadi input utama ke 'prompt' AI jika messages kosong\n  senderNumber: z.string().optional(),\n  // chatHistory sudah tercakup dalam `messages`\n  agentBehavior: z.string().optional(), // Opsional, bisa di-handle di prompt utama\n  knowledgeBase: z.string().optional(), // Opsional\n  currentDate: z.string().optional(),\n  currentTime: z.string().optional(),\n  tomorrowDate: z.string().optional(),\n  dayAfterTomorrowDate: z.string().optional(),\n  mainPromptString: z.string().optional(), // Prompt utama dari pengaturan\n});\nexport type ZoyaChatInput = z.infer<typeof ZoyaChatInputSchema>; // Tipe TETAP DI-EXPORT\n\n// Skema Zod untuk output, TIDAK DI-EXPORT\nconst ZoyaChatOutputSchema = z.string(); // Output adalah string balasan\n\n\n// =================================================================\n//  TOOLS: Kemampuan yang bisa digunakan oleh AI (TIDAK DI-EXPORT)\n// =================================================================\n\nconst getServicePriceTool = ai.defineTool(\n  {\n    name: 'getServicePrice',\n    description: 'Dapatkan harga untuk layanan spesifik pada model motor tertentu. Gunakan tool ini jika user menanyakan harga.',\n    inputSchema: z.object({\n      vehicleModel: z.string().describe('Model motor, contoh: NMAX, PCX, Vario'),\n      serviceName: z.string().describe('Nama layanan, contoh: Coating, Cuci Premium, Full Detailing'),\n    }),\n    outputSchema: z.object({\n      success: z.boolean(),\n      message: z.string(),\n      price: z.number().optional(),\n      size: z.string().optional(),\n      estimatedDuration: z.string().optional(),\n    }),\n  },\n  async ({ vehicleModel, serviceName }) => {\n    if (!adminDb) {\n      console.error(\"[getServicePriceTool] Firestore Admin DB is not initialized!\");\n      return { success: false, message: \"Database bengkel sedang tidak bisa diakses, Zoya jadi bingung nih.\" };\n    }\n    try {\n      const vehiclesRef = adminDb.collection('vehicleTypes');\n      let vehicleQuerySnapshot = await vehiclesRef\n        .where('aliases', 'array-contains', vehicleModel.toLowerCase())\n        .limit(1)\n        .get();\n\n      if (vehicleQuerySnapshot.empty) {\n        // Fallback to exact model match if alias not found\n        vehicleQuerySnapshot = await vehiclesRef.where('model_lowercase', '==', vehicleModel.toLowerCase()).limit(1).get();\n      }\n      \n      if (vehicleQuerySnapshot.empty) {\n        return { success: false, message: `Maaf, Zoya belum kenal model motor \"${vehicleModel}\". Mungkin bisa sebutkan yang lebih umum atau pastikan ejaannya benar?` };\n      }\n\n      const vehicleData = vehicleQuerySnapshot.docs[0].data();\n      const vehicleSize = vehicleData.size; // e.g., \"L\"\n      if (!vehicleSize) {\n         // Handle case where vehicle size might not be defined for a found model\n         return { success: false, message: `Ukuran untuk model motor \"${vehicleModel}\" tidak ditemukan. Zoya bingung nih.` };\n      }\n      // Varian di Firestore disimpan dengan nama ukuran (S, M, L, XL), bukan \"SIZE S\"\n      const firestoreSizeVariant = vehicleSize; // e.g., \"L\"\n\n      const servicesRef = adminDb.collection('services');\n      // Query lebih sederhana: cari nama layanan yang mendekati\n      const serviceQuerySnapshot = await servicesRef\n        .where('name_lowercase', '>=', serviceName.toLowerCase())\n        .where('name_lowercase', '<=', serviceName.toLowerCase() + '\\uf8ff')\n        .get();\n\n      if (serviceQuerySnapshot.empty) {\n        return { success: false, message: `Layanan \"${serviceName}\" sepertinya tidak tersedia.` };\n      }\n      \n      // Pilih kandidat terbaik jika query mengembalikan banyak (mis. \"Cuci\" bisa \"Cuci Premium\", \"Cuci Wax\")\n      let foundServiceData: any = null;\n      let bestMatchScore = -1;\n\n      serviceQuerySnapshot.forEach(doc => {\n        const service = doc.data();\n        const serviceNameLower = service.name_lowercase || service.name.toLowerCase(); // Pastikan ada name_lowercase\n        let score = 0;\n        if (serviceNameLower === serviceName.toLowerCase()) {\n            score = 100; // Exact match\n        } else if (serviceNameLower.startsWith(serviceName.toLowerCase())) {\n            score = 50; // Starts with\n        } else {\n            score = 10; // Contains (kurang relevan jika ada yang lebih spesifik)\n        }\n\n        if (score > bestMatchScore) {\n            bestMatchScore = score;\n            foundServiceData = service;\n        }\n      });\n\n      if (!foundServiceData) {\n         return { success: false, message: `Layanan \"${serviceName}\" tidak ditemukan.` };\n      }\n      \n      // Filter varian secara manual setelah mendapatkan dokumen layanan\n      let price: number | undefined = undefined;\n      let estimatedDuration: string | undefined = foundServiceData.estimatedDuration; // Default ke durasi dasar\n\n      if (foundServiceData.variants && Array.isArray(foundServiceData.variants)) {\n        const variant = foundServiceData.variants.find((v: any) => v.name && v.name.toUpperCase() === firestoreSizeVariant.toUpperCase());\n        if (variant && typeof variant.price === 'number') {\n          price = variant.price;\n          estimatedDuration = variant.estimatedDuration || estimatedDuration; // Ambil durasi varian jika ada\n        }\n      }\n      \n      // Jika tidak ada varian yang cocok atau tidak ada array varian, gunakan harga dasar\n      if (price === undefined && typeof foundServiceData.price === 'number') {\n        price = foundServiceData.price;\n      }\n\n      if (price === undefined) { // Jika setelah semua cek harga masih undefined\n        return { \n          success: false, \n          message: `Harga untuk layanan \"${foundServiceData.name}\" pada motor ukuran ${vehicleSize} (${vehicleModel}) belum tersedia saat ini. Mungkin Zoya bisa bantu carikan layanan lain?`,\n          size: vehicleSize, // Kembalikan ukuran agar AI tahu\n          estimatedDuration: estimatedDuration // Kembalikan durasi (dasar atau varian jika ada)\n        };\n      }\n\n      return {\n        success: true,\n        price: price,\n        size: vehicleSize,\n        message: `Harga untuk layanan ${foundServiceData.name} pada motor ${vehicleModel} (Size ${vehicleSize}) adalah Rp ${price.toLocaleString('id-ID')}. Estimasi durasi: ${estimatedDuration || 'N/A'}.`,\n        estimatedDuration: estimatedDuration || undefined // Pastikan selalu ada\n      };\n    } catch (error: any) {\n        // Log error lebih detail\n        console.error(\"[getServicePriceTool] Error executing tool:\", error.message, error.stack);\n        return { success: false, message: `Waduh, Zoya lagi pusing nih, ada error pas ngecek harga: ${error.message}` };\n    }\n  }\n);\n\n\n// =================================================================\n//  FLOW: Logika utama chatbot Zoya (TIDAK DI-EXPORT)\n// =================================================================\n\nconst zoyaChatFlow = ai.defineFlow(\n  {\n    name: 'zoyaChatFlow',\n    inputSchema: ZoyaChatInputSchema,\n    outputSchema: ZoyaChatOutputSchema,\n  },\n  async (input) => { // input sekarang bertipe ZoyaChatInput\n    \n    const lastUserMessageContent = input.customerMessage || (input.messages && input.messages.length > 0 ? input.messages[input.messages.length - 1].content : '');\n\n    if (!lastUserMessageContent || lastUserMessageContent.trim() === '') {\n      console.warn(\"[CS-FLOW] No valid last user message content. Returning empty reply.\");\n      return \"\"; \n    }\n    const lastMessageLowerCase = lastUserMessageContent.toLowerCase();\n    \n    let vehicleModel: string | null = null;\n    let serviceName: string | null = null;\n    let dynamicContext = `INFO_UMUM_BENGKEL: QLAB Moto Detailing adalah bengkel perawatan dan detailing motor.`;\n\n    if (adminDb) { \n      try {\n          const modelsSnapshot = await adminDb.collection('vehicleTypes').get();\n          for (const doc of modelsSnapshot.docs) {\n              const modelData = doc.data();\n              const modelAliases = (modelData.aliases as string[] || []).map(a => a.toLowerCase());\n              const originalModelName = modelData.model as string;\n              if (modelAliases.some(alias => lastMessageLowerCase.includes(alias)) || lastMessageLowerCase.includes(originalModelName.toLowerCase())) {\n                  vehicleModel = originalModelName;\n                  break;\n              }\n          }\n\n          const servicesSnapshot = await adminDb.collection('services').get();\n          for (const doc of servicesSnapshot.docs) {\n              const serviceData = doc.data();\n              const serviceAliases = (serviceData.aliases as string[] || []).map(a => a.toLowerCase());\n              const originalServiceName = serviceData.name as string;\n              if (serviceAliases.some(alias => lastMessageLowerCase.includes(alias)) || lastMessageLowerCase.includes(originalServiceName.toLowerCase())) {\n                  serviceName = originalServiceName;\n                  break;\n              }\n          }\n      } catch (dbError) {\n          console.error(\"[CS-FLOW] Error during Firestore entity detection:\", dbError);\n          dynamicContext += \" WARNING: Gagal mengambil data detail dari database.\";\n      }\n    } else {\n        console.warn(\"[CS-FLOW] Firestore Admin DB (adminDb) is not initialized. Entity detection and pricing will be skipped.\");\n        dynamicContext += \" WARNING: Database tidak terhubung, info harga mungkin tidak akurat.\";\n    }\n\n    if (vehicleModel && serviceName) {\n      const priceResult = await getServicePriceTool({ vehicleModel, serviceName });\n      if (serviceName.toLowerCase().includes('full detailing') && lastMessageLowerCase.includes('doff')) {\n          dynamicContext = `VALIDATION_ERROR: Full Detailing tidak bisa untuk motor doff (motor terdeteksi: ${vehicleModel}, layanan diminta: ${serviceName}). Tawarkan Coating Doff sebagai alternatif.`;\n      } else {\n          dynamicContext = `DATA_PRODUK: ${priceResult.message || 'Info harga belum tersedia, mohon tanyakan detail lebih lanjut.'}`;\n      }\n    } else if (vehicleModel) {\n        dynamicContext = `INFO_MOTOR_TERDETEKSI: ${vehicleModel}. Tanyakan layanan apa yang diinginkan.`;\n    } else if (serviceName) {\n        dynamicContext = `INFO_LAYANAN_TERDETEKSI: ${serviceName}. Tanyakan jenis motornya apa untuk estimasi harga.`;\n    }\n    console.log(\"[CS-FLOW] Dynamic context built:\", dynamicContext);\n    \n    const systemInstruction = input.mainPromptString ? \n      input.mainPromptString.replace(\"{{dynamicContext}}\", dynamicContext) : \n      DEFAULT_AI_SETTINGS.mainPrompt.replace(\"{{dynamicContext}}\", dynamicContext);\n\n    // Struktur messages untuk Genkit v1.x\n    const historyForAI = (input.messages || []) // Gunakan input.messages untuk histori jika ada\n      .slice(0, -1) // Semua kecuali pesan terakhir\n      .filter(msg => msg.content && msg.content.trim() !== '') \n      .map((msg) => ({\n        role: msg.role, \n        parts: [{ text: msg.content }],\n    }));\n    \n    // Pesan user terakhir digabung dengan system instruction\n    const userPromptWithSystemInstruction = `${systemInstruction}\n\n---\n\nUSER_INPUT: \"${lastUserMessageContent}\"\n\nJAWABAN ZOYA:`;\n\n    console.log(\"[CS-FLOW] Calling ai.generate with model googleai/gemini-1.5-flash-latest. History Length:\", historyForAI.length);\n    // console.log(\"[CS-FLOW] Full Prompt being sent:\", userPromptWithSystemInstruction); // Log full prompt bisa sangat panjang\n\n    try {\n      const result = await ai.generate({\n        model: 'googleai/gemini-1.5-flash-latest',\n        history: historyForAI, // Riwayat chat sebelumnya\n        prompt: userPromptWithSystemInstruction, // Prompt lengkap dengan instruksi sistem dan pesan user terakhir\n        tools: [getServicePriceTool as any], // Pastikan tool dikenali\n        toolChoice: 'auto',\n        config: { temperature: 0.5 },\n      });\n\n      console.log(\"[CS-FLOW] Raw AI generate result:\", JSON.stringify(result, null, 2));\n\n      const firstCandidate = result?.candidates?.[0];\n      const finishReason = result.finishReason; \n      const safetyRatings = result.safetyRatings; \n\n      console.log(`[CS-FLOW] AI Finish Reason: ${finishReason}`);\n      if (safetyRatings && safetyRatings.length > 0) {\n        console.log('[CS-FLOW] AI Safety Ratings:', JSON.stringify(safetyRatings, null, 2));\n      }\n\n      const suggestedReply = firstCandidate?.message?.content?.[0]?.text || \"\";\n\n      if (!suggestedReply) {\n        if (finishReason !== \"stop\") { // Genkit v1 finishReason is 'stop' (lowercase)\n          console.error(`[CS-FLOW] ❌ AI generation failed. Finish Reason: ${finishReason}. Safety: ${JSON.stringify(safetyRatings)}`);\n        } else {\n          console.warn(`[CS-FLOW] ⚠️ AI returned an empty reply, but finishReason was 'stop'. This might indicate an issue or unexpected model behavior. Safety Ratings: ${JSON.stringify(safetyRatings)}`);\n        }\n        return \"Maaf, Zoya lagi agak bingung nih boskuu. Coba tanya lagi dengan cara lain ya, atau hubungi CS langsung.\";\n      }\n      return suggestedReply;\n\n    } catch (flowError: any) {\n        console.error(\"[CS-FLOW] ❌ Critical error dalam flow zoyaChatFlow:\", flowError);\n        if (flowError.cause) {\n            console.error(\"[CS-FLOW] Error Cause:\", JSON.stringify(flowError.cause, null, 2));\n        }\n        return `Waduh, Zoya lagi error nih, boskuu. Coba tanya lagi nanti ya. (Pesan Error: ${flowError.message || 'Kesalahan internal tidak diketahui'})`;\n    }\n  }\n);\n\n// Fungsi wrapper, TETAP DI-EXPORT\nexport async function generateWhatsAppReply(input: ZoyaChatInput): Promise<{ suggestedReply: string }> {\n  console.log(\"[CS-FLOW] generateWhatsAppReply input:\", JSON.stringify(input, null, 2));\n  if (!input.mainPromptString) {\n    const mainPromptFromSettings = DEFAULT_AI_SETTINGS.mainPrompt; // Ambil dari default jika tidak ada di input\n    console.log(\"[CS-FLOW] generateWhatsAppReply: mainPrompt not found in input or Firestore. Using DEFAULT_AI_SETTINGS.mainPrompt.\");\n    input.mainPromptString = mainPromptFromSettings;\n  } else {\n    console.log(\"[CS-FLOW] generateWhatsAppReply: Using mainPromptString from input.\");\n  }\n\n  try {\n    const replyText = await zoyaChatFlow(input); // Panggil flow internal\n    return { suggestedReply: replyText };\n  } catch (error: any) {\n    console.error(\"[CS-FLOW Wrapper] Error running zoyaChatFlow:\", error);\n    return { suggestedReply: `Maaf, Zoya sedang ada kendala teknis. (${error.message || 'Tidak diketahui'})` };\n  }\n}\n\nconst DEFAULT_AI_SETTINGS = {\n  mainPrompt: `\nAnda adalah \"Zoya\" - CS QLAB Moto Detailing.\nGAYA BAHASA:\n- Santai, ramah, dan profesional (sapa dengan \"Halo boskuu!\", \"Siap!\", \"Gas booking!\").\n- Gunakan istilah otomotif santai: \"kinclong\", \"ganteng maksimal\", \"spa motor\".\n- Gunakan emoji secukupnya untuk menambah ekspresi: ✅😎✨💸🛠️.\n- Hindari kata kasar, tapi boleh pakai \"anjay\" atau \"wih\" untuk ekspresi kaget positif.\n- Selalu jawab dalam Bahasa Indonesia.\n\nATURAN BISNIS (PENTING!):\n1.  Jika user menanyakan harga, SELALU GUNAKAN 'getServicePrice' tool. Jangan menebak harga.\n2.  Layanan \"Full Detailing\" HANYA TERSEDIA untuk motor dengan cat GLOSSY. Jika user bertanya untuk motor DOFF, tolak dengan sopan dan tawarkan layanan lain (misal: \"Premium Wash\" atau \"Coating Doff\").\n3.  Harga \"Coating\" untuk motor DOFF dan GLOSSY itu BERBEDA. Pastikan tool mengambil data yang benar (cek field 'size' dari output tool).\n4.  Motor Gede (Moge) seperti Harley, atau motor 250cc ke atas otomatis masuk ukuran \"XL\". Tool 'getServicePrice' sudah memperhitungkan ini jika model motornya dikenali.\n\nKONTEKS DARI SISTEM (gunakan data ini untuk menjawab, JANGAN tampilkan KONTEKS ini ke user secara langsung, olah jadi jawaban natural, jangan JSON):\n{{dynamicContext}}\n\nPETUNJUK TAMBAHAN:\n- Jika KONTEKS berisi VALIDATION_ERROR, jelaskan error tersebut ke user dengan bahasa yang sopan dan berikan solusi/alternatif.\n- Jika KONTEKS berisi DATA_PRODUK dan harganya ada, sebutkan harganya. Jika harga 'belum tersedia', JANGAN mengarang harga. Informasikan bahwa harga spesifik belum ada dan tanyakan detail lebih lanjut jika diperlukan (misal jenis cat untuk coating, atau ukuran motor jika belum terdeteksi).\n- Jika user bertanya di luar topik detailing motor, jawab dengan sopan bahwa Anda hanya bisa membantu soal QLAB Moto Detailing.\n- Tujuan utama: Memberikan informasi akurat dan membantu user melakukan booking jika mereka mau.\n- Untuk booking, pastikan Anda mendapatkan: Nama Pelanggan, Nomor HP, Jenis Motor, Layanan, Tanggal, dan Jam. Jika ada yang kurang, minta dengan sopan. Jika sudah lengkap, konfirmasi detailnya ke user.\n`,\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 747, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/%28app%29/ai-cs-assistant/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {generateWhatsAppReply as '4053660f6447b38038e1d20965a3df3cd57a2a7b51'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 811, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28app%29/ai-cs-assistant/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(app)/ai-cs-assistant/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(app)/ai-cs-assistant/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA0S,GACvU,wEACA","debugId":null}},
    {"offset": {"line": 825, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28app%29/ai-cs-assistant/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(app)/ai-cs-assistant/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(app)/ai-cs-assistant/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAsR,GACnT,oDACA","debugId":null}},
    {"offset": {"line": 839, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}