{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firebase.ts"],"sourcesContent":["\nimport { initializeApp, getApp, getApps, type FirebaseApp } from \"firebase/app\";\nimport { getFirestore, type Firestore } from \"firebase/firestore\";\n\n// Minimal logging\nconsole.log(\"[firebase.ts] Initializing Firebase...\");\n\nconst firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n};\n\nif (!firebaseConfig.projectId || !firebaseConfig.apiKey) {\n  console.error(\"[firebase.ts] FATAL ERROR: Firebase projectId or apiKey is MISSING in environment variables.\");\n}\n\nlet app: FirebaseApp;\nlet db: Firestore;\n\nif (getApps().length === 0) {\n  try {\n    app = initializeApp(firebaseConfig);\n    console.log(\"[firebase.ts] Firebase app initialized. Project ID:\", app.options.projectId);\n  } catch (e: any) {\n    console.error(\"[firebase.ts] FAILED to initialize Firebase app:\", e.message);\n    // @ts-ignore\n    app = null;\n  }\n} else {\n  app = getApp();\n  console.log(\"[firebase.ts] Using existing Firebase app. Project ID:\", app.options.projectId);\n}\n\n// @ts-ignore\nif (app) {\n  try {\n    // @ts-ignore\n    db = getFirestore(app);\n    console.log(\"[firebase.ts] Firestore instance obtained.\");\n  } catch (e: any) {\n    console.error(\"[firebase.ts] FAILED to get Firestore instance:\", e?.message);\n  }\n} else {\n    console.error(\"[firebase.ts] Firebase app not properly initialized, cannot get Firestore.\");\n}\n\nexport { app, db };\n"],"names":[],"mappings":";;;;AACA;AAAA;AACA;AAAA;;;AAEA,kBAAkB;AAClB,QAAQ,GAAG,CAAC;AAEZ,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;AACP;AAEA,IAAI,CAAC,eAAe,SAAS,IAAI,CAAC,eAAe,MAAM,EAAE;IACvD,QAAQ,KAAK,CAAC;AAChB;AAEA,IAAI;AACJ,IAAI;AAEJ,IAAI,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,KAAK,GAAG;IAC1B,IAAI;QACF,MAAM,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE;QACpB,QAAQ,GAAG,CAAC,uDAAuD,IAAI,OAAO,CAAC,SAAS;IAC1F,EAAE,OAAO,GAAQ;QACf,QAAQ,KAAK,CAAC,oDAAoD,EAAE,OAAO;QAC3E,aAAa;QACb,MAAM;IACR;AACF,OAAO;IACL,MAAM,CAAA,GAAA,oLAAA,CAAA,SAAM,AAAD;IACX,QAAQ,GAAG,CAAC,0DAA0D,IAAI,OAAO,CAAC,SAAS;AAC7F;AAEA,aAAa;AACb,IAAI,KAAK;IACP,IAAI;QACF,aAAa;QACb,KAAK,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE;QAClB,QAAQ,GAAG,CAAC;IACd,EAAE,OAAO,GAAQ;QACf,QAAQ,KAAK,CAAC,mDAAmD,GAAG;IACtE;AACF,OAAO;IACH,QAAQ,KAAK,CAAC;AAClB","debugId":null}},
    {"offset": {"line": 264, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["\nimport '@/lib/firebase'; // Ensure Firebase is initialized early\nimport {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai'; // Impor plugin Google AI\n\nif (!process.env.GOOGLE_API_KEY) {\n  const errorMessage = \"Kesalahan Konfigurasi: GOOGLE_API_KEY tidak ditemukan di environment variables. Ini dibutuhkan oleh plugin Google AI. Pastikan sudah di-set di file .env Anda.\";\n  console.error(`\\n\\n🛑 ${errorMessage}\\n\\n`);\n  throw new Error(errorMessage);\n}\n\nexport const ai = genkit({\n  plugins: [\n    googleAI(), // Gunakan plugin Google AI\n  ],\n  model: 'googleai/gemini-1.5-flash-latest', // Model diubah ke Gemini 1.5 Flash terbaru\n  // Opsi telemetry tidak lagi dikonfigurasi di sini untuk Genkit v1.x\n  // Jika butuh logging, konfigurasi dilakukan secara berbeda atau via environment.\n});\n\n"],"names":[],"mappings":";;;AACA,8MAAyB,uCAAuC;AAChE;AAAA;AACA,8TAA8C,yBAAyB;AAAvE;;;;AAEA,IAAI,CAAC,QAAQ,GAAG,CAAC,cAAc,EAAE;IAC/B,MAAM,eAAe;IACrB,QAAQ,KAAK,CAAC,CAAC,OAAO,EAAE,aAAa,IAAI,CAAC;IAC1C,MAAM,IAAI,MAAM;AAClB;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QACP,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KACR;IACD,OAAO;AAGT","debugId":null}},
    {"offset": {"line": 300, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firebase-admin.ts"],"sourcesContent":["\nimport * as admin from 'firebase-admin';\n\n// Enhanced logging\nconsole.log(\"[firebase-admin.ts] Attempting to initialize Firebase Admin SDK...\");\nconsole.log(`[firebase-admin.ts] Current working directory: ${process.cwd()}`);\n\nconst gacSet = !!process.env.GOOGLE_APPLICATION_CREDENTIALS;\nconst firestoreEmulatorHost = process.env.FIRESTORE_EMULATOR_HOST;\nconst authEmulatorHost = process.env.FIREBASE_AUTH_EMULATOR_HOST;\nconst explicitProjectIdFromEnv = process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID;\nlet firebaseConfigProjectId = 'NOT PARSED YET';\n\ntry {\n    if (process.env.FIREBASE_CONFIG) {\n        const fbConfig = JSON.parse(process.env.FIREBASE_CONFIG);\n        firebaseConfigProjectId = fbConfig.projectId || 'projectId NOT FOUND in FIREBASE_CONFIG';\n    } else {\n        firebaseConfigProjectId = 'FIREBASE_CONFIG NOT SET';\n    }\n} catch (e) {\n    firebaseConfigProjectId = 'Error parsing FIREBASE_CONFIG';\n}\n\nconsole.log(`[firebase-admin.ts] Checking environment variables for Admin SDK:`);\nconsole.log(`  - GOOGLE_APPLICATION_CREDENTIALS: ${gacSet ? 'SET (path hidden)' : 'NOT SET'}`);\nconsole.log(`  - FIRESTORE_EMULATOR_HOST: ${firestoreEmulatorHost || 'NOT SET'}`);\nconsole.log(`  - FIREBASE_AUTH_EMULATOR_HOST: ${authEmulatorHost || 'NOT SET'}`);\nconsole.log(`  - FIREBASE_CONFIG (Project ID from it): ${firebaseConfigProjectId}`);\nconsole.log(`  - GCLOUD_PROJECT (often used as fallback for Project ID): ${process.env.GCLOUD_PROJECT || 'NOT SET'}`);\nconsole.log(`  - NEXT_PUBLIC_FIREBASE_PROJECT_ID (for explicit fallback): ${explicitProjectIdFromEnv || 'NOT SET'}`);\n\n\nlet adminApp: admin.app.App | undefined = undefined;\nlet adminDb: admin.firestore.Firestore | undefined = undefined;\nlet adminAuth: admin.auth.Auth | undefined = undefined;\n\nif (!admin.apps.length) {\n  const appOptions: admin.AppOptions = {};\n  let initializationDescription = \"\";\n\n  if (explicitProjectIdFromEnv) {\n    appOptions.projectId = explicitProjectIdFromEnv;\n    initializationDescription = `using explicit projectId from NEXT_PUBLIC_FIREBASE_PROJECT_ID: '${explicitProjectIdFromEnv}'`;\n  } else if (process.env.GCLOUD_PROJECT) {\n    appOptions.projectId = process.env.GCLOUD_PROJECT;\n    initializationDescription = `using projectId from GCLOUD_PROJECT: '${process.env.GCLOUD_PROJECT}'`;\n  } else {\n    initializationDescription = `with default options (relying on GAC or other inference)`;\n  }\n  \n  console.log(`[firebase-admin.ts] Attempting Firebase Admin SDK initialization ${initializationDescription}...`);\n\n  try {\n    adminApp = admin.initializeApp(appOptions); // Pass options directly\n    console.log(`[firebase-admin.ts] Firebase Admin SDK initialization SUCCEEDED. App Name: ${adminApp.name}, Project ID: ${adminApp.options.projectId}`);\n\n    if (!adminApp.options.projectId) {\n      console.error(`[firebase-admin.ts] CRITICAL: Firebase Admin SDK initialized, BUT Project ID is UNDEFINED.`);\n      console.error(`  - This occurred DESPITE attempting to use options: ${JSON.stringify(appOptions)}`);\n      console.error(`  - GAC was ${gacSet ? 'SET' : 'NOT SET'}.`);\n      console.error(`  - Firestore/Auth Admin features will likely fail.`);\n    }\n\n    // Obtain Firestore and Auth instances\n    try {\n      adminDb = admin.firestore();\n      console.log('[firebase-admin.ts] Firestore Admin instance obtained.');\n    } catch (dbError: any) {\n      console.error(`[firebase-admin.ts] FAILED to get Firestore Admin instance: ${dbError?.message}. Firestore calls will fail.`);\n      adminDb = undefined;\n    }\n    try {\n      adminAuth = admin.auth();\n      console.log('[firebase-admin.ts] Auth Admin instance obtained.');\n    } catch (authError: any) {\n      console.warn(`[firebase-admin.ts] FAILED to get Auth Admin instance: ${authError?.message}. Some Auth features might fail.`);\n      adminAuth = undefined;\n    }\n\n  } catch (initError: any) {\n    console.error(`[firebase-admin.ts] Firebase Admin SDK initialization FAILED ${initializationDescription}. Error: ${initError.message}`);\n    console.error(`  Context: GAC ${gacSet ? 'SET' : 'NOT SET'}, Explicit ProjectID: ${explicitProjectIdFromEnv || 'NOT SET'}, GCLOUD_PROJECT: ${process.env.GCLOUD_PROJECT || 'NOT SET'}.`);\n    // adminApp, adminDb, adminAuth will remain undefined\n  }\n\n} else {\n  adminApp = admin.app(); // Get the default app if already initialized\n  console.log(`[firebase-admin.ts] Firebase Admin SDK already initialized. Using existing app: ${adminApp.name}, Project ID: ${adminApp.options.projectId}`);\n  // Attempt to get db and auth from existing app, with error handling\n  if (adminApp) {\n    try {\n      adminDb = adminApp.firestore();\n      console.log('[firebase-admin.ts] Firestore Admin instance obtained from existing app.');\n    } catch (dbError: any) {\n      console.error(`[firebase-admin.ts] FAILED to get Firestore from existing app: ${dbError.message}.`);\n      adminDb = undefined;\n    }\n    try {\n      adminAuth = adminApp.auth();\n      console.log('[firebase-admin.ts] Auth Admin instance obtained from existing app.');\n    } catch (authError: any) {\n      console.warn(`[firebase-admin.ts] FAILED to get Auth from existing app: ${authError.message}.`);\n      adminAuth = undefined;\n    }\n  }\n}\n\nexport { adminDb, adminAuth };\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 401, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/cs-whatsapp-reply-flow.ts"],"sourcesContent":["\n'use server';\n\n// import { configureGenkit } from '@genkit-ai/core'; // configureGenkit sebaiknya di file genkit.ts utama\nimport { ai } from '@/ai/genkit'; // Menggunakan objek 'ai' global dari genkit.ts\nimport { defineFlow } from 'genkit'; // DIUBAH: Import defineFlow dari 'genkit'\nimport { googleAI } from '@genkit-ai/googleai'; // Pastikan ini sesuai dengan struktur Genkit v1.x\nimport { defineTool, type Tool } from 'genkit'; // DIUBAH: Import defineTool dari 'genkit'\nimport * as z from 'zod';\n\n// Firebase Admin SDK untuk koneksi ke Firestore\n// Pastikan firebase-admin diinisialisasi di tempat yang benar (misalnya, di firebase-admin.ts dan diimpor)\nimport { adminDb } from '@/lib/firebase-admin'; // Menggunakan instance adminDb dari firebase-admin.ts\n\n// Jika configureGenkit sudah ada di src/ai/genkit.ts, baris di bawah ini mungkin tidak diperlukan di sini\n// dan bisa menyebabkan konflik jika di-set ulang.\n// configureGenkit({\n//   plugins: [\n//     googleAI({\n//       apiVersion: 'v1beta', // Diperlukan untuk model Gemini 1.5\n//     }),\n//   ],\n//   logLevel: 'debug',\n//   enableTracingAndMetrics: true,\n// });\n\n\n// Skema untuk input dan output Zoya Chat Flow, disesuaikan dengan kebutuhan baru\nexport const ZoyaChatInputSchema = z.object({\n  messages: z.array(\n    z.object({\n      role: z.enum(['user', 'model']),\n      // Di Genkit 1.x, content biasanya adalah array of Parts, bukan array of objects {text: string}\n      // Tapi kita ikuti dulu skema yang diberikan, mungkin ada konversi di Genkit-nya.\n      // Untuk aman, kita gunakan string biasa untuk content di sini, lalu di dalam flow kita bungkus.\n      content: z.string(),\n    })\n  ),\n});\nexport type ZoyaChatInput = z.infer<typeof ZoyaChatInputSchema>;\n\nexport const ZoyaChatOutputSchema = z.string(); // Output adalah string balasan\n\n\n// =================================================================\n//  TOOLS: Kemampuan yang bisa digunakan oleh AI\n// =================================================================\n\n// Tool untuk mencari harga layanan di Firestore\nexport const getServicePriceTool = defineTool(\n  {\n    name: 'getServicePrice',\n    description: 'Dapatkan harga untuk layanan spesifik pada model motor tertentu. Gunakan tool ini jika user menanyakan harga.',\n    inputSchema: z.object({\n      vehicleModel: z.string().describe('Model motor, contoh: NMAX, PCX, Vario'),\n      serviceName: z.string().describe('Nama layanan, contoh: Coating, Cuci Premium, Full Detailing'),\n    }),\n    outputSchema: z.object({\n      success: z.boolean(),\n      message: z.string(),\n      price: z.number().optional(),\n      size: z.string().optional(),\n      estimatedDuration: z.string().optional(),\n    }),\n  },\n  async ({ vehicleModel, serviceName }) => {\n    if (!adminDb) {\n      console.error(\"[getServicePriceTool] Firestore Admin DB is not initialized!\");\n      return { success: false, message: \"Database bengkel sedang tidak bisa diakses, Zoya jadi bingung nih.\" };\n    }\n    try {\n      // 1. Cari ukuran kendaraan dari modelnya\n      const vehiclesRef = adminDb.collection('vehicleTypes');\n      let vehicleQuerySnapshot = await vehiclesRef\n        .where('aliases', 'array-contains', vehicleModel.toLowerCase())\n        .limit(1)\n        .get();\n\n      if (vehicleQuerySnapshot.empty) {\n        // Coba cari berdasarkan nama model langsung jika alias tidak ketemu\n        vehicleQuerySnapshot = await vehiclesRef.where('model_lowercase', '==', vehicleModel.toLowerCase()).limit(1).get();\n      }\n      \n      if (vehicleQuerySnapshot.empty) {\n        return { success: false, message: `Maaf, Zoya belum kenal model motor \"${vehicleModel}\". Mungkin bisa sebutkan yang lebih umum atau pastikan ejaannya benar?` };\n      }\n\n      const vehicleData = vehicleQuerySnapshot.docs[0].data();\n      const vehicleSize = vehicleData.size; // e.g., \"L\"\n      if (!vehicleSize) {\n         return { success: false, message: `Ukuran untuk model motor \"${vehicleModel}\" tidak ditemukan. Zoya bingung nih.` };\n      }\n      const firestoreSizeVariant = vehicleSize; // Di Firestore, varian disimpan dengan nama seperti \"L\", \"M\", bukan \"SIZE L\"\n\n      // 2. Cari layanan berdasarkan nama (case-insensitive partial match, ambil yang paling relevan)\n      const servicesRef = adminDb.collection('services');\n      const serviceQuerySnapshot = await servicesRef\n        .where('name_lowercase', '>=', serviceName.toLowerCase())\n        .where('name_lowercase', '<=', serviceName.toLowerCase() + '\\uf8ff')\n        .get();\n\n      if (serviceQuerySnapshot.empty) {\n        return { success: false, message: `Layanan \"${serviceName}\" sepertinya tidak tersedia.` };\n      }\n      \n      let foundServiceData: any = null;\n      let bestMatchScore = -1;\n\n      // Cari best match dari hasil query\n      serviceQuerySnapshot.forEach(doc => {\n        const service = doc.data();\n        const serviceNameLower = service.name_lowercase || service.name.toLowerCase();\n        let score = 0;\n        if (serviceNameLower === serviceName.toLowerCase()) {\n            score = 100; // Exact match\n        } else if (serviceNameLower.startsWith(serviceName.toLowerCase())) {\n            score = 50; // Starts with\n        } else {\n            score = 10; // Contains (implied by query)\n        }\n\n        if (score > bestMatchScore) {\n            bestMatchScore = score;\n            foundServiceData = service;\n        }\n      });\n\n      if (!foundServiceData) {\n         return { success: false, message: `Layanan \"${serviceName}\" tidak ditemukan.` };\n      }\n      \n      // 3. Ambil harga dari varian yang cocok atau harga dasar\n      let price: number | undefined = undefined;\n      let estimatedDuration: string | undefined = foundServiceData.estimatedDuration;\n\n      if (foundServiceData.variants && Array.isArray(foundServiceData.variants)) {\n        // Di Firestore, varian disimpan dengan nama seperti \"L\", \"M\", bukan \"SIZE L\"\n        const variant = foundServiceData.variants.find((v: any) => v.name && v.name.toUpperCase() === firestoreSizeVariant.toUpperCase());\n        if (variant && typeof variant.price === 'number') {\n          price = variant.price;\n          estimatedDuration = variant.estimatedDuration || estimatedDuration; // Ambil durasi varian jika ada\n        }\n      }\n      \n      // Fallback ke harga dasar jika varian tidak ditemukan atau tidak ada varian\n      if (price === undefined && typeof foundServiceData.price === 'number') {\n        price = foundServiceData.price;\n      }\n\n      if (price === undefined) {\n        return { \n          success: false, \n          message: `Harga untuk layanan \"${foundServiceData.name}\" pada motor ukuran ${vehicleSize} (${vehicleModel}) belum tersedia saat ini. Mungkin Zoya bisa bantu carikan layanan lain?`,\n          size: vehicleSize,\n          estimatedDuration: estimatedDuration\n        };\n      }\n\n      return {\n        success: true,\n        price: price,\n        size: vehicleSize,\n        message: `Harga untuk layanan ${foundServiceData.name} pada motor ${vehicleModel} (Size ${vehicleSize}) adalah Rp ${price.toLocaleString('id-ID')}. Estimasi durasi: ${estimatedDuration || 'N/A'}.`,\n        estimatedDuration: estimatedDuration || undefined\n      };\n    } catch (error: any) {\n        console.error(\"[getServicePriceTool] Error executing tool:\", error);\n        return { success: false, message: `Waduh, Zoya lagi pusing nih, ada error pas ngecek harga: ${error.message}` };\n    }\n  }\n);\n\n\n// =================================================================\n//  FLOW: Logika utama chatbot Zoya\n// =================================================================\n\nexport const zoyaChatFlow = defineFlow(\n  {\n    name: 'zoyaChatFlow',\n    inputSchema: ZoyaChatInputSchema,\n    outputSchema: ZoyaChatOutputSchema,\n  },\n  async ({ messages }) => {\n    // Ambil model Gemini 1.5 Flash dari 'ai' object global\n    // const model = googleAI('gemini-1.5-flash-latest'); // Ini akan membuat instance baru\n    // Sebaiknya gunakan instance dari ai.configureGenkit()\n\n    const messagesForAI = messages.map(msg => ({\n      role: msg.role,\n      parts: [{ text: msg.content }], // Bungkus content string ke dalam Part\n    }));\n\n\n    // Buat prompt untuk AI\n    // Pastikan kita menggunakan `ai.generate` dari instance global Genkit\n    try {\n      const result = await ai.generate({\n        model: 'googleai/gemini-1.5-flash-latest', // Tetap gunakan string model di sini\n        // Sistem prompt mendefinisikan kepribadian dan aturan main Zoya\n        system: `Anda adalah \"Zoya\" - Customer Service virtual dari QLAB Moto Detailing.\n          GAYA BAHASA:\n          - Santai, ramah, dan profesional (sapa dengan \"Halo boskuu!\", \"Siap!\", \"Gas booking!\").\n          - Gunakan istilah otomotif santai: \"kinclong\", \"ganteng maksimal\", \"spa motor\".\n          - Gunakan emoji secukupnya untuk menambah ekspresi: ✅😎✨💸🛠️.\n          - Hindari kata kasar, tapi boleh pakai \"anjay\" atau \"wih\" untuk ekspresi kaget positif.\n          - Selalu jawab dalam Bahasa Indonesia.\n\n          ATURAN BISNIS (PENTING!):\n          1.  Jika user menanyakan harga, SELALU GUNAKAN 'getServicePrice' tool. Jangan menebak harga.\n          2.  Layanan \"Full Detailing\" HANYA TERSEDIA untuk motor dengan cat GLOSSY. Jika user bertanya untuk motor DOFF, tolak dengan sopan dan tawarkan layanan lain (misal: \"Premium Wash\" atau \"Coating Doff\").\n          3.  Harga \"Coating\" untuk motor DOFF dan GLOSSY itu BERBEDA. Pastikan tool mengambil data yang benar (cek field 'size' dari output tool).\n          4.  Motor Gede (Moge) seperti Harley, atau motor 250cc ke atas otomatis masuk ukuran \"XL\". Tool 'getServicePrice' sudah memperhitungkan ini jika model motornya dikenali.\n\n          FLOW INTERAKSI:\n          - Sapa user dengan ramah.\n          - Jika user bertanya harga, panggil tool 'getServicePrice' dengan 'vehicleModel' dan 'serviceName' yang paling relevan dari pertanyaan user.\n            -   Contoh jika user tanya \"harga coating nmax berapa?\": panggil tool dengan vehicleModel: \"NMAX\", serviceName: \"Coating\".\n            -   Contoh jika user tanya \"biaya detailing vario 125\": panggil tool dengan vehicleModel: \"Vario 125\", serviceName: \"Detailing\".\n            -   Sampaikan hasil dari tool (field 'message' dari output tool) ke user dengan gaya Zoya.\n          - Setelah memberikan informasi, selalu tawarkan langkah selanjutnya (misal: \"Gimana boskuu, mau langsung di-booking jadwalnya?\").\n          - Jika user meminta booking, kumpulkan informasi yang dibutuhkan: nama pelanggan, nomor HP, jenis motor, layanan yang diinginkan, tanggal, dan jam. Lalu, panggil tool 'createBookingTool' (belum ada di sini, tapi siapkan untuk nanti). Untuk saat ini, cukup konfirmasi dan bilang akan dibantu CS manual.\n          `,\n        messages: messagesForAI, // Riwayat percakapan dari user, sudah diformat\n        tools: [getServicePriceTool as Tool<any,any>], // Beri tahu AI tool apa saja yang bisa ia gunakan\n        toolChoice: 'auto', // Biarkan AI memilih kapan menggunakan tool\n        config: {\n          temperature: 0.5,\n          // apiVersion: 'v1beta' // Tidak perlu di sini jika sudah di configureGenkit\n        }\n      });\n\n      // Cek apakah AI meminta pemanggilan tool\n      const toolRequest = result.toolRequest();\n      if (toolRequest) {\n        console.log(\"[zoyaChatFlow] AI requested tool:\", JSON.stringify(toolRequest, null, 2));\n        // Di sini Anda akan memanggil tool secara manual dan mengirimkan hasilnya kembali.\n        // Untuk contoh ini, kita asumsikan tool getServicePriceTool akan dipanggil oleh Genkit\n        // dan hasilnya akan otomatis digunakan oleh AI di giliran berikutnya jika 'auto'\n        // Jika toolChoice adalah 'any' atau 'tool', Anda perlu menangani pemanggilan tool di sini.\n        // Untuk kesederhanaan dengan 'auto', kita harapkan Genkit menanganinya.\n        // Jika tidak, kita mungkin perlu response lanjutan ke AI dengan output tool.\n        \n        // Jika Genkit tidak otomatis memproses tool dengan 'auto' dan hanya mengembalikan toolRequest,\n        // maka kita perlu mengembalikan toolRequest tersebut atau memprosesnya secara manual.\n        // Namun, API Genkit v1.x untuk `generate` seharusnya bisa menangani pemanggilan tool\n        // dan menghasilkan respons final dari AI setelah tool dipanggil.\n\n        // Jika AI masih meminta tool (tidak menghasilkan teks akhir), maka kita perlu\n        // mengembalikan ToolRequestPart atau memprosesnya.\n        // Untuk sekarang, kita coba lihat apakah AI langsung memberikan jawaban teks setelah 'auto'\n        if (result.candidates?.[0]?.message.content?.[0]?.text) {\n            return result.candidates[0].message.content[0].text;\n        } else {\n            // Ini skenario yang lebih kompleks di mana kita mungkin perlu iterasi dengan AI dan tool\n            // Untuk saat ini, jika AI meminta tool dan tidak langsung memberi teks, kita beri pesan placeholder\n            return \"Zoya lagi ngecek sesuatu nih boskuu, bentar ya...\";\n        }\n      }\n      \n      const suggestedReply = result.candidates?.[0]?.message.content?.[0]?.text || \"\";\n      if (!suggestedReply) {\n          console.warn(\"[zoyaChatFlow] AI returned an empty reply. Finish Reason:\", result.finishReason, \"Safety Ratings:\", result.safetyRatings);\n          return \"Maaf boskuu, Zoya lagi agak bingung nih. Coba tanya lagi ya.\";\n      }\n      return suggestedReply;\n\n    } catch (flowError: any) {\n        console.error(\"[zoyaChatFlow] Error during AI generation or tool call:\", flowError);\n        if (flowError.cause) {\n            console.error(\"[zoyaChatFlow] Error Cause:\", JSON.stringify(flowError.cause, null, 2));\n        }\n        return `Waduh, Zoya lagi error nih, boskuu. Coba tanya lagi nanti ya. (${flowError.message || 'Kesalahan internal'})`;\n    }\n  }\n);\n\n// Fungsi wrapper yang sudah ada, disesuaikan untuk input baru\nexport async function generateWhatsAppReply(input: ZoyaChatInput): Promise<{ suggestedReply: string }> {\n  try {\n    const replyText = await zoyaChatFlow(input); // Menggunakan runFlow dari 'genkit'\n    return { suggestedReply: replyText };\n  } catch (error: any) {\n    console.error(\"Error running zoyaChatFlow via wrapper:\", error);\n    return { suggestedReply: `Maaf, Zoya sedang ada kendala teknis. (${error.message || 'Tidak diketahui'})` };\n  }\n}\n\n// Hapus `startFlows()` karena ini bukan file entry point untuk dev server Genkit\n// startFlows();\n\n    \n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 683, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/%28app%29/ai-cs-assistant/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {generateWhatsAppReply as '4053660f6447b38038e1d20965a3df3cd57a2a7b51'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 747, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28app%29/ai-cs-assistant/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(app)/ai-cs-assistant/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(app)/ai-cs-assistant/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA0S,GACvU,wEACA","debugId":null}},
    {"offset": {"line": 761, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28app%29/ai-cs-assistant/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(app)/ai-cs-assistant/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(app)/ai-cs-assistant/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAsR,GACnT,oDACA","debugId":null}},
    {"offset": {"line": 775, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}