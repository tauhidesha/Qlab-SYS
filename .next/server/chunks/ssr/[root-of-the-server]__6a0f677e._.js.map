{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firebase.ts"],"sourcesContent":["\nimport { initializeApp, getApp, getApps, type FirebaseApp } from \"firebase/app\";\nimport { getFirestore, type Firestore } from \"firebase/firestore\";\n\n// Minimal logging\nconsole.log(\"[firebase.ts] Initializing Firebase...\");\n\nconst firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n};\n\nif (!firebaseConfig.projectId || !firebaseConfig.apiKey) {\n  console.error(\"[firebase.ts] FATAL ERROR: Firebase projectId or apiKey is MISSING in environment variables.\");\n}\n\nlet app: FirebaseApp;\nlet db: Firestore;\n\nif (getApps().length === 0) {\n  try {\n    app = initializeApp(firebaseConfig);\n    console.log(\"[firebase.ts] Firebase app initialized. Project ID:\", app.options.projectId);\n  } catch (e: any) {\n    console.error(\"[firebase.ts] FAILED to initialize Firebase app:\", e.message);\n    // @ts-ignore\n    app = null;\n  }\n} else {\n  app = getApp();\n  console.log(\"[firebase.ts] Using existing Firebase app. Project ID:\", app.options.projectId);\n}\n\n// @ts-ignore\nif (app) {\n  try {\n    // @ts-ignore\n    db = getFirestore(app);\n    console.log(\"[firebase.ts] Firestore instance obtained.\");\n  } catch (e: any) {\n    console.error(\"[firebase.ts] FAILED to get Firestore instance:\", e?.message);\n  }\n} else {\n    console.error(\"[firebase.ts] Firebase app not properly initialized, cannot get Firestore.\");\n}\n\nexport { app, db };\n"],"names":[],"mappings":";;;;AACA;AAAA;AACA;AAAA;;;AAEA,kBAAkB;AAClB,QAAQ,GAAG,CAAC;AAEZ,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;AACP;AAEA,IAAI,CAAC,eAAe,SAAS,IAAI,CAAC,eAAe,MAAM,EAAE;IACvD,QAAQ,KAAK,CAAC;AAChB;AAEA,IAAI;AACJ,IAAI;AAEJ,IAAI,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,KAAK,GAAG;IAC1B,IAAI;QACF,MAAM,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE;QACpB,QAAQ,GAAG,CAAC,uDAAuD,IAAI,OAAO,CAAC,SAAS;IAC1F,EAAE,OAAO,GAAQ;QACf,QAAQ,KAAK,CAAC,oDAAoD,EAAE,OAAO;QAC3E,aAAa;QACb,MAAM;IACR;AACF,OAAO;IACL,MAAM,CAAA,GAAA,oLAAA,CAAA,SAAM,AAAD;IACX,QAAQ,GAAG,CAAC,0DAA0D,IAAI,OAAO,CAAC,SAAS;AAC7F;AAEA,aAAa;AACb,IAAI,KAAK;IACP,IAAI;QACF,aAAa;QACb,KAAK,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE;QAClB,QAAQ,GAAG,CAAC;IACd,EAAE,OAAO,GAAQ;QACf,QAAQ,KAAK,CAAC,mDAAmD,GAAG;IACtE;AACF,OAAO;IACH,QAAQ,KAAK,CAAC;AAClB","debugId":null}},
    {"offset": {"line": 264, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["\nimport '@/lib/firebase'; // Ensure Firebase is initialized early\nimport {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai'; // Impor plugin Google AI\n\nexport const ai = genkit({\n  plugins: [\n    googleAI(), // Gunakan plugin Google AI\n  ],\n  model: 'googleai/gemini-1.5-flash-latest', // Mengubah ke model yang lebih stabil\n  // Opsi telemetry tidak lagi dikonfigurasi di sini untuk Genkit v1.x\n  // Jika butuh logging, konfigurasi dilakukan secara berbeda atau via environment.\n});\n"],"names":[],"mappings":";;;AACA,8MAAyB,uCAAuC;AAChE;AAAA;AACA,8TAA8C,yBAAyB;AAAvE;;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QACP,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KACR;IACD,OAAO;AAGT","debugId":null}},
    {"offset": {"line": 287, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/types/ai/cs-whatsapp-reply.ts"],"sourcesContent":["\nimport { z } from 'genkit';\n\nexport const ChatMessageSchema = z.object({\n  role: z.enum(['user', 'model']), // 'user' for customer/CS agent, 'model' for AI's previous replies\n  content: z.string(),\n});\nexport type ChatMessage = z.infer<typeof ChatMessageSchema>;\n\nexport const WhatsAppReplyInputSchema = z.object({\n  customerMessage: z.string().describe('Pesan yang diterima dari pelanggan melalui WhatsApp, atau pertanyaan dari staf CS.'),\n  senderNumber: z.string().optional().describe('Nomor WhatsApp pengirim pesan (pelanggan).'),\n  chatHistory: z.array(ChatMessageSchema).optional().describe('Riwayat percakapan sebelumnya antara pelanggan dan AI/staf CS.'),\n  agentBehavior: z.string().optional().describe('Perilaku agen AI yang diinginkan, mis. \"Ramah & Membantu\".'),\n  knowledgeBase: z.string().optional().describe('Panduan tingkat tinggi untuk AI. Detail pengetahuan spesifik akan diambil melalui tools.'),\n  currentDate: z.string().optional().describe('Tanggal saat ini dalam format YYYY-MM-DD. Berguna untuk konteks booking.'),\n  currentTime: z.string().optional().describe('Waktu saat ini dalam format HH:MM (24 jam). Berguna untuk konteks booking.'),\n  tomorrowDate: z.string().optional().describe('Tanggal besok dalam format YYYY-MM-DD. Berguna untuk konteks booking.'),\n  dayAfterTomorrowDate: z.string().optional().describe('Tanggal lusa (besoknya besok) dalam format YYYY-MM-DD. Berguna untuk konteks booking.'),\n});\nexport type WhatsAppReplyInput = z.infer<typeof WhatsAppReplyInputSchema>;\n\nexport const WhatsAppReplyOutputSchema = z.object({\n  suggestedReply: z.string().describe('Saran balasan yang dihasilkan AI untuk dikirim ke pelanggan.'),\n});\nexport type WhatsAppReplyOutput = z.infer<typeof WhatsAppReplyOutputSchema>;\n    \n"],"names":[],"mappings":";;;;;AACA;AAAA;;AAEO,MAAM,oBAAoB,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACxC,MAAM,uIAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAQ;KAAQ;IAC9B,SAAS,uIAAA,CAAA,IAAC,CAAC,MAAM;AACnB;AAGO,MAAM,2BAA2B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC/C,iBAAiB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACrC,cAAc,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;IAC7C,aAAa,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,mBAAmB,QAAQ,GAAG,QAAQ,CAAC;IAC5D,eAAe,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;IAC9C,eAAe,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;IAC9C,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;IAC5C,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;IAC5C,cAAc,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;IAC7C,sBAAsB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;AACvD;AAGO,MAAM,4BAA4B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAChD,gBAAgB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACtC","debugId":null}},
    {"offset": {"line": 322, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/types/aiSettings.ts"],"sourcesContent":["\nimport { z } from 'zod';\n\nexport const AI_AGENT_BEHAVIORS = [\n  \"Ramah & Membantu\",\n  \"Profesional & To-the-point\",\n  \"Humoris & Santai\",\n  \"Empatik & Sabar\",\n] as const;\nexport type AiAgentBehavior = typeof AI_AGENT_BEHAVIORS[number];\n\nexport const AI_TRANSFER_CONDITIONS = [\n  \"Pelanggan Meminta Secara Eksplisit\",\n  \"AI Tidak Menemukan Jawaban (Setelah 2x Coba)\", // Programmatic check for this is complex currently\n  \"Terdeteksi Emosi Negatif dari Pelanggan\", // Needs sentiment analysis\n  \"Disebut Kata Kunci Eskalasi (mis. 'manajer', 'komplain')\",\n  \"Setelah 5 Pertanyaan Tanpa Solusi\", // Programmatic check for this is complex currently\n] as const;\nexport type AiTransferCondition = typeof AI_TRANSFER_CONDITIONS[number];\n\nconst FollowUpDelaysSchema = z.object({\n  firstAttemptHours: z.preprocess(\n    (val) => (val === \"\" || val === undefined || val === null) ? undefined : parseInt(String(val), 10),\n    z.number({ invalid_type_error: \"Jam harus angka.\"}).min(1, \"Minimal 1 jam.\").max(168, \"Maksimal 168 jam (7 hari).\").optional()\n  ),\n  secondAttemptDays: z.preprocess(\n    (val) => (val === \"\" || val === undefined || val === null) ? undefined : parseInt(String(val), 10),\n    z.number({ invalid_type_error: \"Hari harus angka.\"}).min(1, \"Minimal 1 hari.\").max(30, \"Maksimal 30 hari.\").optional()\n  ),\n  thirdAttemptDays: z.preprocess(\n    (val) => (val === \"\" || val === undefined || val === null) ? undefined : parseInt(String(val), 10),\n    z.number({ invalid_type_error: \"Hari harus angka.\"}).min(1, \"Minimal 1 hari.\").max(30, \"Maksimal 30 hari.\").optional()\n  ),\n  fourthAttemptDays: z.preprocess(\n    (val) => (val === \"\" || val === undefined || val === null) ? undefined : parseInt(String(val), 10),\n    z.number({ invalid_type_error: \"Hari harus angka.\"}).min(1, \"Minimal 1 hari.\").max(90, \"Maksimal 90 hari.\").optional()\n  ),\n});\n\nexport const AiSettingsFormSchema = z.object({\n  agentBehavior: z.enum(AI_AGENT_BEHAVIORS, {\n    required_error: \"Perilaku agen AI harus dipilih.\",\n  }),\n  welcomeMessage: z.string().min(10, \"Pesan selamat datang minimal 10 karakter.\").max(300, \"Pesan selamat datang maksimal 300 karakter.\"),\n  transferConditions: z.array(z.enum(AI_TRANSFER_CONDITIONS)).min(1, \"Minimal satu kondisi transfer harus dipilih.\"),\n  knowledgeBaseDescription: z.string().max(10000, \"Deskripsi sumber pengetahuan maksimal 10000 karakter.\").optional().describe(\"Panduan tingkat tinggi untuk AI. Detail pengetahuan akan diambil melalui tools.\"),\n  \n  enableHumanHandoff: z.boolean().default(false).describe(\"Aktifkan notifikasi ke agen manusia jika AI perlu bantuan.\"),\n  humanAgentWhatsAppNumber: z.string().regex(/^\\+?[0-9\\s-]{10,18}$|^$/, \"Format nomor WhatsApp agen tidak valid (mis. +628123456789 atau kosong).\").optional().describe(\"Nomor WhatsApp agen manusia untuk notifikasi handoff.\"),\n\n  enableFollowUp: z.boolean().default(false).describe(\"Aktifkan fitur follow-up otomatis untuk pelanggan yang pernah menghubungi via WhatsApp namun belum melakukan kunjungan atau transaksi. Follow-up berhenti jika pelanggan tercatat datang/bertransaksi.\"),\n  followUpMessageTemplate: z.string().max(300, \"Template pesan follow-up maksimal 300 karakter.\").optional(),\n  followUpDelays: FollowUpDelaysSchema.optional(),\n}).superRefine((data, ctx) => {\n  if (data.enableFollowUp) {\n    if (!data.followUpMessageTemplate || data.followUpMessageTemplate.trim() === \"\") {\n      ctx.addIssue({\n        code: z.ZodIssueCode.custom,\n        message: \"Template pesan follow-up diperlukan jika fitur follow-up aktif.\",\n        path: [\"followUpMessageTemplate\"],\n      });\n    }\n    if (!data.followUpDelays?.firstAttemptHours) {\n      ctx.addIssue({\n        code: z.ZodIssueCode.custom,\n        message: \"Penundaan follow-up pertama (jam) diperlukan.\",\n        path: [\"followUpDelays\", \"firstAttemptHours\"],\n      });\n    }\n  }\n  if (data.enableHumanHandoff && (!data.humanAgentWhatsAppNumber || data.humanAgentWhatsAppNumber.trim() === \"\")) {\n    ctx.addIssue({\n      code: z.ZodIssueCode.custom,\n      message: \"Nomor WhatsApp Agen Manusia diperlukan jika notifikasi handoff aktif.\",\n      path: [\"humanAgentWhatsAppNumber\"],\n    });\n  }\n});\n\nexport type AiSettingsFormValues = z.infer<typeof AiSettingsFormSchema>;\nexport type FollowUpDelaysValues = z.infer<typeof FollowUpDelaysSchema>;\n\n\nexport const DEFAULT_AI_SETTINGS: AiSettingsFormValues = {\n  agentBehavior: \"Humoris & Santai\",\n  welcomeMessage: \"Selamat datang di QLAB Auto Detailing! Ada yang bisa saya bantu hari ini?\",\n  transferConditions: [\"Pelanggan Meminta Secara Eksplisit\", \"AI Tidak Menemukan Jawaban (Setelah 2x Coba)\"],\n  knowledgeBaseDescription: `Anda adalah asisten AI untuk QLAB Auto Detailing. Tugas utama Anda adalah membantu pelanggan dan staf. Gunakan tools yang tersedia untuk mencari informasi produk, layanan, klien, atau detail dari knowledge base. Prioritaskan penggunaan 'getKnowledgeBaseInfoTool' untuk pertanyaan umum atau detail kebijakan, dan 'getProductServiceDetailsByNameTool' untuk harga/durasi spesifik.`,\n  \n  enableHumanHandoff: false,\n  humanAgentWhatsAppNumber: '',\n\n  enableFollowUp: false,\n  followUpMessageTemplate: \"Halo Kak, kami perhatikan Anda sempat menghubungi kami beberapa waktu lalu. Apakah ada rencana untuk berkunjung ke bengkel kami? Ada promo menarik lho!\",\n  followUpDelays: {\n    firstAttemptHours: 24,\n    secondAttemptDays: 7,\n    thirdAttemptDays: 7,\n    fourthAttemptDays: 30,\n  },\n};\n    \n"],"names":[],"mappings":";;;;;;AACA;AAAA;;AAEO,MAAM,qBAAqB;IAChC;IACA;IACA;IACA;CACD;AAGM,MAAM,yBAAyB;IACpC;IACA;IACA;IACA;IACA;CACD;AAGD,MAAM,uBAAuB,iLAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACpC,mBAAmB,iLAAA,CAAA,IAAC,CAAC,UAAU,CAC7B,CAAC,MAAQ,AAAC,QAAQ,MAAM,QAAQ,aAAa,QAAQ,OAAQ,YAAY,SAAS,OAAO,MAAM,KAC/F,iLAAA,CAAA,IAAC,CAAC,MAAM,CAAC;QAAE,oBAAoB;IAAkB,GAAG,GAAG,CAAC,GAAG,kBAAkB,GAAG,CAAC,KAAK,8BAA8B,QAAQ;IAE9H,mBAAmB,iLAAA,CAAA,IAAC,CAAC,UAAU,CAC7B,CAAC,MAAQ,AAAC,QAAQ,MAAM,QAAQ,aAAa,QAAQ,OAAQ,YAAY,SAAS,OAAO,MAAM,KAC/F,iLAAA,CAAA,IAAC,CAAC,MAAM,CAAC;QAAE,oBAAoB;IAAmB,GAAG,GAAG,CAAC,GAAG,mBAAmB,GAAG,CAAC,IAAI,qBAAqB,QAAQ;IAEtH,kBAAkB,iLAAA,CAAA,IAAC,CAAC,UAAU,CAC5B,CAAC,MAAQ,AAAC,QAAQ,MAAM,QAAQ,aAAa,QAAQ,OAAQ,YAAY,SAAS,OAAO,MAAM,KAC/F,iLAAA,CAAA,IAAC,CAAC,MAAM,CAAC;QAAE,oBAAoB;IAAmB,GAAG,GAAG,CAAC,GAAG,mBAAmB,GAAG,CAAC,IAAI,qBAAqB,QAAQ;IAEtH,mBAAmB,iLAAA,CAAA,IAAC,CAAC,UAAU,CAC7B,CAAC,MAAQ,AAAC,QAAQ,MAAM,QAAQ,aAAa,QAAQ,OAAQ,YAAY,SAAS,OAAO,MAAM,KAC/F,iLAAA,CAAA,IAAC,CAAC,MAAM,CAAC;QAAE,oBAAoB;IAAmB,GAAG,GAAG,CAAC,GAAG,mBAAmB,GAAG,CAAC,IAAI,qBAAqB,QAAQ;AAExH;AAEO,MAAM,uBAAuB,iLAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC3C,eAAe,iLAAA,CAAA,IAAC,CAAC,IAAI,CAAC,oBAAoB;QACxC,gBAAgB;IAClB;IACA,gBAAgB,iLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,IAAI,6CAA6C,GAAG,CAAC,KAAK;IACzF,oBAAoB,iLAAA,CAAA,IAAC,CAAC,KAAK,CAAC,iLAAA,CAAA,IAAC,CAAC,IAAI,CAAC,yBAAyB,GAAG,CAAC,GAAG;IACnE,0BAA0B,iLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,OAAO,yDAAyD,QAAQ,GAAG,QAAQ,CAAC;IAE7H,oBAAoB,iLAAA,CAAA,IAAC,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,QAAQ,CAAC;IACxD,0BAA0B,iLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,KAAK,CAAC,2BAA2B,4EAA4E,QAAQ,GAAG,QAAQ,CAAC;IAEtK,gBAAgB,iLAAA,CAAA,IAAC,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,QAAQ,CAAC;IACpD,yBAAyB,iLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,KAAK,mDAAmD,QAAQ;IACxG,gBAAgB,qBAAqB,QAAQ;AAC/C,GAAG,WAAW,CAAC,CAAC,MAAM;IACpB,IAAI,KAAK,cAAc,EAAE;QACvB,IAAI,CAAC,KAAK,uBAAuB,IAAI,KAAK,uBAAuB,CAAC,IAAI,OAAO,IAAI;YAC/E,IAAI,QAAQ,CAAC;gBACX,MAAM,iLAAA,CAAA,IAAC,CAAC,YAAY,CAAC,MAAM;gBAC3B,SAAS;gBACT,MAAM;oBAAC;iBAA0B;YACnC;QACF;QACA,IAAI,CAAC,KAAK,cAAc,EAAE,mBAAmB;YAC3C,IAAI,QAAQ,CAAC;gBACX,MAAM,iLAAA,CAAA,IAAC,CAAC,YAAY,CAAC,MAAM;gBAC3B,SAAS;gBACT,MAAM;oBAAC;oBAAkB;iBAAoB;YAC/C;QACF;IACF;IACA,IAAI,KAAK,kBAAkB,IAAI,CAAC,CAAC,KAAK,wBAAwB,IAAI,KAAK,wBAAwB,CAAC,IAAI,OAAO,EAAE,GAAG;QAC9G,IAAI,QAAQ,CAAC;YACX,MAAM,iLAAA,CAAA,IAAC,CAAC,YAAY,CAAC,MAAM;YAC3B,SAAS;YACT,MAAM;gBAAC;aAA2B;QACpC;IACF;AACF;AAMO,MAAM,sBAA4C;IACvD,eAAe;IACf,gBAAgB;IAChB,oBAAoB;QAAC;QAAsC;KAA+C;IAC1G,0BAA0B,CAAC,yXAAyX,CAAC;IAErZ,oBAAoB;IACpB,0BAA0B;IAE1B,gBAAgB;IAChB,yBAAyB;IACzB,gBAAgB;QACd,mBAAmB;QACnB,mBAAmB;QACnB,kBAAkB;QAClB,mBAAmB;IACrB;AACF","debugId":null}},
    {"offset": {"line": 435, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firebase-admin.ts"],"sourcesContent":["\nimport * as admin from 'firebase-admin';\n\n// Minimal logging\nconsole.log(\"[firebase-admin.ts] Initializing Firebase Admin SDK...\");\n\nif (!admin.apps.length) {\n  try {\n    // When deployed to App Hosting or running with emulators (e.g., via `firebase emulators:start`),\n    // the SDK should auto-configure based on the environment.\n    // For local development outside emulators, you might need to set\n    // GOOGLE_APPLICATION_CREDENTIALS environment variable pointing to your service account key JSON file.\n    admin.initializeApp();\n    console.log('[firebase-admin.ts] Firebase Admin SDK initialized successfully.');\n    if (admin.instanceId()) { // Check if instanceId is available\n      console.log('[firebase-admin.ts] Firebase Admin App Name:', admin.app().name);\n    }\n  } catch (e:any) {\n    console.error('[firebase-admin.ts] Firebase Admin SDK initialization failed. Details:', e.message);\n    console.error('[firebase-admin.ts] Ensure your environment is configured correctly for Firebase Admin (e.g., GOOGLE_APPLICATION_CREDENTIALS for local dev, or running within a Firebase/GCP environment).');\n    // Depending on your error handling strategy, you might want to re-throw or handle this.\n    // For now, we'll let it proceed, but db/auth might be undefined.\n  }\n} else {\n  console.log('[firebase-admin.ts] Firebase Admin SDK already initialized. Using existing app.');\n}\n\nlet adminDb: admin.firestore.Firestore;\nlet adminAuth: admin.auth.Auth;\n\ntry {\n  adminDb = admin.firestore();\n  console.log('[firebase-admin.ts] Firestore Admin instance obtained.');\n} catch (e:any) {\n  console.error('[firebase-admin.ts] FAILED to get Firestore Admin instance:', e?.message);\n  // @ts-ignore\n  adminDb = undefined; \n}\n\ntry {\n  adminAuth = admin.auth();\n  console.log('[firebase-admin.ts] Auth Admin instance obtained.');\n} catch (e:any) {\n  console.error('[firebase-admin.ts] FAILED to get Auth Admin instance:', e?.message);\n  // @ts-ignore\n  adminAuth = undefined;\n}\n\n\nexport { adminDb, adminAuth };\n"],"names":[],"mappings":";;;;AACA;;AAEA,kBAAkB;AAClB,QAAQ,GAAG,CAAC;AAEZ,IAAI,CAAC,2HAAA,CAAA,OAAU,CAAC,MAAM,EAAE;IACtB,IAAI;QACF,iGAAiG;QACjG,0DAA0D;QAC1D,iEAAiE;QACjE,sGAAsG;QACtG,CAAA,GAAA,2HAAA,CAAA,gBAAmB,AAAD;QAClB,QAAQ,GAAG,CAAC;QACZ,IAAI,CAAA,GAAA,2HAAA,CAAA,aAAgB,AAAD,KAAK;YACtB,QAAQ,GAAG,CAAC,gDAAgD,CAAA,GAAA,2HAAA,CAAA,MAAS,AAAD,IAAI,IAAI;QAC9E;IACF,EAAE,OAAO,GAAO;QACd,QAAQ,KAAK,CAAC,0EAA0E,EAAE,OAAO;QACjG,QAAQ,KAAK,CAAC;IACd,wFAAwF;IACxF,iEAAiE;IACnE;AACF,OAAO;IACL,QAAQ,GAAG,CAAC;AACd;AAEA,IAAI;AACJ,IAAI;AAEJ,IAAI;IACF,UAAU,CAAA,GAAA,2HAAA,CAAA,YAAe,AAAD;IACxB,QAAQ,GAAG,CAAC;AACd,EAAE,OAAO,GAAO;IACd,QAAQ,KAAK,CAAC,+DAA+D,GAAG;IAChF,aAAa;IACb,UAAU;AACZ;AAEA,IAAI;IACF,YAAY,CAAA,GAAA,2HAAA,CAAA,OAAU,AAAD;IACrB,QAAQ,GAAG,CAAC;AACd,EAAE,OAAO,GAAO;IACd,QAAQ,KAAK,CAAC,0DAA0D,GAAG;IAC3E,aAAa;IACb,YAAY;AACd","debugId":null}},
    {"offset": {"line": 488, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/tools/extractMotorInfoTool.ts"],"sourcesContent":["\n'use server';\n/**\n * @fileOverview Genkit tool for extracting motorcycle information from text.\n * - extractMotorInfoTool - The Genkit tool definition.\n */\n\nimport { ai } from '@/ai/genkit';\nimport { z } from 'genkit';\nimport { adminDb } from '@/lib/firebase-admin'; // Pastikan file ini ada dan terkonfigurasi\n\n// Skema input untuk tool\nconst ExtractMotorInfoInputSchema = z.object({\n  text: z.string().describe('Teks dari pengguna yang mungkin berisi nama atau deskripsi motor.'),\n});\nexport type ExtractMotorInfoInput = z.infer<typeof ExtractMotorInfoInputSchema>;\n\n// Skema output untuk tool\nconst ExtractMotorInfoOutputSchema = z.object({\n  brand: z.string().describe('Merek motor yang terdeteksi.'),\n  model: z.string().describe('Model motor yang terdeteksi.'),\n  size: z.enum(['S', 'M', 'L', 'XL']).describe('Ukuran motor yang terdeteksi (S, M, L, XL).'),\n});\nexport type ExtractMotorInfoOutput = z.infer<typeof ExtractMotorInfoOutputSchema>;\n\n// Definisi tool Genkit\nexport const extractMotorInfoTool = ai.defineTool(\n  {\n    name: 'extractMotorInfoTool', // Nama tool di Genkit, bisa beda dari nama variabel\n    description: 'Mendeteksi merek, model, dan ukuran motor dari teks deskriptif pengguna dengan mencocokkan ke database tipe kendaraan.',\n    inputSchema: ExtractMotorInfoInputSchema,\n    outputSchema: ExtractMotorInfoOutputSchema,\n  },\n  async (input: ExtractMotorInfoInput): Promise<ExtractMotorInfoOutput> => {\n    const cleanText = input.text.toLowerCase().trim();\n    console.log(`[extractMotorInfoTool] Input text: \"${input.text}\", Cleaned text: \"${cleanText}\"`);\n\n    if (!cleanText) {\n      console.log('[extractMotorInfoTool] Input text is empty. Throwing error.');\n      throw new Error('Teks input kosong, tidak bisa mendeteksi motor.');\n    }\n\n    try {\n      const vehicleTypesSnapshot = await adminDb.collection('vehicleTypes').get();\n      console.log(`[extractMotorInfoTool] Raw snapshot size from 'vehicleTypes': ${vehicleTypesSnapshot.size}`);\n\n      if (vehicleTypesSnapshot.empty) {\n        console.log('[extractMotorInfoTool] Collection \"vehicleTypes\" is empty or does not exist in Firestore.');\n        throw new Error('Database tipe kendaraan kosong atau tidak ditemukan.');\n      }\n\n      const mappedVehicleTypes = vehicleTypesSnapshot.docs.map(doc => {\n        const data = doc.data();\n        const validationErrorMessages: string[] = [];\n\n        if (!data.brand || typeof data.brand !== 'string') {\n            validationErrorMessages.push('field \"brand\" is missing or not a string');\n        }\n        if (!data.model || typeof data.model !== 'string') {\n            validationErrorMessages.push('field \"model\" is missing or not a string');\n        }\n        if (!data.size || typeof data.size !== 'string' || !['S', 'M', 'L', 'XL'].includes(data.size)) {\n            validationErrorMessages.push('field \"size\" is missing, not a string, or not S/M/L/XL');\n        }\n        if (!data.aliases || !Array.isArray(data.aliases)) {\n            validationErrorMessages.push('field \"aliases\" is missing or not an array');\n        } else if (!data.aliases.every((a: any) => typeof a === 'string')) {\n            validationErrorMessages.push('field \"aliases\" contains non-string elements');\n        }\n\n        if (validationErrorMessages.length > 0) {\n            console.warn(`[extractMotorInfoTool] Dokumen ${doc.id} di 'vehicleTypes' GAGAL VALIDASI. Alasan: ${validationErrorMessages.join('; ')}. Data mentah: ${JSON.stringify(data)}. Dokumen ini akan dilewati.`);\n            return null; \n        }\n        \n        return {\n          id: doc.id,\n          brand: data.brand as string,\n          model: data.model as string,\n          size: data.size as 'S' | 'M' | 'L' | 'XL',\n          aliases: (data.aliases as string[]).map(alias => alias.toLowerCase()),\n        };\n      });\n      \n      console.log(`[extractMotorInfoTool] Mapped vehicle types (before filtering nulls): ${mappedVehicleTypes.length}`);\n      const allVehicleTypes = mappedVehicleTypes.filter(item => item !== null) as { id: string; brand: string; model: string; size: 'S' | 'M' | 'L' | 'XL'; aliases: string[]; }[];\n      \n      console.log(`[extractMotorInfoTool] Total valid vehicle types after filtering: ${allVehicleTypes.length}.`);\n\n      if (allVehicleTypes.length === 0) {\n        console.log('[extractMotorInfoTool] No valid vehicle types found after filtering. Check Firestore data format and console warnings above for details on invalid documents.');\n        throw new Error('Tidak ada data tipe kendaraan yang valid di database. Periksa format data di Firestore dan log peringatan di konsol.');\n      }\n\n      for (const vehicleType of allVehicleTypes) {\n        // console.log(`[extractMotorInfoTool] Checking vehicle: ${vehicleType.brand} ${vehicleType.model}, Aliases: ${vehicleType.aliases.join(', ')}`);\n        for (const alias of vehicleType.aliases) {\n          if (cleanText.includes(alias)) {\n            console.log(`[extractMotorInfoTool] !!! MATCH FOUND !!! Alias \"${alias}\" (from vehicle: ${vehicleType.brand} ${vehicleType.model}) found in cleaned text: \"${cleanText}\"`);\n            return {\n              brand: vehicleType.brand,\n              model: vehicleType.model,\n              size: vehicleType.size,\n            };\n          }\n        }\n      }\n\n      console.log('[extractMotorInfoTool] No match found for the input text after checking all vehicle types and aliases.');\n      throw new Error('Motor tidak dikenali dari teks yang diberikan. Pastikan alias di database mencakup variasi nama motor tersebut.');\n\n    } catch (error: any) {\n      console.error('[extractMotorInfoTool] Error during execution:', error);\n      if (error instanceof Error) {\n        throw new Error(`Kesalahan pada tool extractMotorInfo: ${error.message}`);\n      }\n      throw new Error(`Terjadi kesalahan internal pada tool extractMotorInfo: ${String(error)}`);\n    }\n  }\n);\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 615, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/cs-whatsapp-reply-flow.ts"],"sourcesContent":["\n'use server';\n/**\n * @fileOverview AI flow for WhatsApp customer service replies.\n * Integrates with Firestore settings for dynamic AI behavior.\n * - generateWhatsAppReply - Function to generate a draft reply.\n */\n\nimport { ai } from '@/ai/genkit';\nimport type { WhatsAppReplyInput, WhatsAppReplyOutput, ChatMessage } from '@/types/ai/cs-whatsapp-reply';\nimport { WhatsAppReplyInputSchema, WhatsAppReplyOutputSchema } from '@/types/ai/cs-whatsapp-reply';\nimport { z } from 'genkit';\nimport { DEFAULT_AI_SETTINGS, type AiSettingsFormValues } from '@/types/aiSettings';\nimport { format as formatDateFns, addDays } from 'date-fns';\nimport { doc, getDoc } from 'firebase/firestore';\nimport { db } from '@/lib/firebase';\nimport { extractMotorInfoTool } from '@/ai/tools/extractMotorInfoTool'; // Impor tool yang baru dibuat\n\nasync function getAiSettingsFromFirestore(): Promise<Partial<AiSettingsFormValues>> {\n  try {\n    const settingsDocRef = doc(db, 'appSettings', 'aiAgentConfig');\n    const docSnap = await getDoc(settingsDocRef);\n    if (docSnap.exists()) {\n      console.log(\"AI settings fetched from Firestore:\", docSnap.data());\n      return docSnap.data() as Partial<AiSettingsFormValues>;\n    }\n    console.log(\"No AI settings found in Firestore, using defaults.\");\n    return {};\n  } catch (error) {\n    console.error(\"Error fetching AI settings from Firestore:\", error);\n    return {}; // Fallback to empty object, defaults will apply\n  }\n}\n\nexport async function generateWhatsAppReply({ customerMessage, senderNumber, chatHistory }: { customerMessage: string; senderNumber?: string; chatHistory?: ChatMessage[] }): Promise<WhatsAppReplyOutput> {\n  const firestoreSettings = await getAiSettingsFromFirestore();\n  const agentSettings = { ...DEFAULT_AI_SETTINGS, ...firestoreSettings };\n  const now = new Date();\n\n  const flowInput: WhatsAppReplyInput = {\n    customerMessage,\n    senderNumber,\n    chatHistory: chatHistory || [],\n    agentBehavior: agentSettings.agentBehavior,\n    knowledgeBase: agentSettings.knowledgeBaseDescription,\n    currentDate: formatDateFns(now, 'yyyy-MM-dd'),\n    currentTime: formatDateFns(now, 'HH:mm'),\n    tomorrowDate: formatDateFns(addDays(now, 1), 'yyyy-MM-dd'),\n    dayAfterTomorrowDate: formatDateFns(addDays(now, 2), 'yyyy-MM-dd'),\n  };\n\n  console.log(\"generateWhatsAppReply input to flow (simplified):\", JSON.stringify(flowInput, null, 2));\n  const aiResponse = await whatsAppReplyFlowSimplified(flowInput);\n  return aiResponse;\n}\n\nconst promptZoya = `\nKamu adalah Zoya, Customer Service AI dari QLAB Moto Detailing.\n\nGaya bahasa:\n- Santai, temenan, kadang pakai bahasa gaul (contoh: \"bro\", \"kak\", \"mas\")\n- Tetap jelas, informatif, dan responsif\n\nTugas utama:\n1.  Tanggapi pertanyaan tentang layanan (cuci, coating, repaint, dll).\n2.  Tanyakan detail kalau input masih ambigu (contoh: doff atau glossy?).\n3.  Jika pelanggan menyebutkan jenis motornya secara spesifik (mis. \"motor saya NMAX\", \"Vario saya mau dicuci\", \"Nmax connected\"), gunakan tool 'extractMotorInfoTool' dengan input berupa teks dari pesan pelanggan yang relevan untuk mendeteksi merek, model, dan ukuran motor tersebut.\n    *   Contoh penggunaan tool: Jika pelanggan bilang \"NMAX baru saya mau coating\", panggil tool 'extractMotorInfoTool' dengan input: \\`{ \"text\": \"NMAX baru saya\" }\\`.\n    *   Jika tool berhasil, Anda akan mendapatkan informasi seperti: \\`{ \"brand\": \"Yamaha\", \"model\": \"NMAX\", \"size\": \"M\" }\\`. Gunakan informasi ini (terutama ukuran) untuk membantu menjawab pertanyaan terkait layanan dan harga jika relevan.\n    *   Jika tool mengembalikan error seperti 'Motor tidak dikenali', informasikan pelanggan bahwa Anda belum bisa mengidentifikasi motornya dan mungkin minta mereka untuk menyebutkan modelnya lebih jelas.\n4.  Setelah mengetahui jenis motor (dari tool 'extractMotorInfoTool' jika ada, atau jika pelanggan menyebutkannya langsung dan tool tidak dipanggil/gagal), tawarkan layanan yang cocok. Jika ada info harga/promo dari \"Panduan Umum Knowledge Base\" atau pengetahuan umum Anda yang relevan dengan jenis/ukuran motor, sampaikan. Jika tidak, minta pelanggan untuk info lebih lanjut atau datang langsung.\n5.  Ajak user booking jika tertarik.\n6.  (Booking saat ini belum bisa diproses AI sepenuhnya) Jika user mau booking, minta data standar (nama, no HP, tanggal, jam) dan informasikan bahwa staf CS akan segera menghubungi untuk konfirmasi final.\n7.  (Konfirmasi dan penyimpanan ke DB saat ini belum bisa diproses AI) Jika user mau booking, informasikan bahwa staf CS akan segera menghubungi untuk konfirmasi final dan pencatatan.\n\nJika Anda tidak yakin dengan informasi spesifik (seperti harga pasti atau ketersediaan detail jika tidak ada di Panduan Umum Knowledge Base) atau jika fitur booking belum bisa Anda proses sepenuhnya, sampaikan dengan jujur dan sopan, dan sarankan pelanggan untuk menghubungi langsung atau datang ke bengkel untuk detail lebih lanjut.\n\nGunakan informasi dari \"Panduan Umum Knowledge Base\" di bawah ini sebagai sumber informasi utama Anda jika relevan.\nPanduan Umum Knowledge Base: {{{knowledgeBase}}}\n\nKonteks Tambahan:\nTanggal Saat Ini: {{{currentDate}}}, Waktu Saat Ini: {{{currentTime}}}.\nBesok: {{{tomorrowDate}}}. Lusa: {{{dayAfterTomorrowDate}}}.\n\nRiwayat Percakapan Sebelumnya (jika ada):\n{{#if chatHistory.length}}\n{{#each chatHistory}}\n  {{this.role}}: {{{this.content}}}\n{{/each}}\n{{/if}}\n\nPESAN PELANGGAN TERBARU:\nuser: {{{customerMessage}}}\n\nFORMAT BALASAN (SANGAT PENTING):\nBalasan ANDA HARUS SELALU berupa objek JSON dengan satu field bernama \"suggestedReply\" yang berisi teks balasan Anda.\nContoh balasan JSON: {\"suggestedReply\": \"Oke, siap Kak! Untuk repaint body Vario biayanya sekitar Rp X. Mau sekalian booking?\"}\nHasilkan hanya objek JSON sebagai balasan Anda.\n`\n\nconst replyPromptSimplified = ai.definePrompt({\n  name: 'whatsAppReplyPromptSimplified',\n  input: { schema: WhatsAppReplyInputSchema },\n  output: { schema: WhatsAppReplyOutputSchema },\n  tools: [extractMotorInfoTool], // Tambahkan tool baru di sini\n  prompt: promptZoya // Menggunakan prompt yang sudah didefinisikan\n});\n\nconst whatsAppReplyFlowSimplified = ai.defineFlow(\n  {\n    name: 'whatsAppReplyFlowSimplified',\n    inputSchema: WhatsAppReplyInputSchema,\n    outputSchema: WhatsAppReplyOutputSchema,\n  },\n  async (input: WhatsAppReplyInput) => {\n    console.log(\"whatsAppReplyFlowSimplified input:\", JSON.stringify(input, null, 2));\n    const { output } = await replyPromptSimplified(input);\n    if (!output) throw new Error('Gagal mendapatkan saran balasan dari AI.');\n    console.log(\"whatsAppReplyFlowSimplified output:\", output);\n    return output;\n  }\n);\n"],"names":[],"mappings":";;;;;AAEA;;;;CAIC,GAED;AAEA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AACA,mPAAwE,8BAA8B;;;;;;;;;;;AAEtG,eAAe;IACb,IAAI;QACF,MAAM,iBAAiB,CAAA,GAAA,iKAAA,CAAA,MAAG,AAAD,EAAE,sHAAA,CAAA,KAAE,EAAE,eAAe;QAC9C,MAAM,UAAU,MAAM,CAAA,GAAA,iKAAA,CAAA,SAAM,AAAD,EAAE;QAC7B,IAAI,QAAQ,MAAM,IAAI;YACpB,QAAQ,GAAG,CAAC,uCAAuC,QAAQ,IAAI;YAC/D,OAAO,QAAQ,IAAI;QACrB;QACA,QAAQ,GAAG,CAAC;QACZ,OAAO,CAAC;IACV,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,8CAA8C;QAC5D,OAAO,CAAC,GAAG,gDAAgD;IAC7D;AACF;AAEO,eAAe,sBAAsB,EAAE,eAAe,EAAE,YAAY,EAAE,WAAW,EAAmF;IACzK,MAAM,oBAAoB,MAAM;IAChC,MAAM,gBAAgB;QAAE,GAAG,0HAAA,CAAA,sBAAmB;QAAE,GAAG,iBAAiB;IAAC;IACrE,MAAM,MAAM,IAAI;IAEhB,MAAM,YAAgC;QACpC;QACA;QACA,aAAa,eAAe,EAAE;QAC9B,eAAe,cAAc,aAAa;QAC1C,eAAe,cAAc,wBAAwB;QACrD,aAAa,CAAA,GAAA,sJAAA,CAAA,SAAa,AAAD,EAAE,KAAK;QAChC,aAAa,CAAA,GAAA,sJAAA,CAAA,SAAa,AAAD,EAAE,KAAK;QAChC,cAAc,CAAA,GAAA,sJAAA,CAAA,SAAa,AAAD,EAAE,CAAA,GAAA,uIAAA,CAAA,UAAO,AAAD,EAAE,KAAK,IAAI;QAC7C,sBAAsB,CAAA,GAAA,sJAAA,CAAA,SAAa,AAAD,EAAE,CAAA,GAAA,uIAAA,CAAA,UAAO,AAAD,EAAE,KAAK,IAAI;IACvD;IAEA,QAAQ,GAAG,CAAC,qDAAqD,KAAK,SAAS,CAAC,WAAW,MAAM;IACjG,MAAM,aAAa,MAAM,4BAA4B;IACrD,OAAO;AACT;AAEA,MAAM,aAAa,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CpB,CAAC;AAED,MAAM,wBAAwB,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC5C,MAAM;IACN,OAAO;QAAE,QAAQ,6IAAA,CAAA,2BAAwB;IAAC;IAC1C,QAAQ;QAAE,QAAQ,6IAAA,CAAA,4BAAyB;IAAC;IAC5C,OAAO;QAAC,0IAAA,CAAA,uBAAoB;KAAC;IAC7B,QAAQ,WAAW,8CAA8C;AACnE;AAEA,MAAM,8BAA8B,mHAAA,CAAA,KAAE,CAAC,UAAU,CAC/C;IACE,MAAM;IACN,aAAa,6IAAA,CAAA,2BAAwB;IACrC,cAAc,6IAAA,CAAA,4BAAyB;AACzC,GACA,OAAO;IACL,QAAQ,GAAG,CAAC,sCAAsC,KAAK,SAAS,CAAC,OAAO,MAAM;IAC9E,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM,sBAAsB;IAC/C,IAAI,CAAC,QAAQ,MAAM,IAAI,MAAM;IAC7B,QAAQ,GAAG,CAAC,uCAAuC;IACnD,OAAO;AACT;;;IAtFoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 758, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/%28app%29/ai-cs-assistant/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {generateWhatsAppReply as '4053660f6447b38038e1d20965a3df3cd57a2a7b51'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 822, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28app%29/ai-cs-assistant/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(app)/ai-cs-assistant/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(app)/ai-cs-assistant/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA0S,GACvU,wEACA","debugId":null}},
    {"offset": {"line": 836, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28app%29/ai-cs-assistant/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(app)/ai-cs-assistant/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(app)/ai-cs-assistant/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAsR,GACnT,oDACA","debugId":null}},
    {"offset": {"line": 850, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}