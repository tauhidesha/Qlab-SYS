{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firebase.ts"],"sourcesContent":["\nimport { initializeApp, getApp, getApps, type FirebaseApp } from \"firebase/app\";\nimport { getFirestore, type Firestore } from \"firebase/firestore\";\n\n// Minimal logging\nconsole.log(\"[firebase.ts] Initializing Firebase...\");\n\nconst firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n};\n\nif (!firebaseConfig.projectId || !firebaseConfig.apiKey) {\n  console.error(\"[firebase.ts] FATAL ERROR: Firebase projectId or apiKey is MISSING in environment variables.\");\n}\n\nlet app: FirebaseApp;\nlet db: Firestore;\n\nif (getApps().length === 0) {\n  try {\n    app = initializeApp(firebaseConfig);\n    console.log(\"[firebase.ts] Firebase app initialized. Project ID:\", app.options.projectId);\n  } catch (e: any) {\n    console.error(\"[firebase.ts] FAILED to initialize Firebase app:\", e.message);\n    // @ts-ignore\n    app = null;\n  }\n} else {\n  app = getApp();\n  console.log(\"[firebase.ts] Using existing Firebase app. Project ID:\", app.options.projectId);\n}\n\n// @ts-ignore\nif (app) {\n  try {\n    // @ts-ignore\n    db = getFirestore(app);\n    console.log(\"[firebase.ts] Firestore instance obtained.\");\n  } catch (e: any) {\n    console.error(\"[firebase.ts] FAILED to get Firestore instance:\", e?.message);\n  }\n} else {\n    console.error(\"[firebase.ts] Firebase app not properly initialized, cannot get Firestore.\");\n}\n\nexport { app, db };\n"],"names":[],"mappings":";;;;AACA;AAAA;AACA;AAAA;;;AAEA,kBAAkB;AAClB,QAAQ,GAAG,CAAC;AAEZ,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;AACP;AAEA,IAAI,CAAC,eAAe,SAAS,IAAI,CAAC,eAAe,MAAM,EAAE;IACvD,QAAQ,KAAK,CAAC;AAChB;AAEA,IAAI;AACJ,IAAI;AAEJ,IAAI,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,KAAK,GAAG;IAC1B,IAAI;QACF,MAAM,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE;QACpB,QAAQ,GAAG,CAAC,uDAAuD,IAAI,OAAO,CAAC,SAAS;IAC1F,EAAE,OAAO,GAAQ;QACf,QAAQ,KAAK,CAAC,oDAAoD,EAAE,OAAO;QAC3E,aAAa;QACb,MAAM;IACR;AACF,OAAO;IACL,MAAM,CAAA,GAAA,oLAAA,CAAA,SAAM,AAAD;IACX,QAAQ,GAAG,CAAC,0DAA0D,IAAI,OAAO,CAAC,SAAS;AAC7F;AAEA,aAAa;AACb,IAAI,KAAK;IACP,IAAI;QACF,aAAa;QACb,KAAK,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE;QAClB,QAAQ,GAAG,CAAC;IACd,EAAE,OAAO,GAAQ;QACf,QAAQ,KAAK,CAAC,mDAAmD,GAAG;IACtE;AACF,OAAO;IACH,QAAQ,KAAK,CAAC;AAClB","debugId":null}},
    {"offset": {"line": 264, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["\nimport '@/lib/firebase'; // Ensure Firebase is initialized early\nimport {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai'; // Impor plugin Google AI\n\nif (!process.env.GOOGLE_API_KEY) {\n  const errorMessage = \"Kesalahan Konfigurasi: GOOGLE_API_KEY tidak ditemukan di environment variables. Ini dibutuhkan oleh plugin Google AI. Pastikan sudah di-set di file .env Anda.\";\n  console.error(`\\n\\n🛑 ${errorMessage}\\n\\n`);\n  throw new Error(errorMessage);\n}\n\nexport const ai = genkit({\n  plugins: [\n    googleAI(), // Gunakan plugin Google AI\n  ],\n  model: 'googleai/gemini-1.5-flash-latest', // Model diubah ke Gemini 1.5 Flash terbaru\n  // Opsi telemetry tidak lagi dikonfigurasi di sini untuk Genkit v1.x\n  // Jika butuh logging, konfigurasi dilakukan secara berbeda atau via environment.\n});\n\n"],"names":[],"mappings":";;;AACA,8MAAyB,uCAAuC;AAChE;AAAA;AACA,8TAA8C,yBAAyB;AAAvE;;;;AAEA,IAAI,CAAC,QAAQ,GAAG,CAAC,cAAc,EAAE;IAC/B,MAAM,eAAe;IACrB,QAAQ,KAAK,CAAC,CAAC,OAAO,EAAE,aAAa,IAAI,CAAC;IAC1C,MAAM,IAAI,MAAM;AAClB;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QACP,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KACR;IACD,OAAO;AAGT","debugId":null}},
    {"offset": {"line": 292, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/types/ai/cs-whatsapp-reply.ts"],"sourcesContent":["\nimport { z } from 'genkit';\n\nexport const ChatMessageSchema = z.object({\n  role: z.enum(['user', 'model']), \n  content: z.string(),\n});\nexport type ChatMessage = z.infer<typeof ChatMessageSchema>;\n\nexport const WhatsAppReplyInputSchema = z.object({\n  customerMessage: z.string().describe('Pesan yang diterima dari pelanggan melalui WhatsApp, atau pertanyaan dari staf CS.'),\n  senderNumber: z.string().optional().describe('Nomor WhatsApp pengirim pesan (pelanggan).'),\n  chatHistory: z.array(ChatMessageSchema).optional().describe('Riwayat percakapan sebelumnya antara pelanggan dan AI/staf CS.'),\n  agentBehavior: z.string().optional().describe('Perilaku agen AI yang diinginkan, mis. \"Ramah & Membantu\".'),\n  knowledgeBase: z.string().optional().describe('Panduan tingkat tinggi untuk AI. Detail pengetahuan spesifik akan diambil melalui tools.'),\n  currentDate: z.string().optional().describe('Tanggal saat ini dalam format YYYY-MM-DD. Berguna untuk konteks booking.'),\n  currentTime: z.string().optional().describe('Waktu saat ini dalam format HH:MM (24 jam). Berguna untuk konteks booking.'),\n  tomorrowDate: z.string().optional().describe('Tanggal besok dalam format YYYY-MM-DD. Berguna untuk konteks booking.'),\n  dayAfterTomorrowDate: z.string().optional().describe('Tanggal lusa (besoknya besok) dalam format YYYY-MM-DD. Berguna untuk konteks booking.'),\n  mainPromptString: z.string().optional().describe('String prompt utama yang diambil dari pengaturan.'), // Field baru\n});\nexport type WhatsAppReplyInput = z.infer<typeof WhatsAppReplyInputSchema>;\n\nexport const WhatsAppReplyOutputSchema = z.object({\n  suggestedReply: z.string().describe('Saran balasan yang dihasilkan AI untuk dikirim ke pelanggan.'),\n});\nexport type WhatsAppReplyOutput = z.infer<typeof WhatsAppReplyOutputSchema>;\n    \n"],"names":[],"mappings":";;;;;AACA;AAAA;;AAEO,MAAM,oBAAoB,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACxC,MAAM,uIAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAQ;KAAQ;IAC9B,SAAS,uIAAA,CAAA,IAAC,CAAC,MAAM;AACnB;AAGO,MAAM,2BAA2B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC/C,iBAAiB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACrC,cAAc,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;IAC7C,aAAa,uIAAA,CAAA,IAAC,CAAC,KAAK,CAAC,mBAAmB,QAAQ,GAAG,QAAQ,CAAC;IAC5D,eAAe,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;IAC9C,eAAe,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;IAC9C,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;IAC5C,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;IAC5C,cAAc,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;IAC7C,sBAAsB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;IACrD,kBAAkB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;AACnD;AAGO,MAAM,4BAA4B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAChD,gBAAgB,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACtC","debugId":null}},
    {"offset": {"line": 328, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/types/aiSettings.ts"],"sourcesContent":["\nimport { z } from 'zod';\n\nexport const AI_AGENT_BEHAVIORS = [\n  \"Ramah & Membantu\",\n  \"Profesional & To-the-point\",\n  \"Humoris & Santai\",\n  \"Empatik & Sabar\",\n] as const;\nexport type AiAgentBehavior = typeof AI_AGENT_BEHAVIORS[number];\n\nexport const AI_TRANSFER_CONDITIONS = [\n  \"Pelanggan Meminta Secara Eksplisit\",\n  \"AI Tidak Menemukan Jawaban (Setelah 2x Coba)\",\n  \"Terdeteksi Emosi Negatif dari Pelanggan\",\n  \"Disebut Kata Kunci Eskalasi (mis. 'manajer', 'komplain')\",\n  \"Setelah 5 Pertanyaan Tanpa Solusi\",\n] as const;\nexport type AiTransferCondition = typeof AI_TRANSFER_CONDITIONS[number];\n\nconst FollowUpDelaysSchema = z.object({\n  firstAttemptHours: z.preprocess(\n    (val) => (val === \"\" || val === undefined || val === null) ? undefined : parseInt(String(val), 10),\n    z.number({ invalid_type_error: \"Jam harus angka.\"}).min(1, \"Minimal 1 jam.\").max(168, \"Maksimal 168 jam (7 hari).\").optional()\n  ),\n  secondAttemptDays: z.preprocess(\n    (val) => (val === \"\" || val === undefined || val === null) ? undefined : parseInt(String(val), 10),\n    z.number({ invalid_type_error: \"Hari harus angka.\"}).min(1, \"Minimal 1 hari.\").max(30, \"Maksimal 30 hari.\").optional()\n  ),\n  thirdAttemptDays: z.preprocess(\n    (val) => (val === \"\" || val === undefined || val === null) ? undefined : parseInt(String(val), 10),\n    z.number({ invalid_type_error: \"Hari harus angka.\"}).min(1, \"Minimal 1 hari.\").max(30, \"Maksimal 30 hari.\").optional()\n  ),\n  fourthAttemptDays: z.preprocess(\n    (val) => (val === \"\" || val === undefined || val === null) ? undefined : parseInt(String(val), 10),\n    z.number({ invalid_type_error: \"Hari harus angka.\"}).min(1, \"Minimal 1 hari.\").max(90, \"Maksimal 90 hari.\").optional()\n  ),\n});\n\nexport const AiSettingsFormSchema = z.object({\n  agentBehavior: z.enum(AI_AGENT_BEHAVIORS, {\n    required_error: \"Perilaku agen AI harus dipilih.\",\n  }),\n  welcomeMessage: z.string().min(10, \"Pesan selamat datang minimal 10 karakter.\").max(300, \"Pesan selamat datang maksimal 300 karakter.\"),\n  transferConditions: z.array(z.enum(AI_TRANSFER_CONDITIONS)).min(1, \"Minimal satu kondisi transfer harus dipilih.\"),\n  knowledgeBaseDescription: z.string().max(10000, \"Deskripsi sumber pengetahuan maksimal 10000 karakter.\").optional().describe(\"Panduan tingkat tinggi untuk AI. Detail pengetahuan akan diambil melalui tools.\"),\n  \n  enableHumanHandoff: z.boolean().default(false).describe(\"Aktifkan notifikasi ke agen manusia jika AI perlu bantuan.\"),\n  humanAgentWhatsAppNumber: z.string().regex(/^\\+?[0-9\\s-]{10,18}$|^$/, \"Format nomor WhatsApp agen tidak valid (mis. +628123456789 atau kosong).\").optional().describe(\"Nomor WhatsApp agen manusia untuk notifikasi handoff.\"),\n\n  enableFollowUp: z.boolean().default(false).describe(\"Aktifkan fitur follow-up otomatis untuk pelanggan yang pernah menghubungi via WhatsApp namun belum melakukan kunjungan atau transaksi. Follow-up berhenti jika pelanggan tercatat datang/bertransaksi.\"),\n  followUpMessageTemplate: z.string().max(300, \"Template pesan follow-up maksimal 300 karakter.\").optional(),\n  followUpDelays: FollowUpDelaysSchema.optional(),\n  mainPrompt: z.string().min(100, \"Prompt utama minimal 100 karakter.\").max(15000, \"Prompt utama maksimal 15000 karakter.\").optional().describe(\"Prompt utama yang mengarahkan perilaku dan logika Zoya.\"),\n}).superRefine((data, ctx) => {\n  if (data.enableFollowUp) {\n    if (!data.followUpMessageTemplate || data.followUpMessageTemplate.trim() === \"\") {\n      ctx.addIssue({\n        code: z.ZodIssueCode.custom,\n        message: \"Template pesan follow-up diperlukan jika fitur follow-up aktif.\",\n        path: [\"followUpMessageTemplate\"],\n      });\n    }\n    if (!data.followUpDelays?.firstAttemptHours) {\n      ctx.addIssue({\n        code: z.ZodIssueCode.custom,\n        message: \"Penundaan follow-up pertama (jam) diperlukan.\",\n        path: [\"followUpDelays\", \"firstAttemptHours\"],\n      });\n    }\n  }\n  if (data.enableHumanHandoff && (!data.humanAgentWhatsAppNumber || data.humanAgentWhatsAppNumber.trim() === \"\")) {\n    ctx.addIssue({\n      code: z.ZodIssueCode.custom,\n      message: \"Nomor WhatsApp Agen Manusia diperlukan jika notifikasi handoff aktif.\",\n      path: [\"humanAgentWhatsAppNumber\"],\n    });\n  }\n});\n\nexport type AiSettingsFormValues = z.infer<typeof AiSettingsFormSchema>;\nexport type FollowUpDelaysValues = z.infer<typeof FollowUpDelaysSchema>;\n\n// Default Main Prompt - diambil dari prompt terakhir yang kamu berikan\nconst DEFAULT_MAIN_PROMPT_ZOYA = `\nKamu adalah Zoya, Customer Service AI dari QLAB Moto Detailing.\n\n🎯 Gaya Bahasa:\n- Santai dan akrab, kayak ngobrol sama temen tongkrongan.\n- Gunakan sapaan seperti \"bro\", \"kak\", atau \"mas\".\n- Tetap informatif, jelas, dan cepat nangkep maksud pelanggan.\n\n🛠 Tool yang Bisa Kamu Pakai:\n1. 'extractMotorInfoTool': Deteksi jenis motor dan ukurannya dari teks.\n   Input: {\"text\": \"deskripsi motor\"}\n   Output: {\"brand\": \"...\", \"model\": \"...\", \"size\": \"S/M/L/XL\"}\n\n2. 'searchServiceByKeywordTool': Cari detail layanan berdasarkan kata kunci + ukuran motor (optional) + jenis cat (optional)\n   Input: {\"keyword\": \"...\", \"size\": \"...\", \"paintType\": \"doff/glossy\"}\n   Output: {\"name\": \"...\", \"description\": \"...\", \"price\": ..., \"duration\": \"...\", \"variantMatched\": \"...\"}\n\n3. 'createBookingTool': Catat booking.\n   Input: {\n     customerName, customerPhone, clientId,\n     serviceId, serviceName,\n     vehicleInfo, bookingDate, bookingTime,\n     estimatedDuration, notes\n   }\n\n🧠 Logika Utama:\n\n1. **Kalau pelanggan menyebut jenis motor (kayak \"nmax\", \"xmax\", \"supra\", dll)**:\n   - Langsung panggil 'extractMotorInfoTool' dengan input \\`{\"text\": customerMessage}\\`\n   - Simpan hasilnya untuk dipakai di langkah selanjutnya (khususnya size)\n\n2. **Kalau pelanggan nanya tentang coating**:\n   - Selalu pastikan dulu data motor dan cat (doff/glossy)\n   - Kalau belum disebut:\n     - Belum jelas motor & cat → tanya: \"Motornya apa nih? Doff atau glossy, bro?\"\n     - Motor doang → tanya: \"Oke bro, motornya {{model}} ya. Catnya doff atau glossy, bro?\"\n     - Cat doang → tanya: \"Sip, coating doff ya. Motornya apa nih, bro?\"\n   - Kalau **motor & cat udah jelas**:\n     - Panggil 'extractMotorInfoTool' (jika belum dan size belum diketahui dari histori)\n     - Panggil 'searchServiceByKeywordTool' dengan keyword \"coating\" + size (dari extractMotorInfoTool atau histori) + paintType.\n     - Kalau dapet harga (field 'price' ada dan bukan 0 atau null) → kasih info detail (nama layanan, harga, durasi) + tawarkan booking.\n     - Kalau TIDAK dapet harga (field 'price' undefined/null/0 dan bukan gratis) dari tool → SANGAT PENTING: JANGAN bilang \"sebentar aku cek\" lagi. LANGSUNG informasikan bahwa harga spesifik belum ketemu, tapi bisa kasih gambaran umum layanannya (ambil dari deskripsi jika ada). Misal: \"Untuk coating NMAX doff, deskripsinya sih [deskripsi layanan]. Tapi buat harga pastinya, Zoya belum nemu nih bro, mungkin tergantung kondisi motornya juga. Mau Zoya bantu tanyain ke tim CS langsung?\" atau \"Coating NMAX doff ya, bro. Detailnya sih [deskripsi]. Untuk harganya Zoya belum dapet info pasti nih, biasanya tergantung ukuran & kondisi motor. Mau dibantu booking dulu aja biar nanti dikonfirmasi tim kami?\"\n\n3. **Kalau pelanggan nanya layanan lain (cuci, detailing, poles, repaint, dll)**:\n   - Cek apakah menyebut motor → panggil 'extractMotorInfoTool' jika ada dan size belum diketahui.\n   - Panggil 'searchServiceByKeywordTool' dengan keyword sesuai + size (jika ada dari extractMotorInfoTool atau histori).\n   - Kalau dapet harga → langsung kasih info detail (nama layanan, harga, durasi) + tawarkan booking.\n   - Kalau cuma dapet deskripsi (TIDAK dapet harga dari tool) → kasih deskripsi + tanya motornya buat bisa kasih info harga (jika size belum diketahui). Jika size sudah diketahui tapi harga tetap tidak ada, sampaikan seperti poin 2 (harga tidak ketemu).\n\n4. **Kalau pelanggan mau booking** (atau menyebutkan niat booking seperti \"mau booking\", \"jadwalin dong\", atau memberikan info tanggal/jam):\n   - **Cek & Ekstrak Info dari Pesan Pelanggan & Riwayat:**\n     *   Nama Pelanggan? (Dari histori atau 'senderName' jika ada)\n     *   No HP? (Dari histori atau 'senderNumber' jika ada)\n     *   Jenis Motor? (Dari hasil 'extractMotorInfoTool' sebelumnya, atau dari histori/pesan pelanggan)\n     *   Layanan? (Dari hasil 'searchServiceByKeywordTool' sebelumnya, atau dari histori/pesan pelanggan. Ingat untuk dapatkan 'serviceId' dan 'serviceName' yang tepat.)\n     *   Tanggal & Jam?\n         -   Kalau pelanggan bilang 'hari ini', isi Tanggal dengan '{{{currentDate}}}'. Formatnya harus YYYY-MM-DD. (Contoh: jika {{{currentDate}}} adalah '18/06/2024', ubah jadi '2024-06-18').\n         -   Kalau pelanggan bilang 'besok', isi Tanggal dengan '{{{tomorrowDate}}}'. Formatnya harus YYYY-MM-DD.\n         -   Kalau pelanggan bilang 'lusa', isi Tanggal dengan '{{{dayAfterTomorrowDate}}}'. Formatnya harus YYYY-MM-DD.\n         -   Kalau pelanggan sebut jam spesifik (mis. 'jam 5 sore', 'jam 10 pagi', 'jam 14.30'):\n             -   'jam 5 sore' -> Jam: '17:00'\n             -   'jam 10 pagi' -> Jam: '10:00'\n             -   'jam 2 siang' -> Jam: '14:00'\n             -   'jam 7 malam' -> Jam: '19:00'\n             -   'jam 14.30' -> Jam: '14:30'\n             -   Jika hanya jam tanpa keterangan hari, dan belum ada tanggal, asumsikan 'hari ini' (gunakan '{{{currentDate}}}' yang sudah diformat YYYY-MM-DD).\n         -   Jika pelanggan menyebut tanggal dan bulan (mis. \"17 Agustus\"), coba pahami dan format ke YYYY-MM-DD. Jika ragu, tanyakan tahunnya atau konfirmasi.\n   - **Formulasikan Pertanyaan (Jika Info Kurang):**\n     *   Sebutkan dulu info yang SUDAH kamu pahami.\n     *   Contoh jika layanan, motor, tanggal, jam sudah ada: \"Oke bro, NMAX doff buat coating ya, hari ini ({DD/MM/YYYY}) jam 17:00. Boleh minta Nama sama No HP-nya buat konfirmasi booking?\" (Ganti {DD/MM/YYYY} dengan tanggal sebenarnya dari {{{currentDate}}})\n     *   Contoh jika hanya layanan & motor: \"Sip, coating buat NMAX doff ya. Mau booking tanggal dan jam berapa nih, bro? Sekalian Nama sama No HP-nya ya.\"\n     *   Contoh jika banyak kurang: \"Oke bro, untuk bookingnya, Zoya butuh info ini ya:\\\\nNama : [isi jika sudah tahu]\\\\nNo HP : [isi jika sudah tahu]\\\\nLayanan : [isi jika sudah tahu]\\\\nTanggal : [isi jika sudah tahu dari 'hari ini/besok/lusa']\\\\nJam kedatangan : [isi jika sudah tahu]\\\\nJenis Motor : [isi jika sudah tahu]\"\n   - **Jika Semua Info Sudah Lengkap**:\n     *   Panggil tool 'createBookingTool' dengan semua data yang telah terkumpul.\n     *   Pastikan 'bookingDate' dalam format YYYY-MM-DD dan 'bookingTime' dalam format HH:MM.\n     *   'serviceId' dan 'serviceName' ambil dari hasil pencarian layanan sebelumnya.\n     *   'vehicleInfo' gabungkan informasi motor (mis. \"NMAX Merah Doff\").\n     *   Kalau sukses → balas: \"Sip bro, booking kamu udah Zoya catat ya. Jadwalnya: [Nama Layanan] untuk [Jenis Motor] pada tanggal [Tanggal Booking format DD MMMM YYYY] jam [Jam Booking]. 👍\"\n     *   Kalau gagal → minta maaf, arahkan ke CS manusia.\n\n📌 **Catatan Tambahan:**\n- Usahakan jawab dengan data real dari tools, jangan ngarang kalau tool belum kasih data.\n- Kalau info belum lengkap dari pelanggan, pancing dengan gaya ngobrol santai.\n- Kalau ada pertanyaan yang di luar kapasitas kamu, jawab kayak gini:\n  > \"Waduh, ini agak di luar kepala gue bro... Zoya bantu terusin ke tim CS ya. #unanswered\"\n\n📤 Output HARUS dalam format JSON:\nContoh:\n{ \"suggestedReply\": \"Oke bro, untuk coating doff ukuran M harganya 400rb. Mau sekalian booking?\" }\n\n📩 Chat Pelanggan:\nuser: {{{customerMessage}}}\n\n📚 Riwayat Sebelumnya:\n{{#if chatHistory.length}}\n{{#each chatHistory}}\n{{this.role}}: {{this.content}}\n{{/each}}\n{{/if}}\n\n🕒 Tanggal hari ini: {{{currentDate}}}, waktu: {{{currentTime}}}\nBesok: {{{tomorrowDate}}}, Lusa: {{{dayAfterTomorrowDate}}}\n`;\n\n\nexport const DEFAULT_AI_SETTINGS: AiSettingsFormValues = {\n  agentBehavior: \"Humoris & Santai\",\n  welcomeMessage: \"Halo bro! Zoya di sini, siap bantu seputar QLAB Moto Detailing. Ada yang bisa Zoya bantu?\",\n  transferConditions: [\"Pelanggan Meminta Secara Eksplisit\"],\n  knowledgeBaseDescription: `Anda adalah asisten AI untuk QLAB Moto Detailing. Tugas utama Anda adalah membantu pelanggan dan staf. Gunakan tools yang tersedia untuk mencari informasi produk, layanan, klien, atau detail dari knowledge base. Prioritaskan penggunaan 'getKnowledgeBaseInfoTool' untuk pertanyaan umum atau detail kebijakan, dan 'searchServiceByKeywordTool' untuk harga/durasi spesifik.`,\n  mainPrompt: DEFAULT_MAIN_PROMPT_ZOYA,\n  enableHumanHandoff: false,\n  humanAgentWhatsAppNumber: '',\n  enableFollowUp: false,\n  followUpMessageTemplate: \"Halo Kak, kami perhatikan Anda sempat menghubungi kami beberapa waktu lalu. Apakah ada rencana untuk berkunjung ke bengkel kami? Ada promo menarik lho!\",\n  followUpDelays: {\n    firstAttemptHours: 24,\n    secondAttemptDays: 7,\n    thirdAttemptDays: 7,\n    fourthAttemptDays: 30,\n  },\n};\n    \n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 538, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/cs-whatsapp-reply-flow.ts"],"sourcesContent":["\n'use server';\n/**\n * @fileOverview AI flow for WhatsApp customer service replies,\n * using direct Firestore lookups for context and dynamic system prompt generation.\n */\n\nimport { ai } from '@/ai/genkit';\nimport { z } from 'genkit';\nimport type { WhatsAppReplyInput, WhatsAppReplyOutput, ChatMessage } from '@/types/ai/cs-whatsapp-reply';\nimport { WhatsAppReplyInputSchema, WhatsAppReplyOutputSchema } from '@/types/ai/cs-whatsapp-reply';\n\nimport { db } from '@/lib/firebase';\nimport { collection, query as firestoreQuery, where, limit, getDocs, Timestamp } from 'firebase/firestore'; // Renamed query to firestoreQuery\nimport { DEFAULT_AI_SETTINGS } from '@/types/aiSettings';\n\n\n// Helper Function: Adapted from src/flow.ts to work with Firestore client SDK\n// and ServiceProduct variant structure (array of objects).\nasync function getServicePrice(vehicleModel: string, serviceName: string): Promise<number | null> {\n  if (!db) {\n    console.error(\"[CS-FLOW] Firestore client (db) is not initialized in getServicePrice.\");\n    return null;\n  }\n  try {\n    const vehicleTypesRef = collection(db, 'vehicleTypes');\n    const vehicleQuery = firestoreQuery(\n        vehicleTypesRef,\n        // Assuming aliases in vehicleTypes includes the model name itself in lowercase\n        where('aliases', 'array-contains', vehicleModel.toLowerCase()),\n        limit(1)\n    );\n    const vehicleSnapshot = await getDocs(vehicleQuery);\n\n    let vehicleSize: string | null = null;\n    if (!vehicleSnapshot.empty) {\n        vehicleSize = vehicleSnapshot.docs[0].data().size as string; // e.g., \"L\"\n    } else {\n        // Fallback: try matching model field directly if alias match fails\n        const modelDirectQuery = firestoreQuery(vehicleTypesRef, where('model', '==', vehicleModel), limit(1));\n        const modelDirectSnapshot = await getDocs(modelDirectQuery);\n        if (!modelDirectSnapshot.empty) {\n            vehicleSize = modelDirectSnapshot.docs[0].data().size as string;\n        } else {\n            console.log(`[CS-FLOW] getServicePrice: Vehicle model '${vehicleModel}' not found via aliases or direct model name.`);\n            return null;\n        }\n    }\n    \n    if (!vehicleSize) {\n        console.log(`[CS-FLOW] getServicePrice: Vehicle size not found for model '${vehicleModel}'.`);\n        return null;\n    }\n\n    const servicesRef = collection(db, 'services');\n    // Try matching by name directly first (case-insensitive equivalent)\n    // Firestore is case-sensitive, so this requires a more complex query or fetching and filtering.\n    // For simplicity here, we'll fetch and filter, or rely on a lowercase name field if available.\n    // Let's assume we fetch and filter for name first.\n    const servicesSnapshot = await getDocs(servicesRef);\n    const serviceDoc = servicesSnapshot.docs.find(doc => doc.data().name?.toLowerCase() === serviceName.toLowerCase());\n\n    if (!serviceDoc) {\n        console.log(`[CS-FLOW] getServicePrice: Service name '${serviceName}' not found by direct name match.`);\n        return null;\n    }\n    const serviceData = serviceDoc.data();\n\n    let price: number | null = null;\n\n    if (serviceData.variants && Array.isArray(serviceData.variants)) {\n        // Variants is an array of objects: [{name: \"L\", price: 50000}, ...]\n        const variant = serviceData.variants.find((v: any) => v.name && v.name.toUpperCase() === vehicleSize.toUpperCase());\n        if (variant && typeof variant.price === 'number') {\n            price = variant.price;\n        }\n    }\n    \n    if (price === null) {\n        console.log(`[CS-FLOW] getServicePrice: Price not found for service '${serviceName}' with size '${vehicleSize}'. Trying base price.`);\n        return typeof serviceData.price === 'number' ? serviceData.price : null; // Fallback ke harga dasar\n    }\n    return price;\n\n  } catch (error) {\n    console.error(\"[CS-FLOW] Error in getServicePrice:\", error);\n    return null;\n  }\n}\n\n\n/**\n * Flow utama untuk digunakan di API/function/genkit handler\n */\nexport const whatsAppReplyFlowSimplified = ai.defineFlow(\n  {\n    name: 'whatsAppReplyFlowSimplified',\n    inputSchema: WhatsAppReplyInputSchema,\n    outputSchema: WhatsAppReplyOutputSchema,\n  },\n  async (input: WhatsAppReplyInput): Promise<WhatsAppReplyOutput> => {\n    try {\n      console.log(\"[CS-FLOW] whatsAppReplyFlowSimplified input received. customerMessage:\", input.customerMessage);\n\n      const lastUserMessageContent = input.customerMessage.toLowerCase();\n      let vehicleModel: string | null = null;\n      let serviceName: string | null = null;\n      let dynamicContext = \"INFO_UMUM_BENGKEL: QLAB Moto Detailing adalah bengkel perawatan dan detailing motor.\";\n\n      if (db) {\n        try {\n          // Deteksi model kendaraan\n          const vehicleTypesRef = collection(db, 'vehicleTypes');\n          const modelsSnapshot = await getDocs(vehicleTypesRef);\n          for (const doc of modelsSnapshot.docs) {\n            const data = doc.data();\n            const modelAliases = (data.aliases as string[] || []).map(a => a.toLowerCase());\n            const originalModelName = data.model as string;\n            if (modelAliases.some(alias => lastUserMessageContent.includes(alias)) || lastUserMessageContent.includes(originalModelName.toLowerCase())) {\n              vehicleModel = originalModelName;\n              console.log(`[CS-FLOW] Vehicle model detected: ${vehicleModel}`);\n              break;\n            }\n          }\n\n          // Deteksi layanan\n          const servicesRef = collection(db, 'services');\n          const servicesSnapshot = await getDocs(servicesRef);\n          for (const doc of servicesSnapshot.docs) {\n            const data = doc.data();\n            const serviceAliases = (data.aliases as string[] || []).map(a => a.toLowerCase());\n            const originalServiceName = data.name as string;\n             if (serviceAliases.some(alias => lastUserMessageContent.includes(alias)) || lastUserMessageContent.includes(originalServiceName.toLowerCase())) {\n              serviceName = originalServiceName;\n              console.log(`[CS-FLOW] Service name detected: ${serviceName}`);\n              break;\n            }\n          }\n        } catch (dbError) {\n          console.error(\"[CS-FLOW] Error during Firestore entity detection:\", dbError);\n          dynamicContext += \" WARNING: Gagal mengambil data detail dari database.\";\n        }\n      } else {\n        console.warn(\"[CS-FLOW] Firestore (db) is not initialized. Entity detection and pricing will be skipped.\");\n        dynamicContext += \" WARNING: Database tidak terhubung, info harga mungkin tidak akurat.\";\n      }\n\n      if (vehicleModel && serviceName) {\n        const price = await getServicePrice(vehicleModel, serviceName);\n        if (serviceName.toLowerCase().includes('full detailing') && lastUserMessageContent.includes('doff')) {\n            dynamicContext = `VALIDATION_ERROR: Full Detailing tidak bisa untuk motor doff (motor terdeteksi: ${vehicleModel}, layanan diminta: ${serviceName}). Tawarkan Coating Doff sebagai alternatif.`;\n        } else {\n            dynamicContext = `DATA_PRODUK: Untuk motor ${vehicleModel}, layanan ${serviceName}, estimasi harganya adalah Rp ${price?.toLocaleString('id-ID') || 'belum tersedia, mohon tanyakan detail motor lebih lanjut atau jenis catnya (doff/glossy) jika coating'}.`;\n        }\n      } else if (vehicleModel) {\n          dynamicContext = `INFO_MOTOR_TERDETEKSI: ${vehicleModel}. Tanyakan layanan apa yang diinginkan.`;\n      } else if (serviceName) {\n          dynamicContext = `INFO_LAYANAN_TERDETEKSI: ${serviceName}. Tanyakan jenis motornya apa untuk estimasi harga.`;\n      }\n      console.log(`[CS-FLOW] Dynamic context built: ${dynamicContext}`);\n\n      const systemInstruction = `\nAnda adalah \"Zoya\" - CS QLAB Moto Detailing.\nGAYA BAHASA:\n- Santai tapi profesional (contoh: \"Halo boskuu\", \"Gas booking sekarang!\", \"Siap bos!\")\n- Pakai istilah: \"kinclong\", \"cuci premium level spa motor\", \"poles\", \"coating\"\n- Hindari kata kasar (boleh pakai \"anjay\" jika pas konteksnya)\n- Gunakan emoji secukupnya: ✅😎✨💸🛠️👋\n\nATURAN WAJIB:\n1. Layanan \"Full Detailing\" HANYA untuk motor tipe glossy. JANGAN tawarkan ke motor doff. Jika user minta, tolak dengan sopan dan berikan alternatif lain seperti \"Coating Doff\".\n2. Layanan \"Coating\" memiliki harga yang BERBEDA untuk glossy dan doff. Selalu pastikan tipe motornya dan jenis catnya (jika belum jelas dari KONTEKS DARI SISTEM). Jika harga belum ada di KONTEKS, tanyakan spesifikasi motor atau jenis cat.\n3. Motor besar (Moge) seperti Harley, CBR600RR, dll, otomatis menggunakan ukuran \"SIZE XL\". Info ukuran ini akan otomatis didapat dari sistem jika model terdeteksi.\n\nKONTEKS DARI SISTEM (gunakan data ini untuk menjawab, JANGAN tampilkan KONTEKS ini ke user secara langsung, olah jadi jawaban natural, jangan JSON):\n${dynamicContext}\n\nPETUNJUK TAMBAHAN:\n- Jika KONTEKS berisi VALIDATION_ERROR, jelaskan error tersebut ke user dengan bahasa yang sopan dan berikan solusi/alternatif.\n- Jika KONTEKS berisi DATA_PRODUK dan harganya ada, sebutkan harganya. Jika harga 'belum tersedia', JANGAN mengarang harga. Informasikan bahwa harga spesifik belum ada dan tanyakan detail lebih lanjut jika diperlukan (misal jenis cat untuk coating, atau ukuran motor jika belum terdeteksi).\n- Jika user bertanya di luar topik detailing motor, jawab dengan sopan bahwa Anda hanya bisa membantu soal QLAB Moto Detailing.\n- Tujuan utama: Memberikan informasi akurat dan membantu user melakukan booking jika mereka mau.\n\nJAWABAN (format natural):\n      `;\n\n      const historyForAI: { role: 'user' | 'model'; parts: {text: string}[] }[] = (input.chatHistory || [])\n        .filter(msg => msg.content && msg.content.trim() !== '')\n        .map(msg => ({\n          role: msg.role,\n          parts: [{ text: msg.content }],\n        }));\n      \n      const messagesForAI = [\n          ...historyForAI,\n          { role: 'user' as const, parts: [{ text: input.customerMessage }] }\n      ];\n\n      console.log(\"[CS-FLOW] Calling ai.generate with model googleai/gemini-1.5-flash-latest\");\n      const result = await ai.generate({\n        model: 'googleai/gemini-1.5-flash-latest',\n        messages: messagesForAI,\n        system: systemInstruction,\n        config: { temperature: 0.5 },\n      });\n\n      const suggestedReply = result.text();\n      if (!suggestedReply) {\n        console.error('[CS-FLOW] ❌ Gagal mendapatkan balasan dari AI atau output tidak sesuai skema (output atau suggestedReply null/undefined). Mengembalikan default.');\n        return { suggestedReply: \"Maaf, Zoya lagi bingung nih. Bisa diulang pertanyaannya atau coba beberapa saat lagi?\" };\n      }\n      console.log(\"[CS-FLOW] AI generate output:\", suggestedReply);\n      return { suggestedReply };\n\n    } catch (flowError: any) {\n        console.error('[CS-FLOW] ❌ Critical error dalam flow whatsAppReplyFlowSimplified:', flowError);\n        return { suggestedReply: \"Waduh, sistem Zoya lagi ada kendala besar nih. Mohon coba beberapa saat lagi ya.\" };\n    }\n  }\n);\n\nexport async function generateWhatsAppReply(input: Omit<WhatsAppReplyInput, 'mainPromptString'>): Promise<WhatsAppReplyOutput> {\n  let promptFromSettings = \"\";\n  try {\n    const settingsDocRef = doc(db, 'appSettings', 'aiAgentConfig');\n    const settingsSnap = await getDoc(settingsDocRef);\n    if (settingsSnap.exists() && settingsSnap.data()?.mainPrompt && settingsSnap.data()?.mainPrompt.trim() !== \"\") {\n      promptFromSettings = settingsSnap.data()?.mainPrompt;\n    } else {\n      console.warn(\"[CS-FLOW] generateWhatsAppReply: mainPrompt not found in Firestore or is empty. Checking default.\");\n      if (DEFAULT_AI_SETTINGS.mainPrompt && DEFAULT_AI_SETTINGS.mainPrompt.trim() !== \"\") {\n        promptFromSettings = DEFAULT_AI_SETTINGS.mainPrompt;\n      } else {\n        console.error(\"[CS-FLOW] generateWhatsAppReply: CRITICAL - mainPrompt is also empty in DEFAULT_AI_SETTINGS. Using emergency fallback prompt.\");\n        promptFromSettings = \"Anda adalah asisten AI. Tolong jawab pertanyaan pengguna: {{{customerMessage}}}\"; \n      }\n    }\n  } catch (error) {\n    console.error(\"[CS-FLOW] generateWhatsAppReply: Error fetching prompt from Firestore. Using default/emergency fallback.\", error);\n    if (DEFAULT_AI_SETTINGS.mainPrompt && DEFAULT_AI_SETTINGS.mainPrompt.trim() !== \"\") {\n        promptFromSettings = DEFAULT_AI_SETTINGS.mainPrompt;\n      } else {\n        console.error(\"[CS-FLOW] generateWhatsAppReply: CRITICAL - mainPrompt is also empty in DEFAULT_AI_SETTINGS post-error. Using emergency fallback prompt.\");\n        promptFromSettings = \"Anda adalah asisten AI. Tolong jawab pertanyaan pengguna: {{{customerMessage}}}\"; \n      }\n  }\n  // Fallback one last time if somehow promptFromSettings is still empty\n  if (!promptFromSettings || promptFromSettings.trim() === \"\") {\n    console.error(\"[CS-FLOW] generateWhatsAppReply: CRITICAL - promptFromSettings is STILL empty after all checks. Using emergency fallback prompt.\");\n    promptFromSettings = \"Anda adalah asisten AI. Tolong jawab pertanyaan pengguna: {{{customerMessage}}}\";\n  }\n\n\n  const flowInput: WhatsAppReplyInput = {\n    ...input,\n    // mainPromptString is part of WhatsAppReplyInputSchema but will be ignored by the flow's current logic.\n    // The system instruction is now built dynamically inside whatsAppReplyFlowSimplified.\n    // We pass it here for schema compliance and potential future use if logic changes.\n    mainPromptString: promptFromSettings,\n    customerMessage: input.customerMessage,\n    senderNumber: input.senderNumber,\n    chatHistory: input.chatHistory || [],\n    currentDate: input.currentDate || new Date().toLocaleDateString('id-ID', { year: 'numeric', month: '2-digit', day: '2-digit' }),\n    currentTime: input.currentTime || new Date().toLocaleTimeString('id-ID', { hour: '2-digit', minute: '2-digit', hour12: false }),\n    tomorrowDate: input.tomorrowDate || new Date(Date.now() + 86400000).toLocaleDateString('id-ID', { year: 'numeric', month: '2-digit', day: '2-digit' }),\n    dayAfterTomorrowDate: input.dayAfterTomorrowDate || new Date(Date.now() + 2 * 86400000).toLocaleDateString('id-ID', { year: 'numeric', month: '2-digit', day: '2-digit' }),\n    agentBehavior: input.agentBehavior || DEFAULT_AI_SETTINGS.agentBehavior,\n    knowledgeBase: input.knowledgeBase || DEFAULT_AI_SETTINGS.knowledgeBaseDescription,\n  };\n  return whatsAppReplyFlowSimplified(flowInput);\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 828, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/%28app%29/ai-cs-assistant/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {generateWhatsAppReply as '4053660f6447b38038e1d20965a3df3cd57a2a7b51'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 892, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28app%29/ai-cs-assistant/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(app)/ai-cs-assistant/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(app)/ai-cs-assistant/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA0S,GACvU,wEACA","debugId":null}},
    {"offset": {"line": 906, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28app%29/ai-cs-assistant/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(app)/ai-cs-assistant/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(app)/ai-cs-assistant/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAsR,GACnT,oDACA","debugId":null}},
    {"offset": {"line": 920, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}