{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firebase.ts"],"sourcesContent":["\nimport { initializeApp, getApp, getApps, type FirebaseApp } from \"firebase/app\";\nimport { getFirestore, type Firestore } from \"firebase/firestore\";\n\n// Minimal logging\nconsole.log(\"[firebase.ts] Initializing Firebase...\");\n\nconst firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n};\n\nif (!firebaseConfig.projectId || !firebaseConfig.apiKey) {\n  console.error(\"[firebase.ts] FATAL ERROR: Firebase projectId or apiKey is MISSING in environment variables.\");\n}\n\nlet app: FirebaseApp;\nlet db: Firestore;\n\nif (getApps().length === 0) {\n  try {\n    app = initializeApp(firebaseConfig);\n    console.log(\"[firebase.ts] Firebase app initialized. Project ID:\", app.options.projectId);\n  } catch (e: any) {\n    console.error(\"[firebase.ts] FAILED to initialize Firebase app:\", e.message);\n    // @ts-ignore\n    app = null;\n  }\n} else {\n  app = getApp();\n  console.log(\"[firebase.ts] Using existing Firebase app. Project ID:\", app.options.projectId);\n}\n\n// @ts-ignore\nif (app) {\n  try {\n    // @ts-ignore\n    db = getFirestore(app);\n    console.log(\"[firebase.ts] Firestore instance obtained.\");\n  } catch (e: any) {\n    console.error(\"[firebase.ts] FAILED to get Firestore instance:\", e?.message);\n  }\n} else {\n    console.error(\"[firebase.ts] Firebase app not properly initialized, cannot get Firestore.\");\n}\n\nexport { app, db };\n"],"names":[],"mappings":";;;;AACA;AAAA;AACA;AAAA;;;AAEA,kBAAkB;AAClB,QAAQ,GAAG,CAAC;AAEZ,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;AACP;AAEA,IAAI,CAAC,eAAe,SAAS,IAAI,CAAC,eAAe,MAAM,EAAE;IACvD,QAAQ,KAAK,CAAC;AAChB;AAEA,IAAI;AACJ,IAAI;AAEJ,IAAI,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,KAAK,GAAG;IAC1B,IAAI;QACF,MAAM,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE;QACpB,QAAQ,GAAG,CAAC,uDAAuD,IAAI,OAAO,CAAC,SAAS;IAC1F,EAAE,OAAO,GAAQ;QACf,QAAQ,KAAK,CAAC,oDAAoD,EAAE,OAAO;QAC3E,aAAa;QACb,MAAM;IACR;AACF,OAAO;IACL,MAAM,CAAA,GAAA,oLAAA,CAAA,SAAM,AAAD;IACX,QAAQ,GAAG,CAAC,0DAA0D,IAAI,OAAO,CAAC,SAAS;AAC7F;AAEA,aAAa;AACb,IAAI,KAAK;IACP,IAAI;QACF,aAAa;QACb,KAAK,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE;QAClB,QAAQ,GAAG,CAAC;IACd,EAAE,OAAO,GAAQ;QACf,QAAQ,KAAK,CAAC,mDAAmD,GAAG;IACtE;AACF,OAAO;IACH,QAAQ,KAAK,CAAC;AAClB","debugId":null}},
    {"offset": {"line": 264, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["\nimport '@/lib/firebase'; // Ensure Firebase is initialized early\nimport {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai'; // Impor plugin Google AI\n\nif (!process.env.GOOGLE_API_KEY) {\n  const errorMessage = \"Kesalahan Konfigurasi: GOOGLE_API_KEY tidak ditemukan di environment variables. Ini dibutuhkan oleh plugin Google AI. Pastikan sudah di-set di file .env Anda.\";\n  console.error(`\\n\\n🛑 ${errorMessage}\\n\\n`);\n  throw new Error(errorMessage);\n}\n\nexport const ai = genkit({\n  plugins: [\n    googleAI(), // Gunakan plugin Google AI\n  ],\n  model: 'googleai/gemini-1.5-flash-latest', // Model diubah ke Gemini 1.5 Flash terbaru\n  // Opsi telemetry tidak lagi dikonfigurasi di sini untuk Genkit v1.x\n  // Jika butuh logging, konfigurasi dilakukan secara berbeda atau via environment.\n});\n\n"],"names":[],"mappings":";;;AACA,8MAAyB,uCAAuC;AAChE;AAAA;AACA,8TAA8C,yBAAyB;AAAvE;;;;AAEA,IAAI,CAAC,QAAQ,GAAG,CAAC,cAAc,EAAE;IAC/B,MAAM,eAAe;IACrB,QAAQ,KAAK,CAAC,CAAC,OAAO,EAAE,aAAa,IAAI,CAAC;IAC1C,MAAM,IAAI,MAAM;AAClB;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QACP,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KACR;IACD,OAAO;AAGT","debugId":null}},
    {"offset": {"line": 292, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28app%29/ai-cs-assistant/settings/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(app)/ai-cs-assistant/settings/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(app)/ai-cs-assistant/settings/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAmT,GAChV,iFACA","debugId":null}},
    {"offset": {"line": 306, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28app%29/ai-cs-assistant/settings/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(app)/ai-cs-assistant/settings/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(app)/ai-cs-assistant/settings/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA+R,GAC5T,6DACA","debugId":null}},
    {"offset": {"line": 320, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 330, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/cs-whatsapp-reply-flow.ts"],"sourcesContent":["\n'use server';\n\nimport { ai } from '@/ai/genkit'; // Menggunakan objek 'ai' global dari genkit.ts\nimport * as z from 'zod';\nimport { db } from '@/lib/firebase';\nimport { collection, query as firestoreQuery, where, limit, getDocs, Timestamp } from 'firebase/firestore';\nimport { DEFAULT_AI_SETTINGS } from '@/app/(app)/ai-cs-assistant/settings/page'; // Import default settings\n\n// Skema internal untuk validasi input chat history di flow\nconst ChatMessageSchemaInternal = z.object({\n  role: z.enum(['user', 'model']),\n  content: z.string(),\n});\nexport type ChatMessage = z.infer<typeof ChatMessageSchemaInternal>;\n\n// Skema Zod untuk input flow\nconst ZoyaChatInputSchema = z.object({\n  messages: z.array(ChatMessageSchemaInternal).optional().describe(\"Riwayat percakapan, pesan terakhir adalah dari user.\"),\n  customerMessage: z.string().optional().describe(\"Pesan terbaru dari customer jika tidak termasuk dalam messages.\"),\n  senderNumber: z.string().optional().describe(\"Nomor WhatsApp pengirim (opsional).\"),\n  // Tambahkan field lain yang mungkin dibutuhkan dari DEFAULT_AI_SETTINGS\n  agentBehavior: z.string().optional(),\n  knowledgeBase: z.string().optional(),\n  currentDate: z.string().optional(),\n  currentTime: z.string().optional(),\n  tomorrowDate: z.string().optional(),\n  dayAfterTomorrowDate: z.string().optional(),\n  mainPromptString: z.string().optional(),\n});\nexport type ZoyaChatInput = z.infer<typeof ZoyaChatInputSchema>;\n\n// Skema Zod untuk output flow\nconst ZoyaChatOutputSchema = z.string().describe(\"Balasan teks dari Zoya.\");\n\n\n// =================================================================\n//  TOOLS: Kemampuan yang bisa digunakan oleh AI\n// =================================================================\nconst getServicePriceTool = ai.defineTool(\n  {\n    name: 'getServicePrice',\n    description: 'Dapatkan harga untuk layanan spesifik pada model motor tertentu. Gunakan tool ini jika user menanyakan harga.',\n    inputSchema: z.object({\n      vehicleModel: z.string().describe('Model motor, contoh: NMAX, PCX, Vario'),\n      serviceName: z.string().describe('Nama layanan, contoh: Coating, Cuci Premium, Full Detailing'),\n    }),\n    outputSchema: z.object({\n      success: z.boolean(),\n      message: z.string(),\n      price: z.number().optional(),\n      size: z.string().optional(),\n      estimatedDuration: z.string().optional(),\n    }),\n  },\n  async ({ vehicleModel, serviceName }) => {\n    if (!db) {\n      console.error(\"[getServicePriceTool] Firestore Client DB (db) is not initialized!\");\n      return { success: false, message: \"Database bengkel sedang tidak bisa diakses, Zoya jadi bingung nih.\" };\n    }\n    console.log(`[getServicePriceTool] Input: vehicleModel=${vehicleModel}, serviceName=${serviceName}`);\n    try {\n      const vehiclesCollectionRef = collection(db, 'vehicleTypes');\n      // 1. Coba cari berdasarkan alias dulu\n      let vehicleQuery = firestoreQuery(\n        vehiclesCollectionRef,\n        where('aliases', 'array-contains', vehicleModel.toLowerCase()),\n        limit(1)\n      );\n      let vehicleQuerySnapshot = await getDocs(vehicleQuery);\n\n      // 2. Jika tidak ketemu alias, coba cari berdasarkan model_lowercase (exact match)\n      if (vehicleQuerySnapshot.empty) {\n        console.log(`[getServicePriceTool] No exact match for '${vehicleModel.toLowerCase()}' in aliases. Trying 'model_lowercase'...`);\n        const modelLowerQuery = firestoreQuery(vehiclesCollectionRef, where('model_lowercase', '==', vehicleModel.toLowerCase()), limit(1));\n        vehicleQuerySnapshot = await getDocs(modelLowerQuery);\n      }\n      \n      if (vehicleQuerySnapshot.empty) {\n        console.log(`[getServicePriceTool] Vehicle model '${vehicleModel}' not found.`);\n        return { success: false, message: `Maaf, Zoya belum kenal model motor \"${vehicleModel}\". Mungkin bisa sebutkan yang lebih umum atau pastikan ejaannya benar?` };\n      }\n\n      const vehicleData = vehicleQuerySnapshot.docs[0].data();\n      const vehicleSize = vehicleData.size; // e.g., \"L\"\n      if (!vehicleSize) {\n         console.log(`[getServicePriceTool] Vehicle size not found for model '${vehicleModel}'.`);\n         return { success: false, message: `Ukuran untuk model motor \"${vehicleModel}\" tidak ditemukan. Zoya bingung nih.` };\n      }\n      const firestoreSizeVariant = vehicleSize; // Varian ukuran di Firestore biasanya S, M, L, XL langsung\n\n      const servicesCollectionRef = collection(db, 'services');\n      const serviceNameLower = serviceName.toLowerCase();\n      \n      // Mencari layanan dengan nama yang case-insensitive (>= dan <= trick)\n      const serviceQuery = firestoreQuery(\n        servicesCollectionRef,\n        where('name_lowercase', '>=', serviceNameLower),\n        where('name_lowercase', '<=', serviceNameLower + '\\uf8ff')\n        // where('name_lowercase', '==', serviceNameLower) // Alternatif: exact match, but less flexible for typos\n      );\n      const serviceQuerySnapshot = await getDocs(serviceQuery);\n\n      if (serviceQuerySnapshot.empty) {\n        console.log(`[getServicePriceTool] Service name '${serviceName}' not found (initial query).`);\n        // Mungkin coba cari dengan alias juga di sini jika ada field alias_layanan di collection services\n        return { success: false, message: `Layanan \"${serviceName}\" sepertinya tidak tersedia.` };\n      }\n      \n      // Filter manual untuk best match jika query mengembalikan >1 hasil (mis. \"Cuci\" vs \"Cuci Premium\")\n      let foundServiceData: any = null;\n      let bestMatchScore = -1;\n\n      serviceQuerySnapshot.forEach(doc => {\n        const service = doc.data();\n        const currentServiceNameLower = service.name_lowercase || service.name.toLowerCase(); // Fallback if name_lowercase is missing\n        \n        // Scoring sederhana: exact match paling tinggi, startsWith, includes\n        let score = 0;\n        if (currentServiceNameLower === serviceNameLower) { score = 100; }\n        else if (currentServiceNameLower.startsWith(serviceNameLower)) { score = 50; }\n        else if (serviceNameLower.includes(currentServiceNameLower)) { score = 25; } // Jika query kita pakai >= <=, ini mungkin tidak terlalu relevan\n        else { score = 10; } // Default score for less relevant matches from broad query\n\n        if (score > bestMatchScore) {\n            bestMatchScore = score;\n            foundServiceData = service;\n        }\n      });\n\n      if (!foundServiceData) {\n         console.log(`[getServicePriceTool] No suitable service found for '${serviceName}' after filtering.`);\n         return { success: false, message: `Layanan \"${serviceName}\" tidak ditemukan.` };\n      }\n      \n      // Ambil harga dari varian yang cocok, atau harga dasar jika tidak ada varian/varian tidak cocok\n      let price: number | undefined = undefined;\n      let estimatedDuration: string | undefined = foundServiceData.estimatedDuration; // Ambil durasi dasar dulu\n\n      if (foundServiceData.variants && Array.isArray(foundServiceData.variants)) {\n        // Di Firestore, varian biasanya punya nama seperti \"S\", \"M\", \"L\", \"XL\" (sesuai vehicleSize)\n        const variant = foundServiceData.variants.find((v: any) => v.name && v.name.toUpperCase() === firestoreSizeVariant.toUpperCase());\n        if (variant && typeof variant.price === 'number') {\n          price = variant.price;\n          estimatedDuration = variant.estimatedDuration || estimatedDuration; // Ambil durasi varian jika ada\n        }\n      }\n      \n      // Jika harga dari varian tidak ditemukan, coba ambil harga dasar layanan\n      if (price === undefined && typeof foundServiceData.price === 'number') {\n        price = foundServiceData.price;\n      }\n\n      if (price === undefined) {\n        console.log(`[getServicePriceTool] Price not found for service '${foundServiceData.name}' with size '${vehicleSize}'. Base price also not found or invalid.`);\n        return { \n          success: false, \n          message: `Harga untuk layanan \"${foundServiceData.name}\" pada motor ukuran ${vehicleSize} (${vehicleModel}) belum tersedia saat ini. Mungkin Zoya bisa bantu carikan layanan lain?`,\n          size: vehicleSize,\n          estimatedDuration: estimatedDuration // Kirim durasi dasar jika harga tidak ketemu\n        };\n      }\n\n      console.log(`[getServicePriceTool] Success: Found price Rp ${price} for ${serviceName} on ${vehicleModel} (size ${vehicleSize}). Duration: ${estimatedDuration || 'N/A'}`);\n      return {\n        success: true,\n        price: price,\n        size: vehicleSize,\n        message: `Harga untuk layanan ${foundServiceData.name} pada motor ${vehicleModel} (Size ${vehicleSize}) adalah Rp ${price.toLocaleString('id-ID')}. Estimasi durasi: ${estimatedDuration || 'N/A'}.`,\n        estimatedDuration: estimatedDuration || undefined // Kirim durasi yang relevan\n      };\n    } catch (error: any) {\n        console.error(\"[getServicePriceTool] Error executing tool:\", error.message, error.stack);\n        return { success: false, message: `Waduh, Zoya lagi pusing nih, ada error pas ngecek harga: ${error.message}` };\n    }\n  }\n);\n\n\n// =================================================================\n//  FLOW: Logika utama chatbot Zoya\n// =================================================================\nconst zoyaChatFlow = ai.defineFlow(\n  {\n    name: 'zoyaChatFlow',\n    inputSchema: ZoyaChatInputSchema,\n    outputSchema: ZoyaChatOutputSchema,\n  },\n  async (input) => {\n    const lastUserMessageContent = input.customerMessage || \n                                   (input.messages && input.messages.length > 0 ? input.messages[input.messages.length - 1].content : '');\n\n    if (!lastUserMessageContent || lastUserMessageContent.trim() === '') {\n      console.warn(\"[CS-FLOW] No valid last user message content. Returning empty reply.\");\n      return \"\"; // Kembalikan string kosong jika tidak ada pesan user\n    }\n    const lastMessageLowerCase = lastUserMessageContent.toLowerCase();\n    \n    // 1. Dynamic Context Building (Sederhana dulu)\n    let dynamicContext = `INFO_UMUM_BENGKEL: QLAB Moto Detailing adalah bengkel perawatan dan detailing motor.`;\n\n    // Untuk sementara, kita tidak melakukan deteksi entitas kompleks di sini untuk menyederhanakan.\n    // Jika tool dipanggil, output tool akan menjadi konteks baru untuk AI.\n    if (!db) {\n        console.warn(\"[CS-FLOW] Firestore DB (db) is not initialized. Entity detection and pricing will be skipped in context pre-building.\");\n        dynamicContext += \" WARNING: Database tidak terhubung, info harga mungkin tidak akurat jika tool tidak dipanggil.\";\n    }\n    \n    console.log(`[CS-FLOW] Dynamic context built: ${dynamicContext}`);\n\n    // 2. Siapkan histori dan prompt untuk AI\n    // 'messages' di input sudah berisi riwayat, pesan terakhir adalah dari user.\n    // Kita perlu memformatnya ke { role, content: [{ text: ... }] }\n    const historyForAI = (input.messages || [])\n      .filter(msg => msg.content && msg.content.trim() !== '') // Pastikan ada konten\n      .slice(0, -1) // Ambil semua KECUALI pesan user terakhir (karena itu akan jadi prompt utama)\n      .map((msg) => ({\n        role: msg.role,\n        content: [{ text: msg.content }], // Struktur content yang diharapkan Genkit v1.x\n    }));\n    \n    // Gunakan prompt utama dari input jika ada, jika tidak, ambil dari DEFAULT_AI_SETTINGS\n    const systemInstructionText = (input.mainPromptString || DEFAULT_AI_SETTINGS.mainPrompt).replace(\"{{dynamicContext}}\", dynamicContext);\n    \n    // Gabungkan instruksi sistem dengan pesan user terakhir\n    const userPromptWithSystemInstruction = `${systemInstructionText}\n\n---\n\nUSER_INPUT: \"${lastUserMessageContent}\"\n\nJAWABAN ZOYA:`; // Tambahkan label ini untuk memandu AI\n\n    const messagesForAI = [\n      ...historyForAI,\n      { role: 'user' as const, content: [{ text: userPromptWithSystemInstruction }] } // Pesan user terakhir dengan instruksi sistem\n    ];\n\n    console.log(\"[CS-FLOW] Calling ai.generate with model googleai/gemini-1.5-flash-latest. History Length:\", historyForAI.length);\n    // console.log(\"[CS-FLOW] Full Prompt Preview (first 500 chars): \\n\", userPromptWithSystemInstruction.substring(0, 500) + \"...\");\n    \n    try {\n      const result = await ai.generate({\n        model: 'googleai/gemini-1.5-flash-latest',\n        messages: messagesForAI,\n        tools: [getServicePriceTool as any], // Aktifkan tool\n        toolChoice: 'auto', // Biarkan AI memilih kapan menggunakan tool\n        config: { temperature: 0.5 },\n        // safetySettings: [ // Ini bisa ditambahkan jika ada masalah safety filter\n        //   { category: 'HARM_CATEGORY_HARASSMENT', threshold: 'BLOCK_ONLY_HIGH' },\n        //   { category: 'HARM_CATEGORY_HATE_SPEECH', threshold: 'BLOCK_ONLY_HIGH' },\n        // ],\n      });\n\n      console.log(\"[CS-FLOW] Raw AI generate result:\", JSON.stringify(result, null, 2));\n\n      // Cek apakah AI meminta pemanggilan tool\n      const toolRequest = result.toolRequest();\n      if (toolRequest) {\n        console.log(\"[CS-FLOW] AI requested a tool call:\", JSON.stringify(toolRequest, null, 2));\n        // Di sini kita perlu memanggil tool yang diminta dan mengirim hasilnya kembali ke AI\n        // Untuk implementasi sederhana, kita bisa coba panggil toolnya langsung jika hanya satu\n        if (toolRequest.tool === 'getServicePrice' && toolRequest.input) {\n          const toolResult = await getServicePriceTool.fn(toolRequest.input as z.infer<typeof getServicePriceTool.inputSchema>);\n          console.log(\"[CS-FLOW] Tool execution result:\", JSON.stringify(toolResult, null, 2));\n\n          // Kirim hasil tool kembali ke AI untuk generasi teks final\n          const finalResult = await ai.generate({\n            model: 'googleai/gemini-1.5-flash-latest',\n            messages: [\n              ...messagesForAI, // Kirim lagi histori dan prompt awal\n              { role: 'model', content: [{ toolRequest }] }, // Pesan dari AI yang meminta tool\n              { role: 'tool', content: [{ toolResponse: { tool: 'getServicePrice', output: toolResult } }] } // Hasil dari tool\n            ],\n            config: { temperature: 0.5 },\n          });\n          console.log(\"[CS-FLOW] Raw AI generate result AFTER TOOL CALL:\", JSON.stringify(finalResult, null, 2));\n          const suggestedReplyFromToolFollowUp = finalResult.text() || \"\";\n           if (!suggestedReplyFromToolFollowUp) {\n            console.warn(`[CS-FLOW] ⚠️ AI returned empty reply AFTER tool call. FinishReason: ${finalResult.finishReason}.`);\n            return \"Maaf, Zoya lagi bingung nih setelah coba cari info. Coba tanya lagi ya.\";\n          }\n          return suggestedReplyFromToolFollowUp;\n        } else {\n          console.warn(\"[CS-FLOW] Unhandled tool request or missing input:\", toolRequest);\n          return \"Maaf, Zoya mencoba melakukan sesuatu tapi ada yang salah. Bisa ulangi pertanyaannya?\";\n        }\n      }\n\n      // Jika tidak ada tool request, ambil teks biasa\n      const suggestedReply = result.text() || \"\";\n\n      // Diagnosis jika balasan kosong (lagi)\n      const finishReason = result.finishReason;\n      const safetyRatings = result.safetyRatings;\n      console.log(`[CS-FLOW] AI Finish Reason: ${finishReason}`);\n      if (safetyRatings && safetyRatings.length > 0) {\n        console.log('[CS-FLOW] AI Safety Ratings:', JSON.stringify(safetyRatings, null, 2));\n      }\n      \n      if (!suggestedReply) {\n        if (finishReason !== \"stop\") { \n          console.error(`[CS-FLOW] ❌ AI generation failed. Finish Reason: ${finishReason}. Safety: ${JSON.stringify(safetyRatings)}`);\n        } else {\n          console.warn(`[CS-FLOW] ⚠️ AI returned an empty reply, but finishReason was 'stop'. This might indicate an issue or unexpected model behavior. Safety Ratings: ${JSON.stringify(safetyRatings)}`);\n        }\n        return \"Maaf, Zoya lagi agak bingung nih boskuu. Coba tanya lagi dengan cara lain ya, atau hubungi CS langsung.\";\n      }\n      return suggestedReply;\n\n    } catch (flowError: any) {\n        console.error(\"[CS-FLOW] ❌ Critical error dalam flow zoyaChatFlow:\", flowError);\n        if (flowError.cause) { \n            console.error(\"[CS-FLOW] Error Cause:\", JSON.stringify(flowError.cause, null, 2));\n        }\n        return `Waduh, Zoya lagi error nih, boskuu. Coba tanya lagi nanti ya. (Pesan Error: ${flowError.message || 'Kesalahan internal tidak diketahui'})`;\n    }\n  }\n);\n\n// Fungsi wrapper yang akan dipanggil oleh UI atau API route\nexport async function generateWhatsAppReply(input: ZoyaChatInput): Promise<{ suggestedReply: string }> {\n  console.log(\"[CS-FLOW] generateWhatsAppReply input:\", JSON.stringify(input, null, 2));\n  \n  if (!input.mainPromptString) {\n    // Ambil prompt dari Firestore atau default\n    // Untuk sekarang, kita pakai default langsung\n    const mainPromptFromSettings = DEFAULT_AI_SETTINGS.mainPrompt; \n    console.log(\"[CS-FLOW] generateWhatsAppReply: mainPrompt not found in input. Using DEFAULT_AI_SETTINGS.mainPrompt.\");\n    input.mainPromptString = mainPromptFromSettings;\n  } else {\n    console.log(\"[CS-FLOW] generateWhatsAppReply: Using mainPromptString from input.\");\n  }\n\n  // Pastikan input.messages ada, minimal array kosong jika tidak ada riwayat\n  if (!input.messages) {\n    input.messages = [];\n  }\n\n  // Jika input.customerMessage ada, tambahkan sebagai pesan user terakhir ke input.messages\n  // Ini akan jadi pesan user yang diproses oleh zoyaChatFlow\n  if (input.customerMessage && input.customerMessage.trim() !== \"\") {\n    input.messages.push({ role: 'user', content: input.customerMessage });\n  }\n\n  try {\n    // Jalankan flow Genkit. `runFlow` tidak ada di Genkit v1.x, flow dipanggil langsung.\n    const replyText = await zoyaChatFlow(input);\n    return { suggestedReply: replyText };\n  } catch (error: any) {\n    console.error(\"[CS-FLOW Wrapper] Error running zoyaChatFlow:\", error);\n    return { suggestedReply: `Maaf, Zoya sedang ada kendala teknis. (${error.message || 'Tidak diketahui'})` };\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 705, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/%28app%29/ai-cs-assistant/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {generateWhatsAppReply as '4053660f6447b38038e1d20965a3df3cd57a2a7b51'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 769, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28app%29/ai-cs-assistant/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(app)/ai-cs-assistant/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(app)/ai-cs-assistant/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA0S,GACvU,wEACA","debugId":null}},
    {"offset": {"line": 783, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28app%29/ai-cs-assistant/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(app)/ai-cs-assistant/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(app)/ai-cs-assistant/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAsR,GACnT,oDACA","debugId":null}},
    {"offset": {"line": 797, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}