{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/layout/AppHeader.tsx"],"sourcesContent":["import React from 'react';\nimport { SidebarTrigger } from '@/components/ui/sidebar';\n\ninterface AppHeaderProps {\n  title: string;\n}\n\nexport default function AppHeader({ title }: AppHeaderProps) {\n  return (\n    <header className=\"sticky top-0 z-10 flex h-14 items-center gap-4 border-b bg-background px-6 shadow-sm\">\n      <SidebarTrigger className=\"md:hidden\" />\n      <h1 className=\"font-headline text-xl font-semibold\">{title}</h1>\n      {/* Add other header elements like user menu, notifications here if needed */}\n    </header>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;;;AAMe,SAAS,UAAU,EAAE,KAAK,EAAkB;IACzD,qBACE,8OAAC;QAAO,WAAU;;0BAChB,8OAAC,mIAAA,CAAA,iBAAc;gBAAC,WAAU;;;;;;0BAC1B,8OAAC;gBAAG,WAAU;0BAAuC;;;;;;;;;;;;AAI3D","debugId":null}},
    {"offset": {"line": 46, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 155, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/cs-whatsapp-reply-flow.ts"],"sourcesContent":["\n'use server';\n/**\n * @fileOverview AI flow for WhatsApp customer service replies.\n * Integrates with Firestore settings for dynamic AI behavior.\n * - generateWhatsAppReply - Function to generate a draft reply.\n */\n\nimport { ai } from '@/ai/genkit';\nimport { getProductServiceDetailsByNameTool } from '@/ai/tools/productLookupTool';\nimport { getClientDetailsTool } from '@/ai/tools/clientLookupTool';\nimport { getKnowledgeBaseInfoTool } from '@/ai/tools/knowledgeLookupTool';\nimport { createBookingTool } from '@/ai/tools/createBookingTool';\nimport type { WhatsAppReplyInput, WhatsAppReplyOutput, ChatMessage } from '@/types/ai/cs-whatsapp-reply';\nimport { WhatsAppReplyInputSchema, WhatsAppReplyOutputSchema } from '@/types/ai/cs-whatsapp-reply';\nimport { z } from 'genkit';\nimport { DEFAULT_AI_SETTINGS, type AiSettingsFormValues } from '@/types/aiSettings';\nimport { format as formatDateFns, addDays } from 'date-fns';\nimport { doc, getDoc } from 'firebase/firestore';\nimport { db } from '@/lib/firebase';\n\nasync function getAiSettingsFromFirestore(): Promise<Partial<AiSettingsFormValues>> {\n  try {\n    const settingsDocRef = doc(db, 'appSettings', 'aiAgentConfig');\n    const docSnap = await getDoc(settingsDocRef);\n    if (docSnap.exists()) {\n      console.log(\"AI settings fetched from Firestore:\", docSnap.data());\n      return docSnap.data() as Partial<AiSettingsFormValues>;\n    }\n    console.log(\"No AI settings found in Firestore, using defaults.\");\n    return {};\n  } catch (error) {\n    console.error(\"Error fetching AI settings from Firestore:\", error);\n    return {}; // Fallback to empty object, defaults will apply\n  }\n}\n\nexport async function generateWhatsAppReply({ customerMessage, senderNumber, chatHistory }: { customerMessage: string; senderNumber?: string; chatHistory?: ChatMessage[] }): Promise<WhatsAppReplyOutput> {\n  const firestoreSettings = await getAiSettingsFromFirestore();\n  // Merge Firestore settings with defaults. Firestore settings take precedence.\n  const agentSettings = { ...DEFAULT_AI_SETTINGS, ...firestoreSettings };\n  \n  const now = new Date();\n\n  const flowInput: WhatsAppReplyInput = {\n    customerMessage: customerMessage,\n    senderNumber: senderNumber,\n    chatHistory: chatHistory || [],\n    agentBehavior: agentSettings.agentBehavior, \n    knowledgeBase: agentSettings.knowledgeBaseDescription,\n    currentDate: formatDateFns(now, 'yyyy-MM-dd'),\n    currentTime: formatDateFns(now, 'HH:mm'),\n    tomorrowDate: formatDateFns(addDays(now, 1), 'yyyy-MM-dd'),\n    dayAfterTomorrowDate: formatDateFns(addDays(now, 2), 'yyyy-MM-dd'),\n  };\n  \n  console.log(\"generateWhatsAppReply input to flow (using merged settings, combined prompt):\", JSON.stringify(flowInput, null, 2));\n  const aiResponse = await whatsAppReplyFlowCombined(flowInput);\n  return aiResponse;\n}\n\nconst replyPromptCombined = ai.definePrompt({\n  name: 'whatsAppReplyPrompt_Combined_v4', // Updated version for clarity\n  input: { schema: WhatsAppReplyInputSchema },\n  output: { schema: WhatsAppReplyOutputSchema },\n  tools: [getKnowledgeBaseInfoTool, getProductServiceDetailsByNameTool, getClientDetailsTool, createBookingTool],\n  prompt: `Anda adalah Zoya, seorang Customer Service Assistant AI untuk QLAB Auto Detailing.\nPerilaku Anda: {{{agentBehavior}}}.\nAnda bertugas membantu pengguna dengan menjawab pertanyaan atau memproses permintaan mereka mengenai layanan dan produk QLAB.\n\nINSTRUKSI UTAMA:\n1.  Gunakan tool yang tersedia jika diperlukan untuk mendapatkan informasi akurat atau melakukan tindakan booking.\n2.  Informasi umum atau kebijakan dapat dicari menggunakan 'getKnowledgeBaseInfoTool'.\n3.  Detail spesifik produk/layanan seperti harga, durasi, atau ketersediaan gunakan 'getProductServiceDetailsByNameTool'.\n    *   Tool 'getProductServiceDetailsByNameTool' bisa mengembalikan satu item atau array beberapa item jika query-nya umum.\n    *   Jika pelanggan menyebutkan layanan secara umum (misalnya \"coating motor\", \"cuci xmax\") atau bertanya \"ada apa aja?\", gunakan tool 'getProductServiceDetailsByNameTool' dengan query yang lebih umum (misalnya, \"coating\", \"paket detailing\", \"cuci motor\").\n    *   Jika tool mengembalikan **ARRAY BEBERAPA ITEM** (misalnya, hasil dari query umum seperti \"coating\" atau \"paket detailing\"):\n        *   Ambil 2-3 item yang paling relevan dari array tersebut.\n        *   Untuk setiap item yang dipilih, sebutkan **nama itemnya (dari field 'name' output tool)** dan **harganya (dari field 'price' output tool, atau harga varian pertama jika ada varian dan harga dasar 0)**.\n        *   Contoh: \"Untuk coating XMAX, kami ada beberapa pilihan Kak: (1) [NAMA_ITEM_1_DARI_TOOL] harganya Rp [HARGA_ITEM_1_DARI_TOOL], dan (2) [NAMA_ITEM_2_DARI_TOOL] harganya Rp [HARGA_ITEM_2_DARI_TOOL]. Kakak tertarik yang mana?\"\n        *   Jika item punya 'variants', sebutkan nama item dasar dan mungkin satu atau dua harga varian sebagai contoh.\n        *   JANGAN membuat nama layanan sendiri, gunakan nama yang dikembalikan oleh tool.\n    *   Jika tool mengembalikan **SATU ITEM**:\n        *   Gunakan field 'price' dari output tool untuk menyebutkan harga dasar. Format harga sebagai Rupiah (Rp).\n        *   Jika item tersebut memiliki array 'variants', periksa array 'variants' tersebut. Jika ada, sebutkan beberapa pilihan varian beserta harganya. Contoh: \"Untuk Coating Motor XMAX harganya mulai dari Rp 500.000 (varian Standar). Ada juga varian Premium Rp 700.000. Mau yang mana Kak?\"\n        *   Jika tidak ada 'variants' atau pelanggan sudah spesifik memilih varian, gunakan harga dari item utama atau varian tersebut.\n        *   Gunakan detail lain seperti 'estimatedDuration' dan 'description' jika relevan dan tersedia.\n    *   Jika pelanggan bertanya tentang kategori layanan (misalnya \"layanan detailing apa saja?\"), Anda bisa gunakan 'getKnowledgeBaseInfoTool' dengan query tentang kategori tersebut atau 'getProductServiceDetailsByNameTool' dengan nama kategori sebagai productName.\n4.  Untuk data pelanggan (poin, motor terdaftar), gunakan 'getClientDetailsTool'.\n5.  Jika pelanggan meminta booking, gunakan 'createBookingTool'. Pastikan Anda telah mengkonfirmasi layanan yang diinginkan, nama pelanggan, info kendaraan, dan tanggal/waktu sebelum memanggil tool booking. Untuk tanggal dan waktu, jika pelanggan tidak spesifik, Anda bisa menawarkan slot tersedia atau menanyakan preferensi mereka. Konfirmasi KETERSEDIAAN SLOT jika pelanggan meminta waktu spesifik SEBELUM memanggil tool ini (gunakan pengetahuan umum Anda atau getKnowledgeBaseInfoTool jika ada info ketersediaan umum).\n6.  Konteks Knowledge Base Tambahan: {{{knowledgeBase}}}\n\nINFORMASI WAKTU SAAT INI:\nTanggal saat ini adalah {{{currentDate}}}, jam {{{currentTime}}}. Besok adalah {{{tomorrowDate}}}, dan lusa adalah {{{dayAfterTomorrowDate}}}.\n\nFORMAT BALASAN:\nFormat balasan ANDA HARUS SELALU berupa objek JSON dengan satu field bernama \"suggestedReply\" yang berisi teks balasan Anda.\nContoh balasan JSON: {\"suggestedReply\": \"Tentu, Kak. Untuk layanan Cuci Premium, harganya adalah Rp 75.000.\"}\nJANGAN PERNAH menyebutkan nama tool yang Anda gunakan dalam balasan teks ke pelanggan.\n\nGAYA BAHASA:\nGunakan bahasa Indonesia yang baku, sopan, ramah, dan natural untuk percakapan WhatsApp.\nJika pertanyaan di luar lingkup, sarankan untuk datang ke bengkel atau hubungi nomor resmi.\nJaga balasan ringkas namun lengkap. Hindari janji yang tidak pasti.\nSelalu akhiri dengan sapaan sopan atau kalimat positif.\n\nRIWAYAT PERCAKAPAN SEBELUMNYA (jika ada):\n{{#if chatHistory.length}}\n{{#each chatHistory}}\n  {{this.role}}: {{{this.content}}}\n{{/each}}\n{{/if}}\n\nPESAN PELANGGAN TERBARU:\nuser: {{{customerMessage}}}\n\nHasilkan hanya objek JSON sebagai balasan Anda.\n`\n});\n\nconst whatsAppReplyFlowCombined = ai.defineFlow(\n  {\n    name: 'whatsAppReplyFlow_Combined_v4', // Updated version\n    inputSchema: WhatsAppReplyInputSchema,\n    outputSchema: WhatsAppReplyOutputSchema,\n  },\n  async (input: WhatsAppReplyInput) => {\n    console.log(\"whatsAppReplyFlow_Combined_v4 input received by flow:\", JSON.stringify(input, null, 2));\n    \n    const {output} = await replyPromptCombined(input); \n    if (!output) {\n      throw new Error('Gagal mendapatkan saran balasan dari AI (combined prompt flow v4).');\n    }\n    console.log(\"whatsAppReplyFlow_Combined_v4 output:\", output);\n    return output;\n  }\n);\n    \n\n"],"names":[],"mappings":";;;;;;IAqCsB,wBAAA,WAAA,GAAA,CAAA,GAAA,sNAAA,CAAA,wBAAA,EAAA,8CAAA,sNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,sNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 168, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,8OAAC,0KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,8OAAC,0KAAA,CAAA,WAA4B;gBAAC,WAAU;0BACrC;;;;;;0BAEH,8OAAC;;;;;0BACD,8OAAC,0KAAA,CAAA,SAA0B;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,0KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,8OAAC,0KAAA,CAAA,sBAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,0KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;AAGnD,UAAU,WAAW,GAAG,0KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 356, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firebase.ts"],"sourcesContent":["\nimport { initializeApp, getApp, getApps, type FirebaseApp } from \"firebase/app\";\nimport { getFirestore, type Firestore } from \"firebase/firestore\";\n\n// Log environment variables right at the start of this module's execution\nconsole.log(\"[firebase.ts] Reading NEXT_PUBLIC_FIREBASE_PROJECT_ID:\", process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID);\nconsole.log(\"[firebase.ts] Reading NEXT_PUBLIC_FIREBASE_API_KEY:\", process.env.NEXT_PUBLIC_FIREBASE_API_KEY ? \"Exists\" : \"MISSING\");\n\nconst firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n};\n\n// Log the constructed firebaseConfig\nconsole.log(\"[firebase.ts] Firebase config to be used:\", JSON.stringify(firebaseConfig, null, 2));\n\nlet app: FirebaseApp;\nlet db: Firestore;\n\nconsole.log(\"[firebase.ts] Memulai inisialisasi Firebase (selalu ke Cloud)...\");\n\nif (!firebaseConfig.projectId || !firebaseConfig.apiKey) {\n  console.error(\"--------------------------------------------------------------------\");\n  console.error(\"[firebase.ts] KESALAHAN FATAL: Firebase projectId atau apiKey KOSONG!\");\n  console.error(\"[firebase.ts] Pastikan file .env sudah ada di root proyek dan berisi variabel Firebase yang benar (NEXT_PUBLIC_FIREBASE_PROJECT_ID, NEXT_PUBLIC_FIREBASE_API_KEY, dll).\");\n  console.error(\"[firebase.ts] Jalankan 'npm run genkit:dev' dari terminal di root folder proyek Anda.\");\n  console.error(\"--------------------------------------------------------------------\");\n  // Throw an error or handle appropriately if critical config is missing\n  // For now, we let it proceed so initializeApp might show its own error, but this log is critical.\n}\n\n\nif (getApps().length === 0) {\n  console.log(\"[firebase.ts] Tidak ada aplikasi Firebase yang terinisialisasi, membuat aplikasi baru...\");\n  try {\n    app = initializeApp(firebaseConfig);\n    console.log(\"[firebase.ts] Aplikasi Firebase baru berhasil dibuat. Project ID:\", app.options.projectId);\n  } catch (e) {\n    console.error(\"[firebase.ts] Gagal menginisialisasi aplikasi Firebase:\", e);\n    // throw e; // Re-throw if you want to halt execution, or handle gracefully\n  }\n} else {\n  console.log(\"[firebase.ts] Menggunakan aplikasi Firebase yang sudah ada.\");\n  app = getApp();\n  console.log(\"[firebase.ts] Aplikasi Firebase yang ada. Project ID:\", app.options.projectId);\n}\n\ntry {\n  // @ts-ignore\n  db = getFirestore(app);\n  console.log(\"[firebase.ts] Instance Firestore didapatkan. Selalu menghubungkan ke Cloud Firestore.\");\n} catch (e) {\n   // @ts-ignore\n  console.error(\"[firebase.ts] Gagal mendapatkan instance Firestore:\", e?.message);\n  // @ts-ignore\n  console.error(\"[firebase.ts] Detail error Firestore:\", e);\n}\n\n\nexport { app, db };\n"],"names":[],"mappings":";;;;AACA;AAAA;AACA;AAAA;;;AAEA,0EAA0E;AAC1E,QAAQ,GAAG,CAAC;AACZ,QAAQ,GAAG,CAAC,uDAAuD,uCAA2C;AAE9G,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;AACP;AAEA,qCAAqC;AACrC,QAAQ,GAAG,CAAC,6CAA6C,KAAK,SAAS,CAAC,gBAAgB,MAAM;AAE9F,IAAI;AACJ,IAAI;AAEJ,QAAQ,GAAG,CAAC;AAEZ,IAAI,CAAC,eAAe,SAAS,IAAI,CAAC,eAAe,MAAM,EAAE;IACvD,QAAQ,KAAK,CAAC;IACd,QAAQ,KAAK,CAAC;IACd,QAAQ,KAAK,CAAC;IACd,QAAQ,KAAK,CAAC;IACd,QAAQ,KAAK,CAAC;AACd,uEAAuE;AACvE,kGAAkG;AACpG;AAGA,IAAI,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,KAAK,GAAG;IAC1B,QAAQ,GAAG,CAAC;IACZ,IAAI;QACF,MAAM,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE;QACpB,QAAQ,GAAG,CAAC,qEAAqE,IAAI,OAAO,CAAC,SAAS;IACxG,EAAE,OAAO,GAAG;QACV,QAAQ,KAAK,CAAC,2DAA2D;IACzE,2EAA2E;IAC7E;AACF,OAAO;IACL,QAAQ,GAAG,CAAC;IACZ,MAAM,CAAA,GAAA,oLAAA,CAAA,SAAM,AAAD;IACX,QAAQ,GAAG,CAAC,yDAAyD,IAAI,OAAO,CAAC,SAAS;AAC5F;AAEA,IAAI;IACF,aAAa;IACb,KAAK,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE;IAClB,QAAQ,GAAG,CAAC;AACd,EAAE,OAAO,GAAG;IACT,aAAa;IACd,QAAQ,KAAK,CAAC,uDAAuD,GAAG;IACxE,aAAa;IACb,QAAQ,KAAK,CAAC,yCAAyC;AACzD","debugId":null}},
    {"offset": {"line": 430, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28app%29/ai-cs-assistant/page.tsx"],"sourcesContent":["\n\"use client\";\n\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport AppHeader from '@/components/layout/AppHeader';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle, CardFooter } from '@/components/ui/card';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Label } from '@/components/ui/label';\nimport { Loader2, MessageSquareText, Sparkles, Copy, Send, User, Search, Bot, MessageCircle, ThumbsUp, ThumbsDown, Edit2, ShieldAlert } from 'lucide-react';\nimport { useToast } from '@/hooks/use-toast';\nimport { generateWhatsAppReply } from '@/ai/flows/cs-whatsapp-reply-flow';\nimport type { WhatsAppReplyOutput, ChatMessage } from '@/types/ai/cs-whatsapp-reply';\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\nimport { Input } from '@/components/ui/input';\nimport { ScrollArea } from '@/components/ui/scroll-area';\nimport { Separator } from '@/components/ui/separator';\nimport { db } from '@/lib/firebase';\nimport { collection, getDocs, query, orderBy, type Timestamp, onSnapshot, addDoc, serverTimestamp, where, limit, setDoc, doc } from 'firebase/firestore';\nimport type { Client } from '@/types/client';\nimport type { DirectMessage } from '@/types/directMessage';\nimport { cn } from '@/lib/utils';\nimport { v4 as uuidv4 } from 'uuid';\n\ninterface ChatMessageUi extends Omit<DirectMessage, 'timestamp' | 'id'> {\n  id: string;\n  timestamp: string;\n}\n\ninterface PlaygroundMessage {\n  id: string;\n  sender: 'user' | 'ai';\n  text: string;\n  timestamp: string;\n  feedback?: 'good' | 'bad' | null;\n  correction?: string;\n  isEditingCorrection?: boolean;\n  currentCorrectionText?: string;\n}\n\ninterface Customer {\n  id: string;\n  name: string;\n  avatarUrl?: string;\n  lastMessageTimestamp: string;\n  lastMessage: string;\n  unreadCount: number;\n  phone?: string;\n}\n\nfunction formatPhoneNumberForMatching(number: string): string {\n  let cleaned = number.replace(/\\D/g, '');\n  if (cleaned.startsWith('0')) {\n    cleaned = '62' + cleaned.substring(1);\n  } else if (cleaned.startsWith('8') && cleaned.length >= 9 && cleaned.length <= 13) {\n    cleaned = '62' + cleaned;\n  } else if (!cleaned.startsWith('62') && !(cleaned.length < 9)) {\n     if (cleaned.length >= 9 && cleaned.length <=13 && !cleaned.startsWith('+')) {\n        cleaned = '62' + cleaned;\n    }\n  }\n  return cleaned;\n}\n\nconst AI_LOCK_DURATION_MS = 1 * 60 * 60 * 1000; // 1 jam\n\nexport default function AiCsAssistantPage() {\n  const [customerMessageInput, setCustomerMessageInput] = useState('');\n  const [currentPlaygroundInput, setCurrentPlaygroundInput] = useState('');\n  const [playgroundChatHistory, setPlaygroundChatHistory] = useState<PlaygroundMessage[]>([]);\n  const [isLoadingPlaygroundSuggestion, setIsLoadingPlaygroundSuggestion] = useState(false);\n\n  const { toast } = useToast();\n\n  const [customers, setCustomers] = useState<Customer[]>([]);\n  const [loadingCustomers, setLoadingCustomers] = useState(true);\n  const [selectedCustomer, setSelectedCustomer] = useState<Customer | null>(null);\n  const [chatHistory, setChatHistory] = useState<ChatMessageUi[]>([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const [isPlaygroundMode, setIsPlaygroundMode] = useState(false);\n  const [isSendingWhatsApp, setIsSendingWhatsApp] = useState(false);\n\n  const messagesEndRef = useRef<HTMLDivElement>(null);\n  const playgroundMessagesEndRef = useRef<HTMLDivElement>(null);\n  const unsubscribeChatRef = useRef<(() => void) | null>(null);\n\n\n  const scrollToBottom = (ref: React.RefObject<HTMLDivElement>) => {\n    ref.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    if (!isPlaygroundMode && selectedCustomer && chatHistory.length > 0) {\n      scrollToBottom(messagesEndRef);\n    }\n  }, [chatHistory, selectedCustomer, isPlaygroundMode]);\n\n  useEffect(() => {\n    if (isPlaygroundMode && playgroundChatHistory.length > 0) {\n      scrollToBottom(playgroundMessagesEndRef);\n    }\n  }, [playgroundChatHistory, isPlaygroundMode]);\n\n\n  const fetchCustomers = useCallback(async (): Promise<Customer[]> => {\n    console.log(\"Fetching actual customers from Firestore...\");\n    try {\n      const clientsCollectionRef = collection(db, 'clients');\n      const q = query(clientsCollectionRef, orderBy(\"name\"));\n      const querySnapshot = await getDocs(q);\n      const clientsData = querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() } as Client));\n\n      return clientsData.map(client => ({\n        id: client.id,\n        name: client.name,\n        avatarUrl: `https://placehold.co/40x40.png?text=${client.name.charAt(0)}`,\n        lastMessageTimestamp: client.lastVisit || 'N/A',\n        lastMessage: 'Klik untuk melihat chat...',\n        unreadCount: 0,\n        phone: client.phone ? formatPhoneNumberForMatching(client.phone) : undefined,\n      }));\n    } catch (error) {\n      console.error(\"Error fetching customers from Firestore: \", error);\n      toast({\n        title: \"Error Database\",\n        description: \"Gagal mengambil daftar pelanggan dari database.\",\n        variant: \"destructive\",\n      });\n      return [];\n    }\n  }, [toast]);\n\n  useEffect(() => {\n    const loadInitialData = async () => {\n      setLoadingCustomers(true);\n      try {\n        const fetchedCustomers = await fetchCustomers();\n        setCustomers(fetchedCustomers);\n      } catch (error) {\n        console.error(\"Failed to fetch customers:\", error);\n      } finally {\n        setLoadingCustomers(false);\n      }\n    };\n    loadInitialData();\n  }, [fetchCustomers]);\n\n  useEffect(() => {\n    if (unsubscribeChatRef.current) {\n      unsubscribeChatRef.current();\n      unsubscribeChatRef.current = null;\n    }\n\n    if (selectedCustomer && selectedCustomer.phone && !isPlaygroundMode) {\n      const formattedPhoneForQuery = selectedCustomer.phone; // Already formatted\n      const messagesRef = collection(db, 'directMessages');\n      const q = query(\n        messagesRef,\n        where(\"senderNumber\", \"==\", formattedPhoneForQuery),\n        orderBy(\"timestamp\", \"asc\")\n      );\n\n      unsubscribeChatRef.current = onSnapshot(q, (querySnapshot) => {\n        const history: ChatMessageUi[] = [];\n        querySnapshot.forEach((doc) => {\n          const data = doc.data() as DirectMessage;\n          history.push({\n            ...data,\n            id: doc.id,\n            timestamp: data.timestamp?.toDate().toLocaleTimeString('id-ID', { hour: '2-digit', minute: '2-digit' }) || 'N/A',\n          });\n        });\n        setChatHistory(history);\n      }, (error) => {\n        console.error(`Error fetching real-time chat for ${selectedCustomer.name}:`, error);\n        toast({\n          title: \"Error Real-time Chat\",\n          description: \"Gagal memuat pesan secara real-time.\",\n          variant: \"destructive\",\n        });\n      });\n    } else {\n      setChatHistory([]); // Clear chat if no customer selected or in playground mode\n    }\n\n    // Cleanup listener on component unmount or when selectedCustomer/isPlaygroundMode changes\n    return () => {\n      if (unsubscribeChatRef.current) {\n        unsubscribeChatRef.current();\n      }\n    };\n  }, [selectedCustomer, toast, isPlaygroundMode]);\n\n\n  const handleSelectPlayground = () => {\n    setIsPlaygroundMode(true);\n    setSelectedCustomer(null); // Clear selected customer\n    setCustomerMessageInput('');\n    setCurrentPlaygroundInput('');\n    setPlaygroundChatHistory([]);\n    if (unsubscribeChatRef.current) {\n      unsubscribeChatRef.current();\n      unsubscribeChatRef.current = null;\n    }\n  };\n\n  const handleCustomerSelect = async (customer: Customer) => {\n    setIsPlaygroundMode(false);\n    setSelectedCustomer(customer);\n    setCustomerMessageInput('');\n    // Chat history will be loaded by the useEffect hook for selectedCustomer\n  };\n\n  const handleSendPlaygroundMessage = async () => {\n    if (!currentPlaygroundInput.trim()) {\n      toast({\n        title: \"Input Kosong\",\n        description: \"Mohon masukkan pertanyaan untuk AI.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    const userMessageText = currentPlaygroundInput.trim();\n    const userMessage: PlaygroundMessage = {\n      id: uuidv4(),\n      sender: 'user',\n      text: userMessageText,\n      timestamp: new Date().toLocaleTimeString('id-ID', { hour: '2-digit', minute: '2-digit' }),\n    };\n\n    const updatedPlaygroundHistory = [...playgroundChatHistory, userMessage];\n    setPlaygroundChatHistory(updatedPlaygroundHistory);\n    setCurrentPlaygroundInput('');\n    setIsLoadingPlaygroundSuggestion(true);\n\n    const genkitChatHistory: ChatMessage[] = updatedPlaygroundHistory\n      .slice(0, -1) // Exclude the last user message as it's the current one\n      .map(msg => ({\n        role: msg.sender === 'user' ? 'user' : 'model',\n        content: msg.text,\n      }));\n\n    try {\n      const result: WhatsAppReplyOutput = await generateWhatsAppReply({\n        customerMessage: userMessageText,\n        chatHistory: genkitChatHistory,\n        // senderNumber is not relevant for playground mode\n      });\n\n      const aiMessage: PlaygroundMessage = {\n        id: uuidv4(),\n        sender: 'ai',\n        text: result.suggestedReply,\n        timestamp: new Date().toLocaleTimeString('id-ID', { hour: '2-digit', minute: '2-digit' }),\n        feedback: null,\n        currentCorrectionText: result.suggestedReply,\n      };\n      setPlaygroundChatHistory(prev => [...prev, aiMessage]);\n\n    } catch (error) {\n      console.error(\"Error generating AI reply for playground:\", error);\n      const errorMessage: PlaygroundMessage = {\n        id: uuidv4(),\n        sender: 'ai',\n        text: \"Maaf, terjadi kesalahan saat menghubungi AI. Silakan coba lagi.\",\n        timestamp: new Date().toLocaleTimeString('id-ID', { hour: '2-digit', minute: '2-digit' }),\n      };\n      setPlaygroundChatHistory(prev => [...prev, errorMessage]);\n      toast({\n        title: \"Error AI\",\n        description: \"Gagal mendapatkan respon dari AI.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsLoadingPlaygroundSuggestion(false);\n    }\n  };\n\n  const handlePlaygroundKeyDown = (event: React.KeyboardEvent<HTMLTextAreaElement>) => {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      event.preventDefault();\n      handleSendPlaygroundMessage();\n    }\n  };\n\n  const handleSendMessage = async () => {\n    if (!customerMessageInput.trim() || !selectedCustomer || isPlaygroundMode || !selectedCustomer.phone) {\n        toast({\n          title: \"Tidak Dapat Mengirim\",\n          description: \"Pesan kosong, pelanggan tidak dipilih, atau nomor HP pelanggan tidak tersedia.\",\n          variant: \"destructive\",\n        });\n        return;\n    }\n\n    const textToSend = customerMessageInput.trim();\n    const originalInput = customerMessageInput; // Save for potential restore on error\n    setCustomerMessageInput(''); // Clear input immediately\n    setIsSendingWhatsApp(true);\n    const customerPhoneNumber = selectedCustomer.phone; // Ensure phone is available\n\n    try {\n      // 1. Send message via local WhatsApp server\n      const response = await fetch('/api/whatsapp/send', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ number: customerPhoneNumber, message: textToSend }),\n      });\n      const result = await response.json();\n\n      if (response.ok && result.success) {\n        toast({\n          title: \"Pesan Terkirim ke WhatsApp\",\n          description: `Pesan Anda sedang dikirim ke ${selectedCustomer.name}.`,\n        });\n\n        // 2. Save CS manual reply to directMessages\n        const directMessagesRef = collection(db, 'directMessages');\n        const csMessageData: Omit<DirectMessage, 'id'> = {\n          customerId: selectedCustomer.id,\n          customerName: selectedCustomer.name,\n          senderNumber: customerPhoneNumber,\n          text: textToSend,\n          sender: 'user', // Mark as from CS user\n          timestamp: serverTimestamp() as any, // Cast to any for serverTimestamp\n          read: true, // CS message is \"read\" by CS\n        };\n        await addDoc(directMessagesRef, csMessageData);\n        console.log(\"CS manual reply saved to directMessages.\");\n\n        // 3. Set AI intervention lock\n        try {\n            const lockResponse = await fetch('/api/whatsapp/set-intervention-lock', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ senderNumber: customerPhoneNumber }),\n            });\n            const lockResult = await lockResponse.json();\n            if (lockResponse.ok && lockResult.success) {\n                console.log(`AI lock set for ${customerPhoneNumber} via API call from UI.`);\n            } else {\n                console.warn(`Failed to set AI lock for ${customerPhoneNumber} via API: ${lockResult.error}`);\n            }\n        } catch (lockError) {\n            console.error(`Error calling set-intervention-lock API from UI:`, lockError);\n        }\n\n      } else {\n        throw new Error(result.error || 'Gagal mengirim pesan via server lokal.');\n      }\n    } catch (error) {\n      console.error(\"Error sending WhatsApp message or saving to DB:\", error);\n      toast({\n        title: \"Gagal Mengirim Pesan\",\n        description: error instanceof Error ? error.message : \"Terjadi kesalahan.\",\n        variant: \"destructive\",\n      });\n      setCustomerMessageInput(originalInput); // Restore input on error\n    } finally {\n      setIsSendingWhatsApp(false);\n    }\n  };\n\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLTextAreaElement>) => {\n    if (event.key === 'Enter' && !event.shiftKey && !isPlaygroundMode && selectedCustomer) {\n      event.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  const handleSetManualLock = async () => {\n    if (!selectedCustomer || !selectedCustomer.phone) {\n      toast({ title: \"Info\", description: \"Pilih pelanggan dengan nomor HP untuk mengaktifkan lock AI.\", variant: \"default\" });\n      return;\n    }\n    setIsSendingWhatsApp(true); // Reuse loading state for visual feedback\n    try {\n      const response = await fetch('/api/whatsapp/set-intervention-lock', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ senderNumber: selectedCustomer.phone }),\n      });\n      const result = await response.json();\n      if (response.ok && result.success) {\n        toast({ title: \"Lock AI Aktif\", description: `AI tidak akan merespons ${selectedCustomer.name} selama 1 jam.`, variant: \"default\" });\n      } else {\n        throw new Error(result.error || \"Gagal mengaktifkan lock AI.\");\n      }\n    } catch (error) {\n      console.error(\"Error manually setting AI lock:\", error);\n      toast({ title: \"Error Lock AI\", description: error instanceof Error ? error.message : \"Terjadi kesalahan.\", variant: \"destructive\" });\n    } finally {\n      setIsSendingWhatsApp(false);\n    }\n  };\n\n  const handlePlaygroundFeedback = (messageId: string, feedback: 'good' | 'bad') => {\n    setPlaygroundChatHistory(prevHistory =>\n      prevHistory.map(msg =>\n        msg.id === messageId\n          ? { ...msg, feedback, isEditingCorrection: feedback === 'bad' && !msg.correction, currentCorrectionText: msg.currentCorrectionText ?? msg.text }\n          : msg\n      )\n    );\n  };\n\n  const handlePlaygroundCorrectionChange = (messageId: string, text: string) => {\n    setPlaygroundChatHistory(prevHistory =>\n      prevHistory.map(msg =>\n        msg.id === messageId ? { ...msg, currentCorrectionText: text } : msg\n      )\n    );\n  };\n\n  const handleSavePlaygroundCorrection = (messageId: string) => {\n    setPlaygroundChatHistory(prevHistory =>\n      prevHistory.map(msg =>\n        msg.id === messageId\n          ? { ...msg, correction: msg.currentCorrectionText, isEditingCorrection: false }\n          : msg\n      )\n    );\n    toast({ title: \"Koreksi Disimpan\", description: \"Feedback Anda telah dicatat.\", variant: \"default\" });\n  };\n\n\n  const filteredCustomers = customers.filter(customer =>\n    customer.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n    (customer.phone && customer.phone.includes(searchTerm)) // Pastikan phone ada sebelum includes\n  );\n\n\n  return (\n    <div className=\"flex flex-col h-full bg-background\">\n      <AppHeader title=\"Asisten CS AI untuk WhatsApp\" />\n      <div className=\"flex-1 grid grid-cols-1 md:grid-cols-3 lg:grid-cols-4 overflow-hidden\">\n\n        {/* Kolom Daftar Pelanggan & Playground */}\n        <div className=\"col-span-1 md:col-span-1 lg:col-span-1 border-r border-border bg-card flex flex-col\">\n          <CardHeader className=\"p-4\">\n            <CardTitle className=\"text-lg flex items-center\">\n              <User className=\"mr-2 h-5 w-5\" /> Daftar Pelanggan\n            </CardTitle>\n            <div className=\"relative mt-2\">\n              <Search className=\"absolute left-2.5 top-2.5 h-4 w-4 text-muted-foreground\" />\n              <Input\n                type=\"search\"\n                placeholder=\"Cari pelanggan (nama/HP)...\"\n                className=\"pl-8 w-full h-9\"\n                value={searchTerm}\n                onChange={(e) => setSearchTerm(e.target.value)}\n              />\n            </div>\n          </CardHeader>\n\n          {/* Tombol Playground */}\n          <div\n            key=\"ai-playground\"\n            className={cn(\n              \"p-3 hover:bg-muted cursor-pointer border-b border-t border-border\",\n              isPlaygroundMode ? 'bg-accent text-accent-foreground' : ''\n            )}\n            onClick={handleSelectPlayground}\n          >\n            <div className=\"flex items-center space-x-3\">\n              <Avatar className={cn(\n                \"h-9 w-9 flex items-center justify-center\",\n                isPlaygroundMode ? \"bg-accent-foreground text-accent\" : \"bg-primary/10 text-primary\"\n              )}>\n                <Bot className=\"h-5 w-5\" />\n              </Avatar>\n              <div className=\"flex-1 min-w-0\">\n                <p className=\"text-sm font-medium truncate\">AI Playground</p>\n                <p className=\"text-xs text-muted-foreground truncate\">Uji coba AI tanpa pelanggan.</p>\n              </div>\n            </div>\n          </div>\n          <ScrollArea className=\"flex-grow\">\n            <CardContent className=\"p-0\">\n              {loadingCustomers ? (\n                <div className=\"p-4 text-center text-muted-foreground\">\n                  <Loader2 className=\"h-6 w-6 animate-spin mx-auto my-4\" />\n                  Memuat pelanggan...\n                </div>\n              ) : filteredCustomers.length === 0 && searchTerm ? (\n                 <p className=\"p-4 text-center text-muted-foreground\">\n                  Pelanggan tidak ditemukan.\n                 </p>\n              ) : filteredCustomers.length === 0 && !searchTerm ? (\n                 <p className=\"p-4 text-center text-muted-foreground\">\n                  Belum ada pelanggan.\n                 </p>\n              ): (\n                filteredCustomers.map((customer) => (\n                  <div\n                    key={customer.id}\n                    className={`p-3 hover:bg-muted cursor-pointer border-b border-border last:border-b-0 ${selectedCustomer?.id === customer.id && !isPlaygroundMode ? 'bg-accent/20' : ''}`}\n                    onClick={() => handleCustomerSelect(customer)}\n                  >\n                    <div className=\"flex items-center space-x-3\">\n                      <Avatar className=\"h-9 w-9\">\n                        <AvatarImage src={customer.avatarUrl} alt={customer.name} data-ai-hint=\"avatar pelanggan\" />\n                        <AvatarFallback>{customer.name.charAt(0)}</AvatarFallback>\n                      </Avatar>\n                      <div className=\"flex-1 min-w-0\">\n                        <p className=\"text-sm font-medium truncate\">{customer.name}</p>\n                        <p className=\"text-xs text-muted-foreground truncate\">{customer.phone || 'No HP tidak ada'}</p>\n                      </div>\n                    </div>\n                  </div>\n                ))\n              )}\n            </CardContent>\n          </ScrollArea>\n        </div>\n\n        {/* Kolom Chat atau Playground View */}\n        <div className=\"col-span-1 md:col-span-2 lg:col-span-3 flex flex-col bg-background\">\n          {isPlaygroundMode ? (\n            <>\n              <CardHeader className=\"p-4 border-b bg-card\">\n                <CardTitle className=\"text-lg flex items-center\"><Bot className=\"mr-2 h-6 w-6 text-primary\" /> AI Playground</CardTitle>\n                <CardDescription>Uji coba langsung kemampuan AI. Berikan feedback untuk membantu AI belajar.</CardDescription>\n              </CardHeader>\n              <ScrollArea className=\"flex-1 p-4 space-y-4 bg-card/50\">\n                {playgroundChatHistory.map((message) => (\n                  <div key={message.id}>\n                    <div\n                      className={`flex ${message.sender === 'user' ? 'justify-end' : 'justify-start'}`}\n                    >\n                      <div\n                        className={`max-w-xs lg:max-w-md px-4 py-2 rounded-xl shadow ${\n                          message.sender === 'user'\n                            ? 'bg-primary text-primary-foreground'\n                            : 'bg-secondary text-secondary-foreground'\n                        }`}\n                      >\n                        <p className=\"text-sm whitespace-pre-wrap\">{message.text}</p>\n                        <p className={`text-xs mt-1 ${message.sender === 'user' ? 'text-primary-foreground/80' : 'text-secondary-foreground/80'} text-right`}>\n                          {message.timestamp}\n                        </p>\n                      </div>\n                    </div>\n                    {message.sender === 'ai' && (\n                      <div className=\"flex justify-start mt-1.5 ml-1\">\n                        <Button\n                          variant=\"ghost\"\n                          size=\"icon\"\n                          className={cn(\"h-7 w-7 hover:bg-green-100 dark:hover:bg-green-800\", message.feedback === 'good' && \"bg-green-100 text-green-700 dark:bg-green-800 dark:text-green-300\")}\n                          onClick={() => handlePlaygroundFeedback(message.id, 'good')}\n                        >\n                          <ThumbsUp className=\"h-4 w-4\" />\n                        </Button>\n                        <Button\n                          variant=\"ghost\"\n                          size=\"icon\"\n                          className={cn(\"h-7 w-7 ml-1 hover:bg-red-100 dark:hover:bg-red-800\", message.feedback === 'bad' && \"bg-red-100 text-red-700 dark:bg-red-800 dark:text-red-300\")}\n                          onClick={() => handlePlaygroundFeedback(message.id, 'bad')}\n                        >\n                          <ThumbsDown className=\"h-4 w-4\" />\n                        </Button>\n                      </div>\n                    )}\n                    {message.sender === 'ai' && message.feedback === 'bad' && message.isEditingCorrection && !message.correction && (\n                      <div className=\"mt-2 ml-1 space-y-2 max-w-md\">\n                        <Textarea\n                          placeholder=\"Tulis koreksi Anda di sini...\"\n                          value={message.currentCorrectionText || ''}\n                          onChange={(e) => handlePlaygroundCorrectionChange(message.id, e.target.value)}\n                          rows={3}\n                          className=\"text-sm bg-background\"\n                        />\n                        <Button size=\"sm\" onClick={() => handleSavePlaygroundCorrection(message.id)} className=\"bg-accent text-accent-foreground hover:bg-accent/90\">\n                          <Edit2 className=\"mr-2 h-4 w-4\" /> Simpan Koreksi\n                        </Button>\n                      </div>\n                    )}\n                     {message.sender === 'ai' && message.correction && (\n                      <Card className=\"mt-2 ml-1 p-3 border-green-500 bg-green-50 dark:bg-green-900/30 max-w-md\">\n                        <p className=\"text-xs font-medium text-green-700 dark:text-green-300\">Koreksi Anda:</p>\n                        <p className=\"text-sm text-green-800 dark:text-green-200 whitespace-pre-wrap\">{message.correction}</p>\n                      </Card>\n                    )}\n                  </div>\n                ))}\n                 {playgroundChatHistory.length === 0 && (\n                    <p className=\"text-center text-muted-foreground py-10\">Mulai percakapan dengan AI di bawah.</p>\n                )}\n                <div ref={playgroundMessagesEndRef} />\n              </ScrollArea>\n              <Separator />\n              <Card className=\"rounded-none border-0 border-t shadow-none\">\n                <CardContent className=\"p-4\">\n                  <div className=\"flex items-end space-x-2\">\n                    <Textarea\n                      id=\"playground-chat-input\"\n                      placeholder=\"Ketik pertanyaan atau skenario Anda...\"\n                      value={currentPlaygroundInput}\n                      onChange={(e) => setCurrentPlaygroundInput(e.target.value)}\n                      onKeyDown={handlePlaygroundKeyDown}\n                      rows={2}\n                      disabled={isLoadingPlaygroundSuggestion}\n                      className=\"bg-background flex-1 resize-none\"\n                    />\n                    <Button\n                      size=\"icon\"\n                      onClick={handleSendPlaygroundMessage}\n                      disabled={isLoadingPlaygroundSuggestion || !currentPlaygroundInput.trim()}\n                      className=\"h-10 w-10 shrink-0\"\n                      aria-label=\"Kirim Pesan ke AI\"\n                    >\n                      {isLoadingPlaygroundSuggestion ? <Loader2 className=\"h-5 w-5 animate-spin\" /> : <Send className=\"h-5 w-5\" />}\n                    </Button>\n                  </div>\n                </CardContent>\n              </Card>\n            </>\n          ) : !selectedCustomer ? (\n            <div className=\"flex-1 flex flex-col items-center justify-center text-center p-6\">\n              <MessageSquareText className=\"h-16 w-16 text-muted-foreground mb-4\" />\n              <p className=\"text-xl text-muted-foreground\">Pilih pelanggan untuk memulai percakapan</p>\n              <p className=\"text-sm text-muted-foreground\">atau masuk ke mode Playground AI dari daftar di samping.</p>\n            </div>\n          ) : (\n            <>\n              <CardHeader className=\"p-4 border-b bg-card\">\n                <div className=\"flex justify-between items-center\">\n                    <div>\n                        <CardTitle className=\"text-lg flex items-center\">\n                        Percakapan dengan: {selectedCustomer.name}\n                        </CardTitle>\n                        <CardDescription>{selectedCustomer.phone || \"Nomor HP tidak tersedia\"}</CardDescription>\n                    </div>\n                    <Button\n                        variant=\"outline\"\n                        size=\"sm\"\n                        onClick={handleSetManualLock}\n                        disabled={isSendingWhatsApp || !selectedCustomer.phone}\n                        title=\"Aktifkan lock AI selama 1 jam (jika Anda baru balas dari HP)\"\n                    >\n                        <ShieldAlert className=\"mr-2 h-4 w-4\" />\n                        Ambil Alih (Lock AI 1 Jam)\n                    </Button>\n                </div>\n              </CardHeader>\n              <ScrollArea className=\"flex-1 p-4 space-y-4 bg-card/50\">\n                {chatHistory.map((message) => (\n                  <div\n                    key={message.id}\n                    className={`flex ${message.sender === 'customer' ? 'justify-start' : 'justify-end'}`}\n                  >\n                    <div\n                      className={`max-w-xs lg:max-w-md px-4 py-2 rounded-xl shadow ${\n                        message.sender === 'customer'\n                          ? 'bg-muted text-muted-foreground'\n                          : message.sender === 'user' // Staf CS manual reply\n                            ? 'bg-primary text-primary-foreground'\n                            : 'bg-secondary text-secondary-foreground' // AI auto-reply\n                      }`}\n                    >\n                      <p className=\"text-sm whitespace-pre-wrap\">{message.text}</p>\n                      <p className={`text-xs mt-1 ${\n                        message.sender === 'customer' ? 'text-muted-foreground/80'\n                        : message.sender === 'user' ? 'text-primary-foreground/80'\n                        : 'text-secondary-foreground/80'\n                        } text-right`}>\n                        {message.timestamp} {message.sender === 'ai' && '(AI Otomatis)'}\n                      </p>\n                    </div>\n                  </div>\n                ))}\n                {chatHistory.length === 0 && (\n                    <p className=\"text-center text-muted-foreground py-10\">Belum ada riwayat chat untuk pelanggan ini.</p>\n                )}\n                <div ref={messagesEndRef} />\n              </ScrollArea>\n\n              <Separator />\n              <Card className=\"rounded-none border-0 border-t shadow-none\">\n                <CardHeader className=\"p-4\">\n                  <CardTitle className=\"text-lg flex items-center\">\n                    <MessageCircle className=\"mr-2 h-5 w-5 text-primary\" />\n                    Balas Pesan Pelanggan\n                  </CardTitle>\n                </CardHeader>\n                <CardContent className=\"p-4\">\n                  <div className=\"flex items-end space-x-2\">\n                    <Textarea\n                      id=\"customer-message-input\"\n                      placeholder=\"Ketik balasan Anda di sini...\"\n                      value={customerMessageInput}\n                      onChange={(e) => setCustomerMessageInput(e.target.value)}\n                      onKeyDown={handleKeyDown}\n                      rows={3}\n                      disabled={isSendingWhatsApp || !selectedCustomer?.phone}\n                      className=\"bg-background flex-1 resize-none\"\n                    />\n                    <Button\n                      size=\"icon\"\n                      onClick={handleSendMessage}\n                      disabled={isSendingWhatsApp || !customerMessageInput.trim() || !selectedCustomer?.phone}\n                      className=\"h-10 w-10 shrink-0\"\n                      aria-label=\"Kirim Pesan Manual\"\n                    >\n                      {isSendingWhatsApp ? <Loader2 className=\"h-5 w-5 animate-spin\" /> : <Send className=\"h-5 w-5\" />}\n                    </Button>\n                  </div>\n                   {!selectedCustomer?.phone && (\n                         <p className=\"text-xs text-destructive mt-1\">Nomor HP pelanggan tidak tersedia untuk pengiriman WhatsApp.</p>\n                       )}\n                </CardContent>\n              </Card>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}