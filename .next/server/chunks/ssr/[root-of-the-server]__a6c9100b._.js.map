{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/lib/firebase.ts"],"sourcesContent":["\nimport { initializeApp, getApp, getApps, type FirebaseApp } from \"firebase/app\";\nimport { getFirestore, type Firestore } from \"firebase/firestore\";\n\n// Minimal logging\nconsole.log(\"[firebase.ts] Initializing Firebase...\");\n\nconst firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n};\n\nif (!firebaseConfig.projectId || !firebaseConfig.apiKey) {\n  console.error(\"[firebase.ts] FATAL ERROR: Firebase projectId or apiKey is MISSING in environment variables.\");\n}\n\nlet app: FirebaseApp;\nlet db: Firestore;\n\nif (getApps().length === 0) {\n  try {\n    app = initializeApp(firebaseConfig);\n    console.log(\"[firebase.ts] Firebase app initialized. Project ID:\", app.options.projectId);\n  } catch (e: any) {\n    console.error(\"[firebase.ts] FAILED to initialize Firebase app:\", e.message);\n    // @ts-ignore\n    app = null;\n  }\n} else {\n  app = getApp();\n  console.log(\"[firebase.ts] Using existing Firebase app. Project ID:\", app.options.projectId);\n}\n\n// @ts-ignore\nif (app) {\n  try {\n    // @ts-ignore\n    db = getFirestore(app);\n    console.log(\"[firebase.ts] Firestore instance obtained.\");\n  } catch (e: any) {\n    console.error(\"[firebase.ts] FAILED to get Firestore instance:\", e?.message);\n  }\n} else {\n    console.error(\"[firebase.ts] Firebase app not properly initialized, cannot get Firestore.\");\n}\n\nexport { app, db };\n"],"names":[],"mappings":";;;;AACA;AAAA;AACA;AAAA;;;AAEA,kBAAkB;AAClB,QAAQ,GAAG,CAAC;AAEZ,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;AACP;AAEA,IAAI,CAAC,eAAe,SAAS,IAAI,CAAC,eAAe,MAAM,EAAE;IACvD,QAAQ,KAAK,CAAC;AAChB;AAEA,IAAI;AACJ,IAAI;AAEJ,IAAI,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,KAAK,GAAG;IAC1B,IAAI;QACF,MAAM,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE;QACpB,QAAQ,GAAG,CAAC,uDAAuD,IAAI,OAAO,CAAC,SAAS;IAC1F,EAAE,OAAO,GAAQ;QACf,QAAQ,KAAK,CAAC,oDAAoD,EAAE,OAAO;QAC3E,aAAa;QACb,MAAM;IACR;AACF,OAAO;IACL,MAAM,CAAA,GAAA,oLAAA,CAAA,SAAM,AAAD;IACX,QAAQ,GAAG,CAAC,0DAA0D,IAAI,OAAO,CAAC,SAAS;AAC7F;AAEA,aAAa;AACb,IAAI,KAAK;IACP,IAAI;QACF,aAAa;QACb,KAAK,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE;QAClB,QAAQ,GAAG,CAAC;IACd,EAAE,OAAO,GAAQ;QACf,QAAQ,KAAK,CAAC,mDAAmD,GAAG;IACtE;AACF,OAAO;IACH,QAAQ,KAAK,CAAC;AAClB","debugId":null}},
    {"offset": {"line": 264, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["\nimport '@/lib/firebase'; // Ensure Firebase is initialized early\nimport {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai'; // Impor plugin Google AI\n\nif (!process.env.GOOGLE_API_KEY) {\n  const errorMessage = \"Kesalahan Konfigurasi: GOOGLE_API_KEY tidak ditemukan di environment variables. Ini dibutuhkan oleh plugin Google AI. Pastikan sudah di-set di file .env Anda.\";\n  console.error(`\\n\\n🛑 ${errorMessage}\\n\\n`);\n  throw new Error(errorMessage);\n}\n\nexport const ai = genkit({\n  plugins: [\n    googleAI(), // Gunakan plugin Google AI\n  ],\n  model: 'googleai/gemini-1.5-flash-latest', // Model diubah ke Gemini 1.5 Flash terbaru\n  // Opsi telemetry tidak lagi dikonfigurasi di sini untuk Genkit v1.x\n  // Jika butuh logging, konfigurasi dilakukan secara berbeda atau via environment.\n});\n\n"],"names":[],"mappings":";;;AACA,8MAAyB,uCAAuC;AAChE;AAAA;AACA,8TAA8C,yBAAyB;AAAvE;;;;AAEA,IAAI,CAAC,QAAQ,GAAG,CAAC,cAAc,EAAE;IAC/B,MAAM,eAAe;IACrB,QAAQ,KAAK,CAAC,CAAC,OAAO,EAAE,aAAa,IAAI,CAAC;IAC1C,MAAM,IAAI,MAAM;AAClB;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QACP,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KACR;IACD,OAAO;AAGT","debugId":null}},
    {"offset": {"line": 301, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/tools/cari-size-motor-tool.ts"],"sourcesContent":["'use server';\n/**\n * @fileOverview Genkit tool for finding the size of a motorcycle model.\n *\n * - cariSizeMotorTool - The Genkit tool definition.\n * - CariSizeMotorInput - Zod type for the tool's input.\n * - CariSizeMotorOutput - Zod type for the tool's output.\n */\n\nimport { ai } from '@/ai/genkit';\nimport { z } from 'zod';\nimport { db } from '@/lib/firebase';\nimport { collection, query as firestoreQuery, where, getDocs, limit } from 'firebase/firestore';\n\n// Schemas are NOT exported from here for 'use server' compatibility if tool is imported by a server module\nconst CariSizeMotorInputSchema = z.object({\n  namaMotor: z.string().min(1, \"Nama motor tidak boleh kosong.\").describe('Nama atau model motor yang ingin dicari ukurannya, contoh: NMAX, PCX, Vario.'),\n});\nexport type CariSizeMotorInput = z.infer<typeof CariSizeMotorInputSchema>;\n\nconst CariSizeMotorOutputSchema = z.object({\n  success: z.boolean().describe('Apakah pencarian berhasil atau tidak.'),\n  size: z.string().optional().describe('Ukuran motor (S, M, L, XL) jika ditemukan.'),\n  message: z.string().describe('Pesan hasil pencarian, termasuk ukuran jika berhasil atau pesan error jika gagal.'),\n  vehicleModelFound: z.string().optional().describe('Nama model motor yang sebenarnya ditemukan di database.'),\n});\nexport type CariSizeMotorOutput = z.infer<typeof CariSizeMotorOutputSchema>;\n\n// This function contains the actual server-side logic (DB access)\nasync function findMotorSize(input: CariSizeMotorInput): Promise<CariSizeMotorOutput> {\n    const { namaMotor } = input;\n    const namaMotorLower = namaMotor.toLowerCase().trim();\n    console.log(`[findMotorSize] Mencari ukuran untuk: \"${namaMotorLower}\"`);\n\n    if (!db) {\n      console.error(\"[findMotorSize] Firestore DB (db) is not initialized.\");\n      return { success: false, message: \"Database tidak terhubung, tidak bisa mencari ukuran motor.\" };\n    }\n\n    try {\n      const vehicleTypesRef = collection(db, 'vehicleTypes');\n      let q;\n      let querySnapshot;\n      let foundVehicleData: any = null;\n\n      q = firestoreQuery(vehicleTypesRef, where('aliases', 'array-contains', namaMotorLower), limit(1));\n      querySnapshot = await getDocs(q);\n\n      if (!querySnapshot.empty) {\n        foundVehicleData = querySnapshot.docs[0].data();\n      } else {\n        q = firestoreQuery(vehicleTypesRef, where('model_lowercase', '==', namaMotorLower), limit(1));\n        querySnapshot = await getDocs(q);\n        if (!querySnapshot.empty) {\n          foundVehicleData = querySnapshot.docs[0].data();\n        } else {\n          const allVehiclesSnapshot = await getDocs(vehicleTypesRef);\n          for (const doc of allVehiclesSnapshot.docs) {\n            const vehicle = doc.data();\n            if (vehicle.model && vehicle.model.toLowerCase() === namaMotorLower) {\n              foundVehicleData = vehicle;\n              break;\n            }\n          }\n        }\n      }\n\n      if (foundVehicleData && foundVehicleData.size) {\n        return {\n          success: true,\n          size: foundVehicleData.size,\n          message: `Motor ${foundVehicleData.model} (${namaMotor}) termasuk ukuran ${foundVehicleData.size}.`,\n          vehicleModelFound: foundVehicleData.model,\n        };\n      } else {\n        return {\n          success: false,\n          message: `Maaf, Zoya tidak menemukan ukuran untuk motor \"${namaMotor}\". Mungkin bisa coba nama model yang lebih spesifik atau umum?`,\n        };\n      }\n    } catch (error) {\n      console.error(\"[findMotorSize] Error saat mencari ukuran motor:\", error);\n      return {\n        success: false,\n        message: \"Terjadi kesalahan internal saat mencari ukuran motor. Coba lagi nanti.\",\n      };\n    }\n}\n\nexport const cariSizeMotorTool = ai.defineTool(\n  {\n    name: 'cariSizeMotor',\n    description: 'Mencari ukuran (S, M, L, XL) untuk model motor tertentu. Gunakan jika perlu tahu ukuran motor untuk menentukan harga layanan atau informasi lain, atau jika user menanyakan ukuran motornya.',\n    inputSchema: CariSizeMotorInputSchema,\n    outputSchema: CariSizeMotorOutputSchema,\n  },\n  findMotorSize\n);\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 410, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/types/aiToolSchemas.ts"],"sourcesContent":["\nimport { z } from 'zod';\n\n// Skema untuk varian produk/layanan yang akan dikembalikan oleh tool\nconst ProductVariantInfoSchema = z.object({\n  name: z.string().describe(\"Nama varian.\"),\n  price: z.number().describe(\"Harga varian.\"),\n  pointsAwarded: z.number().optional().describe(\"Poin yang diberikan untuk varian ini.\"),\n  estimatedDuration: z.string().optional().describe(\"Estimasi durasi pengerjaan varian ini (jika layanan).\"),\n});\nexport type ProductVariantInfo = z.infer<typeof ProductVariantInfoSchema>;\n\n// Skema untuk informasi produk/layanan yang akan dikembalikan oleh tool\nexport const ProductServiceInfoSchema = z.object({\n  id: z.string().describe(\"ID unik produk/layanan.\"),\n  name: z.string().describe(\"Nama produk atau layanan.\"),\n  type: z.enum(['Layanan', 'Produk']).describe(\"Jenis item, apakah 'Layanan' atau 'Produk'.\"),\n  category: z.string().describe(\"Kategori produk/layanan.\"),\n  price: z.number().describe(\"Harga dasar produk/layanan. Bisa 0 jika harga ditentukan oleh varian.\"),\n  description: z.string().optional().describe(\"Deskripsi singkat produk/layanan.\"),\n  pointsAwarded: z.number().optional().describe(\"Poin loyalitas yang diberikan untuk produk/layanan dasar ini.\"),\n  estimatedDuration: z.string().optional().describe(\"Estimasi durasi pengerjaan (jika ini adalah layanan).\"),\n  variants: z.array(ProductVariantInfoSchema).optional().describe(\"Daftar varian yang tersedia untuk produk/layanan ini.\"),\n});\nexport type ProductServiceInfo = z.infer<typeof ProductServiceInfoSchema>;\n\n// Skema untuk informasi motor klien\nconst ClientMotorcycleInfoSchema = z.object({\n  name: z.string().describe(\"Nama atau model motor.\"),\n  licensePlate: z.string().describe(\"Plat nomor motor.\"),\n});\nexport type ClientMotorcycleInfo = z.infer<typeof ClientMotorcycleInfoSchema>;\n\n// Skema untuk informasi klien yang akan dikembalikan oleh tool\nexport const ClientInfoSchema = z.object({\n  id: z.string().describe(\"ID unik klien.\"),\n  name: z.string().describe(\"Nama lengkap klien.\"),\n  phone: z.string().describe(\"Nomor telepon klien.\"),\n  loyaltyPoints: z.number().describe(\"Jumlah poin loyalitas yang dimiliki klien.\"),\n  motorcycles: z.array(ClientMotorcycleInfoSchema).optional().describe(\"Daftar sepeda motor yang terdaftar atas nama klien ini.\"),\n  lastVisit: z.string().optional().describe(\"Tanggal kunjungan terakhir klien (format YYYY-MM-DD).\"),\n});\nexport type ClientInfo = z.infer<typeof ClientInfoSchema>;\n"],"names":[],"mappings":";;;;AACA;AAAA;;AAEA,qEAAqE;AACrE,MAAM,2BAA2B,iLAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACxC,MAAM,iLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC1B,OAAO,iLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC3B,eAAe,iLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;IAC9C,mBAAmB,iLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;AACpD;AAIO,MAAM,2BAA2B,iLAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC/C,IAAI,iLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACxB,MAAM,iLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC1B,MAAM,iLAAA,CAAA,IAAC,CAAC,IAAI,CAAC;QAAC;QAAW;KAAS,EAAE,QAAQ,CAAC;IAC7C,UAAU,iLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC9B,OAAO,iLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC3B,aAAa,iLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;IAC5C,eAAe,iLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;IAC9C,mBAAmB,iLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;IAClD,UAAU,iLAAA,CAAA,IAAC,CAAC,KAAK,CAAC,0BAA0B,QAAQ,GAAG,QAAQ,CAAC;AAClE;AAGA,oCAAoC;AACpC,MAAM,6BAA6B,iLAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC1C,MAAM,iLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC1B,cAAc,iLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACpC;AAIO,MAAM,mBAAmB,iLAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACvC,IAAI,iLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACxB,MAAM,iLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC1B,OAAO,iLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC3B,eAAe,iLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IACnC,aAAa,iLAAA,CAAA,IAAC,CAAC,KAAK,CAAC,4BAA4B,QAAQ,GAAG,QAAQ,CAAC;IACrE,WAAW,iLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,GAAG,QAAQ,CAAC;AAC5C","debugId":null}},
    {"offset": {"line": 457, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/tools/cariInfoLayananTool.ts"],"sourcesContent":["'use server';\n/**\n * @fileOverview Genkit tool for searching services by keyword.\n *\n * - cariInfoLayananTool - The Genkit tool definition.\n * - CariInfoLayananInput - Zod type for the tool's input.\n * - CariInfoLayananOutput - Zod type for the tool's output.\n */\n\nimport { ai } from '@/ai/genkit';\nimport { z } from 'zod';\nimport { db } from '@/lib/firebase';\nimport { collection, query as firestoreQuery, getDocs } from 'firebase/firestore';\nimport type { ProductServiceInfo } from '@/types/aiToolSchemas';\nimport { ProductServiceInfoSchema } from '@/types/aiToolSchemas';\n\n// Schemas are NOT exported from here\nconst CariInfoLayananInputSchema = z.object({\n  keyword: z.string().min(1, \"Kata kunci pencarian tidak boleh kosong.\").describe('Kata kunci untuk mencari layanan, mis. \"cuci\", \"coating\", \"detailing\".'),\n});\nexport type CariInfoLayananInput = z.infer<typeof CariInfoLayananInputSchema>;\n\nconst CariInfoLayananOutputSchema = z.array(ProductServiceInfoSchema).describe(\"Daftar layanan yang cocok dengan kata kunci, bisa kosong.\");\nexport type CariInfoLayananOutput = z.infer<typeof CariInfoLayananOutputSchema>;\n\nasync function findLayananByKeyword(input: CariInfoLayananInput): Promise<CariInfoLayananOutput> {\n  const { keyword } = input;\n  const keywordLower = keyword.toLowerCase().trim();\n  console.log(`[findLayananByKeyword] Mencari layanan dengan keyword: \"${keywordLower}\"`);\n\n  if (!db) {\n    console.error(\"[findLayananByKeyword] Firestore DB (db) is not initialized.\");\n    return [];\n  }\n\n  const matchingServices: ProductServiceInfo[] = [];\n  try {\n    const servicesCollectionRef = collection(db, 'services');\n    const q = firestoreQuery(servicesCollectionRef);\n    const querySnapshot = await getDocs(q);\n\n    querySnapshot.forEach((docSnap) => {\n      const serviceData = docSnap.data();\n      const serviceNameLower = serviceData.name?.toLowerCase();\n      const serviceCategoryLower = serviceData.category?.toLowerCase();\n      const serviceDescriptionLower = serviceData.description?.toLowerCase();\n\n      if ( (serviceNameLower && serviceNameLower.includes(keywordLower)) ||\n           (serviceCategoryLower && serviceCategoryLower.includes(keywordLower)) ||\n           (serviceDescriptionLower && serviceDescriptionLower.includes(keywordLower))\n         ) {\n        const serviceItem: ProductServiceInfo = {\n          id: docSnap.id,\n          name: serviceData.name,\n          type: serviceData.type as 'Layanan' | 'Produk',\n          category: serviceData.category,\n          price: serviceData.price,\n          description: serviceData.description || undefined,\n          pointsAwarded: serviceData.pointsAwarded || undefined,\n          estimatedDuration: serviceData.estimatedDuration || undefined,\n          variants: serviceData.variants?.map((v: any) => ({\n            name: v.name,\n            price: v.price,\n            pointsAwarded: v.pointsAwarded,\n            estimatedDuration: v.estimatedDuration,\n          })) || undefined,\n        };\n        \n        const validationResult = ProductServiceInfoSchema.safeParse(serviceItem);\n        if (validationResult.success) {\n          matchingServices.push(validationResult.data);\n        } else {\n          console.warn(`[findLayananByKeyword] Data layanan ${docSnap.id} tidak valid:`, validationResult.error.format());\n        }\n      }\n    });\n    return matchingServices;\n  } catch (error) {\n    console.error(\"[findLayananByKeyword] Error saat mencari layanan:\", error);\n    return [];\n  }\n}\n\nexport const cariInfoLayananTool = ai.defineTool(\n  {\n    name: 'cariInfoLayanan',\n    description: 'Mencari daftar layanan atau produk yang tersedia berdasarkan kata kunci. Berguna jika pelanggan bertanya layanan apa saja yang ada atau menyebutkan jenis layanan secara umum.',\n    inputSchema: CariInfoLayananInputSchema,\n    outputSchema: CariInfoLayananOutputSchema,\n  },\n  findLayananByKeyword\n);\n"],"names":[],"mappings":";;;;;AACA;;;;;;CAMC,GAED;AACA;AAAA;AACA;AACA;AAAA;AAEA;;;;;;;;;AAEA,qCAAqC;AACrC,MAAM,6BAA6B,iLAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC1C,SAAS,iLAAA,CAAA,IAAC,CAAC,MAAM,GAAG,GAAG,CAAC,GAAG,4CAA4C,QAAQ,CAAC;AAClF;AAGA,MAAM,8BAA8B,iLAAA,CAAA,IAAC,CAAC,KAAK,CAAC,6HAAA,CAAA,2BAAwB,EAAE,QAAQ,CAAC;AAG/E,eAAe,qBAAqB,KAA2B;IAC7D,MAAM,EAAE,OAAO,EAAE,GAAG;IACpB,MAAM,eAAe,QAAQ,WAAW,GAAG,IAAI;IAC/C,QAAQ,GAAG,CAAC,CAAC,wDAAwD,EAAE,aAAa,CAAC,CAAC;IAEtF,IAAI,CAAC,sHAAA,CAAA,KAAE,EAAE;QACP,QAAQ,KAAK,CAAC;QACd,OAAO,EAAE;IACX;IAEA,MAAM,mBAAyC,EAAE;IACjD,IAAI;QACF,MAAM,wBAAwB,CAAA,GAAA,iKAAA,CAAA,aAAU,AAAD,EAAE,sHAAA,CAAA,KAAE,EAAE;QAC7C,MAAM,IAAI,CAAA,GAAA,iKAAA,CAAA,QAAc,AAAD,EAAE;QACzB,MAAM,gBAAgB,MAAM,CAAA,GAAA,iKAAA,CAAA,UAAO,AAAD,EAAE;QAEpC,cAAc,OAAO,CAAC,CAAC;YACrB,MAAM,cAAc,QAAQ,IAAI;YAChC,MAAM,mBAAmB,YAAY,IAAI,EAAE;YAC3C,MAAM,uBAAuB,YAAY,QAAQ,EAAE;YACnD,MAAM,0BAA0B,YAAY,WAAW,EAAE;YAEzD,IAAK,AAAC,oBAAoB,iBAAiB,QAAQ,CAAC,iBAC9C,wBAAwB,qBAAqB,QAAQ,CAAC,iBACtD,2BAA2B,wBAAwB,QAAQ,CAAC,eAC7D;gBACH,MAAM,cAAkC;oBACtC,IAAI,QAAQ,EAAE;oBACd,MAAM,YAAY,IAAI;oBACtB,MAAM,YAAY,IAAI;oBACtB,UAAU,YAAY,QAAQ;oBAC9B,OAAO,YAAY,KAAK;oBACxB,aAAa,YAAY,WAAW,IAAI;oBACxC,eAAe,YAAY,aAAa,IAAI;oBAC5C,mBAAmB,YAAY,iBAAiB,IAAI;oBACpD,UAAU,YAAY,QAAQ,EAAE,IAAI,CAAC,IAAW,CAAC;4BAC/C,MAAM,EAAE,IAAI;4BACZ,OAAO,EAAE,KAAK;4BACd,eAAe,EAAE,aAAa;4BAC9B,mBAAmB,EAAE,iBAAiB;wBACxC,CAAC,MAAM;gBACT;gBAEA,MAAM,mBAAmB,6HAAA,CAAA,2BAAwB,CAAC,SAAS,CAAC;gBAC5D,IAAI,iBAAiB,OAAO,EAAE;oBAC5B,iBAAiB,IAAI,CAAC,iBAAiB,IAAI;gBAC7C,OAAO;oBACL,QAAQ,IAAI,CAAC,CAAC,oCAAoC,EAAE,QAAQ,EAAE,CAAC,aAAa,CAAC,EAAE,iBAAiB,KAAK,CAAC,MAAM;gBAC9G;YACF;QACF;QACA,OAAO;IACT,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,sDAAsD;QACpE,OAAO,EAAE;IACX;AACF;AAEO,MAAM,sBAAsB,mHAAA,CAAA,KAAE,CAAC,UAAU,CAC9C;IACE,MAAM;IACN,aAAa;IACb,aAAa;IACb,cAAc;AAChB,GACA;;;IAPW;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 554, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/handle-service-inquiry-flow.ts"],"sourcesContent":["'use server';\n/**\n * @fileOverview Sub-flow to handle detailed service inquiries.\n * Explains a service, lists packages using cariInfoLayananTool, and asks clarifying questions.\n */\nimport { ai } from '@/ai/genkit';\nimport * as z from 'zod';\nimport { cariInfoLayananTool, type CariInfoLayananInput, type CariInfoLayananOutput } from '@/ai/tools/cariInfoLayananTool'; // Assuming tools are now modular\nimport { DEFAULT_MAIN_PROMPT_ZOYA_SERVICE_INQUIRY_SUB_FLOW } from '@/types/aiSettings'; // We'll create this new prompt constant\n\n// Input schema for this sub-flow\nexport const HandleServiceInquiryInputSchema = z.object({\n  serviceKeyword: z.string().describe(\"Kata kunci layanan yang ditanyakan user, mis. 'coating', 'detailing'.\"),\n  customerQuery: z.string().describe(\"Pesan asli dari pelanggan, untuk konteks.\"),\n  knownMotorcycleInfo: z.object({\n    name: z.string(),\n    size: z.string().optional(),\n  }).optional().describe(\"Informasi motor pelanggan jika sudah diketahui (nama, ukuran).\"),\n});\nexport type HandleServiceInquiryInput = z.infer<typeof HandleServiceInquiryInputSchema>;\n\n// Output schema for this sub-flow\nexport const HandleServiceInquiryOutputSchema = z.object({\n  responseText: z.string().describe(\"Teks balasan yang dihasilkan oleh sub-flow ini.\"),\n});\nexport type HandleServiceInquiryOutput = z.infer<typeof HandleServiceInquiryOutputSchema>;\n\n// The sub-flow definition\nconst handleServiceInquiryFlowInternal = ai.defineFlow(\n  {\n    name: 'handleServiceInquiryFlowInternal',\n    inputSchema: HandleServiceInquiryInputSchema,\n    outputSchema: HandleServiceInquiryOutputSchema,\n  },\n  async (input) => {\n    console.log(\"[Sub-Flow:handleServiceInquiry] Input:\", input);\n\n    // Construct the prompt specifically for this sub-flow's task\n    // This prompt will guide the AI on how to use the serviceKeyword, customerQuery,\n    // knownMotorcycleInfo, and the cariInfoLayananTool.\n    let systemPrompt = DEFAULT_MAIN_PROMPT_ZOYA_SERVICE_INQUIRY_SUB_FLOW\n        .replace(\"{{{serviceKeyword}}}\", input.serviceKeyword)\n        .replace(\"{{{customerQuery}}}\", input.customerQuery);\n\n    if (input.knownMotorcycleInfo?.name) {\n        systemPrompt += `\\nINFO_MOTOR_DIKETAHUI: Nama motor pelanggan adalah ${input.knownMotorcycleInfo.name}.`;\n        if (input.knownMotorcycleInfo.size) {\n             systemPrompt += ` Ukurannya adalah ${input.knownMotorcycleInfo.size}.`;\n        }\n    } else {\n        systemPrompt += `\\nINFO_MOTOR_DIKETAHUI: Tipe motor pelanggan BELUM diketahui.`;\n    }\n    \n    systemPrompt += \"\\n\\nJAWABAN LANGSUNG (tanpa basa-basi perkenalan lagi, langsung ke poin):\";\n\n\n    const messagesForAI = [\n        { role: 'user' as const, content: [{text: systemPrompt}] } \n    ];\n\n    try {\n      const result = await ai.generate({\n        model: 'googleai/gemini-1.5-flash-latest',\n        messages: messagesForAI,\n        tools: [cariInfoLayananTool], // This sub-flow uses cariInfoLayananTool\n        toolChoice: 'auto', // Let AI decide if it needs the tool based on the sub-flow prompt\n        config: { temperature: 0.5 },\n      });\n\n      let responseText = result.text || \"Maaf, Zoya bingung mau jawab apa untuk info layanan itu.\";\n\n      const toolRequest = result.toolRequest;\n      if (toolRequest) {\n        console.log(\"[Sub-Flow:handleServiceInquiry] AI requested tool:\", toolRequest.name);\n        let toolOutputContent: any = \"Tool tidak dikenal atau input salah.\";\n\n        if (toolRequest.name === 'cariInfoLayanan' && toolRequest.input) {\n          // Directly call the implementation function of the tool\n          const layananOutput = await (cariInfoLayananTool.fn as Function)(toolRequest.input as CariInfoLayananInput);\n          toolOutputContent = layananOutput;\n        }\n        \n        const modelResponseAfterTool = await ai.generate({\n            model: 'googleai/gemini-1.5-flash-latest',\n            messages: [\n                ...messagesForAI,\n                result.message, // Previous AI message that included the tool request\n                {\n                    role: 'tool',\n                    content: [{\n                        toolResponse: {\n                            name: toolRequest.name,\n                            output: toolOutputContent,\n                        }\n                    }]\n                }\n            ],\n            config: {temperature: 0.5}\n        });\n        responseText = modelResponseAfterTool.text || \"Zoya nggak nemu jawaban bagus setelah pakai alat, coba tanya lagi ya.\";\n      }\n      \n      console.log(\"[Sub-Flow:handleServiceInquiry] Output responseText:\", responseText);\n      return { responseText };\n\n    } catch (error) {\n      console.error(\"[Sub-Flow:handleServiceInquiry] Error:\", error);\n      return { responseText: \"Maaf, ada sedikit kendala teknis saat Zoya cari info layanan.\" };\n    }\n  }\n);\n\n// Exported async wrapper function\nexport async function handleServiceInquiry(input: HandleServiceInquiryInput): Promise<HandleServiceInquiryOutput> {\n  return handleServiceInquiryFlowInternal(input);\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 691, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/cs-whatsapp-reply-flow.ts"],"sourcesContent":["'use server';\n/**\n * @fileOverview Flow AI utama untuk WhatsApp Customer Service QLAB.\n * Menggunakan tools modular dan bisa mendelegasikan ke sub-flow.\n */\nimport { ai } from '@/ai/genkit';\nimport * as z from 'zod';\nimport { db } from '@/lib/firebase';\nimport { doc, getDoc as getFirestoreDoc } from 'firebase/firestore';\nimport { DEFAULT_AI_SETTINGS } from '@/types/aiSettings';\n\n// Import tools modular\nimport { cariSizeMotorTool, type CariSizeMotorInput, type CariSizeMotorOutput } from '@/ai/tools/cari-size-motor-tool';\nimport { cariInfoLayananTool, type CariInfoLayananInput, type CariInfoLayananOutput } from '@/ai/tools/cariInfoLayananTool';\n\n// Import sub-flow dan tipenya\nimport { handleServiceInquiry, HandleServiceInquiryInputSchema, HandleServiceInquiryOutputSchema, type HandleServiceInquiryInput, type HandleServiceInquiryOutput } from './handle-service-inquiry-flow';\n\n// Skema internal untuk validasi input chat history di flow\nconst ChatMessageSchemaInternal = z.object({\n  role: z.enum(['user', 'model']),\n  content: z.string(),\n});\nexport type ChatMessage = z.infer<typeof ChatMessageSchemaInternal>;\n\n// Skema input utama untuk ZoyaChatFlow (digunakan oleh UI)\nconst ZoyaChatInputSchema = z.object({\n  messages: z.array(ChatMessageSchemaInternal).optional().describe(\"Riwayat percakapan lengkap, jika ada.\"),\n  customerMessage: z.string().min(1, \"Pesan pelanggan tidak boleh kosong.\").describe(\"Pesan terbaru dari customer.\"),\n  senderNumber: z.string().optional().describe(\"Nomor WhatsApp pengirim (opsional).\"),\n  mainPromptString: z.string().optional().describe(\"String prompt utama yang mungkin dikirim dari UI atau diambil dari Firestore.\"),\n  currentDate: z.string().optional(),\n  currentTime: z.string().optional(),\n  tomorrowDate: z.string().optional(),\n  dayAfterTomorrowDate: z.string().optional(),\n  // Tambahkan field untuk info motor yang sudah diketahui jika ada\n  knownMotorcycleInfo: z.object({\n    name: z.string(),\n    size: z.string().optional(),\n  }).optional().describe(\"Informasi motor pelanggan jika sudah diketahui dari interaksi sebelumnya atau database.\"),\n});\nexport type ZoyaChatInput = z.infer<typeof ZoyaChatInputSchema>; // Diexport untuk UI\n\n// Skema output untuk wrapper function (digunakan oleh UI)\nconst WhatsAppReplyOutputSchema = z.object({\n  suggestedReply: z.string().describe('Saran balasan yang dihasilkan AI untuk dikirim ke pelanggan.'),\n});\nexport type WhatsAppReplyOutput = z.infer<typeof WhatsAppReplyOutputSchema>; // Diexport untuk UI\n\n// Tool untuk mendelegasikan ke sub-flow handleServiceInquiry\nconst delegateServiceInquiryToSpecialistTool = ai.defineTool(\n  {\n    name: 'delegateServiceInquiryToSpecialist',\n    description: 'Gunakan tool ini jika pelanggan bertanya tentang jenis layanan secara umum (misalnya, \"coating itu apa?\", \"apa saja layanan detailing?\", \"info cuci dong\"). Tool ini akan membantu menjelaskan layanan tersebut, mencari paket yang relevan, dan menanyakan detail motor jika diperlukan.',\n    inputSchema: HandleServiceInquiryInputSchema, // Menggunakan input schema dari sub-flow\n    outputSchema: HandleServiceInquiryOutputSchema, // Menggunakan output schema dari sub-flow\n  },\n  async (input: HandleServiceInquiryInput) => {\n    console.log(\"[MainFlowTool:delegateServiceInquiry] Delegating to handleServiceInquiry sub-flow with input:\", input);\n    return handleServiceInquiry(input); // Memanggil sub-flow\n  }\n);\n\n\n// Flow utama\nconst zoyaChatFlow = ai.defineFlow(\n  {\n    name: 'zoyaChatFlow',\n    inputSchema: ZoyaChatInputSchema, // Menggunakan skema input yang diperbarui\n    outputSchema: z.string(), \n  },\n  async (input: ZoyaChatInput): Promise<string> => {\n    console.log(\"[CS-FLOW] zoyaChatFlow input. Customer Message:\", input.customerMessage, \"History Length:\", (input.messages || []).length);\n\n    const lastUserMessageContent = input.customerMessage || \n                                   (input.messages && input.messages.length > 0 ? input.messages[input.messages.length - 1].content : '');\n    if (!lastUserMessageContent || lastUserMessageContent.trim() === '') {\n      return \"Maaf, Zoya tidak menerima pesan yang jelas.\";\n    }\n\n    let dynamicContext = `INFO_UMUM_BENGKEL: QLAB Moto Detailing adalah bengkel perawatan dan detailing motor.`;\n    if (!db) {\n        console.warn(\"[CS-FLOW] Firestore DB (db) is not initialized. Some context might be missing.\");\n        dynamicContext += \" WARNING: Database tidak terhubung, info detail mungkin tidak akurat.\";\n    }\n    \n    const mainPromptFromSettings = input.mainPromptString || DEFAULT_AI_SETTINGS.mainPrompt;\n    const finalSystemPrompt = mainPromptFromSettings\n                                .replace(\"{{{dynamicContext}}}\", dynamicContext)\n                                .replace(\"{{{customerMessage}}}\", input.customerMessage) // Ini akan digantikan oleh pesan user di array `messages`\n                                .replace(\"{{{knownMotorcycleName}}}\", input.knownMotorcycleInfo?.name || \"belum diketahui\")\n                                .replace(\"{{{knownMotorcycleSize}}}\", input.knownMotorcycleInfo?.size || \"belum diketahui\");\n\n\n    const historyForAI = (input.messages || [])\n      .filter(msg => msg.content && msg.content.trim() !== '')\n      .map((msg) => ({\n        role: msg.role,\n        content: [{ text: msg.content }],\n    }));\n    \n    const messagesForAI = [\n      ...historyForAI,\n      { role: 'user' as const, content: [{ text: input.customerMessage }] }\n    ];\n\n    console.log(`[CS-FLOW] Calling ai.generate with model googleai/gemini-1.5-flash-latest. History Length: ${historyForAI.length}`);\n    console.log(`[CS-FLOW] System Prompt being used (simplified): ${finalSystemPrompt.substring(0, 300)}...`);\n\n    try {\n      const result = await ai.generate({\n        model: 'googleai/gemini-1.5-flash-latest',\n        prompt: finalSystemPrompt, \n        messages: messagesForAI,\n        tools: [cariSizeMotorTool, cariInfoLayananTool, delegateServiceInquiryToSpecialistTool], // Tools tersedia untuk AI\n        toolChoice: 'auto',\n        config: { temperature: 0.5 },\n      });\n\n      console.log(\"[CS-FLOW] Raw AI generate result:\", JSON.stringify(result, null, 2));\n      \n      let suggestedReply = result.text || \"\";\n      const toolRequest = result.toolRequest;\n\n      if (toolRequest) {\n        console.log(\"[CS-FLOW] AI requested a tool call:\", JSON.stringify(toolRequest, null, 2));\n        let toolOutputContent: any = \"Tool tidak dikenal atau input salah.\";\n        let toolUsedSuccessfully = false;\n\n        if (toolRequest.name === 'cariSizeMotor' && toolRequest.input) {\n          const sizeOutput = await (cariSizeMotorTool.fn as Function)(toolRequest.input as CariSizeMotorInput);\n          toolOutputContent = sizeOutput;\n          toolUsedSuccessfully = true;\n        } else if (toolRequest.name === 'cariInfoLayanan' && toolRequest.input) {\n          const layananOutput = await (cariInfoLayananTool.fn as Function)(toolRequest.input as CariInfoLayananInput);\n          toolOutputContent = layananOutput;\n          toolUsedSuccessfully = true;\n        } else if (toolRequest.name === 'delegateServiceInquiryToSpecialist' && toolRequest.input) {\n          const subFlowOutput = await (delegateServiceInquiryToSpecialistTool.fn as Function)(toolRequest.input as HandleServiceInquiryInput);\n          toolOutputContent = subFlowOutput; // Sub-flow's output is the tool's output\n          // Jika sub-flow mengembalikan responseText, kita mungkin mau langsung pakai itu\n          if (subFlowOutput && typeof subFlowOutput.responseText === 'string') {\n            suggestedReply = subFlowOutput.responseText; // Langsung gunakan balasan dari sub-flow\n            console.log(\"[CS-FLOW] Sub-flow returned responseText, using it directly:\", suggestedReply);\n            return suggestedReply; // Langsung return, tidak perlu panggil AI lagi untuk merangkai kata\n          }\n          toolUsedSuccessfully = true;\n        }\n\n        if (toolUsedSuccessfully && !(toolRequest.name === 'delegateServiceInquiryToSpecialist' && toolOutputContent?.responseText)) {\n          console.log(`[CS-FLOW] Tool ${toolRequest.name} output:`, JSON.stringify(toolOutputContent, null, 2));\n          // Panggil AI lagi dengan hasil tool\n          const modelResponseAfterTool = await ai.generate({\n            model: 'googleai/gemini-1.5-flash-latest',\n            prompt: finalSystemPrompt, // Bisa juga prompt yang lebih spesifik untuk merangkai hasil tool\n            messages: [ \n              ...messagesForAI, \n              result.message,  // Pesan AI sebelumnya (yang meminta tool)\n              { \n                role: 'tool',\n                content: [{\n                  toolResponse: {\n                    name: toolRequest.name,\n                    output: toolOutputContent, \n                  }\n                }]\n              }\n            ],\n            config: { temperature: 0.5 },\n          });\n          suggestedReply = modelResponseAfterTool.text || \"Zoya bingung setelah pakai alat, coba lagi ya.\";\n        } else if (!suggestedReply) {\n          suggestedReply = \"Maaf, Zoya tidak berhasil memproses permintaan alatnya atau tool tidak dikenal.\";\n        }\n      }\n\n      const finishReason = result.finishReason;\n      const safetyRatings = result.safetyRatings;\n      console.log(`[CS-FLOW] AI Finish Reason: ${finishReason}`);\n      if (safetyRatings && safetyRatings.length > 0) {\n        console.log('[CS-FLOW] AI Safety Ratings:', JSON.stringify(safetyRatings, null, 2));\n      }\n\n      if (!suggestedReply && finishReason !== \"stop\") {\n        console.error(`[CS-FLOW] ❌ AI generation failed or tool handling error. Finish Reason: ${finishReason}. Safety: ${JSON.stringify(safetyRatings)}`);\n        return \"Maaf, Zoya lagi agak bingung nih boskuu. Coba tanya lagi dengan cara lain ya, atau hubungi CS langsung.\";\n      }\n      return suggestedReply;\n\n    } catch (flowError: any) {\n        console.error(\"[CS-FLOW] ❌ Critical error dalam flow zoyaChatFlow:\", flowError);\n        if (flowError.cause) console.error(\"[CS-FLOW] Error Cause:\", JSON.stringify(flowError.cause, null, 2));\n        return `Waduh, Zoya lagi error nih, boskuu. Coba tanya lagi nanti ya. (Pesan Error: ${flowError.message || 'Kesalahan internal tidak diketahui'})`;\n    }\n  }\n);\n\n// Wrapper function yang akan dipanggil oleh UI atau API route\nexport async function generateWhatsAppReply(input: ZoyaChatInput): Promise<WhatsAppReplyOutput> {\n  console.log(\"[CS-FLOW] generateWhatsAppReply input:\", JSON.stringify(input, null, 2));\n\n  let mainPromptToUse = input.mainPromptString;\n\n  if (!mainPromptToUse) {\n    try {\n      if (db) {\n        const settingsDocRef = doc(db, 'appSettings', 'aiAgentConfig');\n        const docSnap = await getFirestoreDoc(settingsDocRef);\n        if (docSnap.exists() && docSnap.data()?.mainPrompt) {\n          mainPromptToUse = docSnap.data().mainPrompt;\n          console.log(\"[CS-FLOW] generateWhatsAppReply: Using mainPromptString from Firestore.\");\n        } else {\n          console.log(\"[CS-FLOW] generateWhatsAppReply: mainPrompt not found in Firestore or is empty. Checking default.\");\n          mainPromptToUse = DEFAULT_AI_SETTINGS.mainPrompt;\n          console.log(\"[CS-FLOW] generateWhatsAppReply: Using DEFAULT_AI_SETTINGS.mainPrompt.\");\n        }\n      } else { \n        console.log(\"[CS-FLOW] generateWhatsAppReply: Firestore (db) not available. Using default for mainPrompt.\");\n        mainPromptToUse = DEFAULT_AI_SETTINGS.mainPrompt;\n      }\n    } catch (error) {\n      console.error(\"[CS-FLOW] generateWhatsAppReply: Error fetching mainPrompt from Firestore. Using default.\", error);\n      mainPromptToUse = DEFAULT_AI_SETTINGS.mainPrompt;\n    }\n  } else {\n     console.log(\"[CS-FLOW] generateWhatsAppReply: Using mainPromptString directly from input.\");\n  }\n\n  const flowInput: ZoyaChatInput = {\n    ...input, // Teruskan semua properti input asli, termasuk knownMotorcycleInfo jika ada\n    messages: input.messages || [],\n    mainPromptString: mainPromptToUse,\n  };\n\n  try {\n    const replyText = await zoyaChatFlow(flowInput);\n    return { suggestedReply: replyText };\n  } catch (error: any) {\n    console.error(\"[CS-FLOW Wrapper] Error running zoyaChatFlow:\", error);\n    return { suggestedReply: `Maaf, Zoya sedang ada kendala teknis. (${error.message || 'Tidak diketahui'})` };\n  }\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 943, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/%28app%29/ai-cs-assistant/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {generateWhatsAppReply as '4053660f6447b38038e1d20965a3df3cd57a2a7b51'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 1007, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28app%29/ai-cs-assistant/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(app)/ai-cs-assistant/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(app)/ai-cs-assistant/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA0S,GACvU,wEACA","debugId":null}},
    {"offset": {"line": 1021, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28app%29/ai-cs-assistant/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(app)/ai-cs-assistant/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(app)/ai-cs-assistant/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAsR,GACnT,oDACA","debugId":null}},
    {"offset": {"line": 1035, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}